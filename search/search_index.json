{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Get Started With PayFORT If you are starting a new ecommerce or any other merchant site then you need a robust payment system that can capture not only customer's payment details but also helps you with various financial transaction needs of your customers such as recurring payments, financing purchase by the customer, one time payment etc. PayFORT helps you to build a robust payment system for your merchant site. With the help of PayFORT you can collect payment information conveniently and securely. It offers your customer the choice to pay in multiple currencies. Your customers can also select from available payment methods such as 3D secure, Apple Pay, Visa Checkout or MasterPass. You can signup for a PayFORT test account by navigating to this link If you want to integrate payment systems with your site then you can sign up for a live account by visiting this link PayFORT Payment Features With PayFORT you need not redirect your customers to third party website for payment and they will be able to pay on the payment page of your website. You are no longer required to get your website PCI-Compliant. Since PayFORT is PCI-DSS compliant it means your business transactions will be PCI-Compliant automatically. It offers payment solutions for various shopping cart applications including your own in house shopping cart application. \u200b Figure 1 \u200b Shopping cart applications supported by PayFort PayFORT Integration Type PayFORT offers you two approaches for integrations with your merchant site as mentioned below: By using PayFORT Merchant Page By using PayFORT Merchant Page 2 Using Merchant Page PayFORT Merchant Page integration uses iFrame or internal frame that helps you to create a customizable payment form. It gives the customer freedom to provide their payment details on your site's checkout page. For more details checkout the Merchant Page Integration. Merchant Page Integration Using Merchant Page 2 Merchant Page 2 provides you with the flexibility to develop your own custom form for collecting the customer's card details. For more details visit the Merchant Page 2 Integration. Merchant Page 2 Integration Get Started With Testing If you have developed your payment page then you can proceed with creation of a testing account by visiting link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Get Started With PayFORT"},{"location":"#get-started-with-payfort","text":"If you are starting a new ecommerce or any other merchant site then you need a robust payment system that can capture not only customer's payment details but also helps you with various financial transaction needs of your customers such as recurring payments, financing purchase by the customer, one time payment etc. PayFORT helps you to build a robust payment system for your merchant site. With the help of PayFORT you can collect payment information conveniently and securely. It offers your customer the choice to pay in multiple currencies. Your customers can also select from available payment methods such as 3D secure, Apple Pay, Visa Checkout or MasterPass. You can signup for a PayFORT test account by navigating to this link If you want to integrate payment systems with your site then you can sign up for a live account by visiting this link","title":"Get Started With PayFORT"},{"location":"#payfort-payment-features","text":"With PayFORT you need not redirect your customers to third party website for payment and they will be able to pay on the payment page of your website. You are no longer required to get your website PCI-Compliant. Since PayFORT is PCI-DSS compliant it means your business transactions will be PCI-Compliant automatically. It offers payment solutions for various shopping cart applications including your own in house shopping cart application. \u200b Figure 1 \u200b Shopping cart applications supported by PayFort","title":"PayFORT Payment Features"},{"location":"#payfort-integration-type","text":"PayFORT offers you two approaches for integrations with your merchant site as mentioned below: By using PayFORT Merchant Page By using PayFORT Merchant Page 2","title":"PayFORT Integration Type"},{"location":"#using-merchant-page","text":"PayFORT Merchant Page integration uses iFrame or internal frame that helps you to create a customizable payment form. It gives the customer freedom to provide their payment details on your site's checkout page. For more details checkout the Merchant Page Integration. Merchant Page Integration","title":"Using Merchant Page"},{"location":"#using-merchant-page-2","text":"Merchant Page 2 provides you with the flexibility to develop your own custom form for collecting the customer's card details. For more details visit the Merchant Page 2 Integration. Merchant Page 2 Integration","title":"Using Merchant Page 2"},{"location":"#get-started-with-testing","text":"If you have developed your payment page then you can proceed with creation of a testing account by visiting link","title":"Get Started With Testing"},{"location":"#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"Installmentsparameters/","text":"Installments Redirection Service - Request You have to include the following parameters in the Purchase - Request Parameters which you will send to PayFort: ATTRIBUTES Description installments Alpha Optional max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE Installments Redirection Service - Response Placeholder : Provide sample JSON response The following parameters will be returned in PayFort\u2019s JSON Response in addition to the Purchase - Response Parameters : ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE number_of_installments Numeric max: 2 The number of installments the customer has selected in the payment page. Example: 3 Installments Merchant page Service - Request Placeholder: Provide sample code for request Include the following parameters in the Merchant page - Request Parameters you will send to PayFort: ATTRIBUTES Description installments Alpha Mandatory max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD customer_country_code Alpha Optional Max: 3 The Customer\u2019s country code. ISO 3 digit country code. Example: JOR Installments Merchant page Service - Response Placeholder: Please provide sample JSON response. The following parameters will be returned in PayFort\u2019s Response in addition to the Merchant Page - Response Parameters ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE amount Numeric Max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD customer_country_code Alpha Max: 3 The Customer\u2019s country code. ISO 3-digit country code. Example: JOR number_of_installments Numeric Max: 2 The number of installments the customer has selected in payment page. Example: 3 plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE Installments Purchase Service - Request Placeholder: Sample code for merchant page operations request For transactions being carried out under operations you have to Include the following parameters in the Operation - Request Parameters while sending to PayFort: ATTRIBUTES Description installments Alpha Mandatory max: 10 Used to specify the type of the Installments service. Possible/ expected values: YES plan_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE Installments Purchase Service - Response Placeholder: Provide sample JSON response sent from the PayFORT server. The following parameters will be returned in PayFort\u2019s Response in addition to the Operation - Response Parameters : ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: YES plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE number_of_installments Numeric Max: 2 The number of installments the customer has selected in payment page. Example: 3 Get Installments Plans API - Request Placeholder: Provide the sample code for the request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description query_command Alpha Mandatory max: 50 Query operations command. Possible/ expected values: GET_INSTALLMENTS_PLANS Special characters: _ access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a amount Numeric Optional max: 10 The transaction\u2019s amount.*Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Optional max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha Optional max: 2 The checkout page and messages language. Possible/ expected values: en / ar issuer_code Alphanumeric Optional max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE Get Installments Plans API - Response Placeholder: Provide sample JSON response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 Query operations command. Possible/ expected values: GET_INSTALLMENTS_PLANS access_code Alphanumeric max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a amount Numeric max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar issuer_code Alphanumeric max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). installment_detail List max: - This parameter is a parent parameter for other parameters that contain the details of installment. Possible/ expected values: (Please refer to the below section issuer_detal ). Issuer Detail You can use the following attributes to know the details of the installment services issuers. Placeholder: Provide sample code for issuer details This parameter is a sub parameter of the installment_detail parameter, the table below shows the children parameters of the issuer_detail : ATTRIBUTES Description issuer_code Alphanumeric max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE issuer_name_ar Alphanumeric max: 50 The issuer name in Arabic. Example: Issuer2\u0639\u0631\u0628\u064a issuer_name_en Alphanumeric max: 50 The issuer name in English. Example: Issuer2 terms_and_condition_ar Alphanumeric max: 200 The Arabic terms and condition URL. Example: http://www.gmail.com terms_and_condition_en Alphanumeric max: 200 The English terms and condition URL. Example: http://www.yahoo.com country_code Alpha max: 3 The country\u2019s code in ISO 3-digits. Example: JOR issuer_logo_ar Alphanumeric max: 350 The issuer logo for the Arabic version. Example: https://payfort-fort-images-lt.s3.amazonaws.com/frontend/files/logos/issuer/logo_en_164.jpg issuer_logo_en Alphanumeric max: 350 The issuer logo for the English version. Example: https://payfort-fort-images-lt.s3.amazonaws.com/frontend/files/logos/issuer/logo_en_164.jpg banking_system Alpha max: 11 The type of institutions that provide financial services. Possible/ expected values: -Non Islamic -Islamic formula Alphanumeric max: 100 The equation of calculating the installment value. Example: (amount +(amount *effective rate/100))/period Please check the note below the table for more details. plan_details List max: - This parameter contain all the plans for this issuer. Possible/ expected values: (Please refer to next plan_detail section). bins List max: - List of 6 digits of the card number related to this issuer. Possible/ expected values: (Please refer to next bins section). confirmation_message_ar Alphanumeric max: 500 This parameter shows to the customer the confirmation message in Arabic. disclaimer_message_ar Alphanumeric max: 500 This parameter shows to the customer the disclaimer message in Arabic. processing_fees_message_ar Alphanumeric max: 500 This parameter shows to the customer the processing fee message in Arabic. confirmation_message_en Alphanumeric max: 500 This parameter shows the customer to the confirmation message in English. disclaimer_message_en Alphanumeric max: 500 This parameter shows to the customer the disclaimer message in English. processing_fees_message_en Alphanumeric max: 500 This parameter shows to the customer the processing fee message in English. Plan Details If you want to fetch details of various installment plans you can use the attributes in this section and send in your request to the PayFORT server. Placeholder: provide sample code for plan details. This parameter is a sub parameter of the issuer_detail parameter, the table below shows the children parameters of the plan_detail : ATTRIBUTES Description plan_code Alphanumeric max: 8 A code that refers to the \u201cinstallments plan\u201d. Example: NNNN89JJ currency_code Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD number_of_installment Numeric max: 2 The number of installments. Example: 3 fees_type Alpha max: 10 The type of the fee. Possible/ expected values: -Fixed -Percentage *Please refer to the below formulas section to know the difference. fees_amount Numeric max: 10 The amount of the fee. Example: 11 processing_fees_type Alpha max: 10 The type of the processing fee. Possible/ expected values: -Fixed -Percentage *Please refer to the below formulas section to know the difference. processing_fees_amount Numeric max: 10 The amount of the processing fee. Example: 11 rate_type Alpha max: 15 The type of the rate. Possible/ expected values: -Reducing Balance -Flat plan_merchant_type Alpha max: 11 The type of agreement between the plan and Merchant. Possible/ expected values: -Partner -Non Partner plan_type Alpha max: 12 The type of the installments plan. Possible/ expected values: -Local -Cross-Border fee_display_value Numeric max: The display value that represent the fees amount. Example: 11.0 minimum_amount Numeric max: 10 The minimum range of the accepted amount for this plan. Example: 11 maximum_amount Numeric max: 10 The maximum range of the accepted amount for this plan. Example: 110000000 amountPerMonth Numeric max: 10 The payable amount per month. Example: 3.00 Bins Details This section will help you to capture the details of the credit card that customer will use for availing the installment service. You have to use the attributes in your request to fetch the details of the credit card. Placeholder: provide sample code for bins details. This parameter is a sub parameter of the issuer_detail parameter, the table below shows the children parameters of the bins : ATTRIBUTES Description bin Numeric max: 6 The first 6 digits of the card number. Example: 478773 currency_code Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: JOR card_brand_code Alpha max: 16 The type of the credit card. Possible/ expected values: -VISA -Master Card -American Express Installment Service For Merchant Page 2.0 Operations - Request You can use the endpoints to integrate and send request for Merchant Page 2.0 operations. Placeholder: Provide sample code for merchant page 2.0 operations for installment service. Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description command Alpha Mandatory max: 20 Command. Possible/ expected values: PURCHASE access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Mandatory Max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + token_name Alphanumeric Mandatory Max: 100 The Token received from the Tokenization process. Example: Op9Vmp Special characters: _ - . @ installments Alpha Mandatory Max: 10 Used to specify the type of the Installments service. Possible/ expected values: HOSTED issuer_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE plan_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ customer_ip Alphanumeric Mandatory max: 45 It holds the customer\u2019s IP address. It\u2019s Mandatory, if the fraud service is active. We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a payment_option Alpha Optional Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX eci Alpha Optional Max: 16 Ecommerce indicator. Possible/ expected values: ECOMMERCE order_description Alphanumeric Optional Max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space card_security_code Numeric Optional Max: 4 A security code for the card. * Only AMEX accepts card security code of 4 digits. Example: 123 customer_name Alpha Optional Max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space merchant_extra Alphanumeric Optional Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra1 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra2 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra3 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra4 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra5 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ remember_me Alpha Optional Max: 3 This parameter provides you with an indication to whether to save this token for the user based on the user selection. *The Tokenization service MUST be activated in order to be able to send \u201cremember_me\u201d parameter. Possible/ expected values: -YES -NO phone_number Alphanumeric Optional max: 19 The customer\u2019s phone number. Example: 00962797219966 Special characters: + - ( ) Space settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Special characters: - _ . return_url Alphanumeric Optional Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Installment Service For Merchant Page 2.0 Operations - Response Placeholder: Provide sample JSON response for merchant page 2.0 operations for installments. The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description command Alpha max: 20 Command. Possible/ expected values: PURCHASE access_code Alphanumeric Max: 20 The ID of the Merchant. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 amount Numeric Max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Max: 254 The customer\u2019s email. Example: customer1@domain.com token_name Alphanumeric max: 100 The Token received from the Tokenization process. Example: COp9Vmp installments Alpha Max: 10 Used to specify the type of the Installments service. Possible/ expected values: HOSTED issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ customer_ip Alphanumeric max: 45 It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: d7c185c475ac0e3 fort_id Numeric Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 payment_option Alpha Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX eci Alpha Max: 16 Ecommerce indicator. Possible/ expected values: ECOMMERCE order_description Alphanumeric Max: 150 It holds the description of the order. Example: iPhone 6-S authorization_code Alphanumeric Max: 100 The authorization code returned from the 3rd party. Example: P1000000000000372136 response_message Alphanumeric Max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 customer_name Alpha Max: 40 The customer\u2019s name. Example: John Smith merchant_extra Alphanumeric Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra1 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra2 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra3 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra4 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra5 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Max: 19 The masked credit card\u2019s number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses card_holder_name Alpha Max: 50 The card holder name. Example: John Smith 3ds_url Alphanumeric Max: 300 The URL where the Merchant redirects a customer whose card is 3-D Secure for authentication. Example: http://www.3dsecure.com remember_me Alpha Max: 3 This parameter provides you with an indication to whether to save this token for the user based on the user selection. Possible/ expected values: - YES - NO phone_number Alphanumeric max: 19 The customer\u2019s phone number. Example: 00962797219966 settlement_reference Alphanumeric max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-. Installments Hosted for Trusted \u2013 Request Placeholder: Please provide sample code for trusted channel partner request for installment. First, you need to send a [Get Instalments Plans API](https://docs.payfort.com/docs/api/build/index.html?shell#get-installments-plans-api) request; to get the instalments details. Include the following input parameters in the [Trusted Channel \u2013 Request](https://docs.payfort.com/docs/api/build/index.html?shell#trusted-channel-request) Parameters you will send to PayFort: ATTRIBUTES Description installments Alpha Mandatory Max: 10 Used to specify the type of the Installments service. Possible/ expected values: HOSTED issuer_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE plan_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ Installments Hosted for Trusted \u2013 Response The following parameters will be returned in PayFort\u2019s Response in addition to Trusted Channel \u2013 Response parameters: ATTRIBUTES Description installments Alpha Max: 10 Used to specify the type of the Installments service. Possible/ expected values: HOSTED issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ","title":"Installmentsparameters"},{"location":"Installmentsparameters/#installments-redirection-service-request","text":"You have to include the following parameters in the Purchase - Request Parameters which you will send to PayFort: ATTRIBUTES Description installments Alpha Optional max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE","title":"Installments Redirection Service - Request"},{"location":"Installmentsparameters/#installments-redirection-service-response","text":"Placeholder : Provide sample JSON response The following parameters will be returned in PayFort\u2019s JSON Response in addition to the Purchase - Response Parameters : ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE number_of_installments Numeric max: 2 The number of installments the customer has selected in the payment page. Example: 3","title":"Installments Redirection Service - Response"},{"location":"Installmentsparameters/#installments-merchant-page-service-request","text":"Placeholder: Provide sample code for request Include the following parameters in the Merchant page - Request Parameters you will send to PayFort: ATTRIBUTES Description installments Alpha Mandatory max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD customer_country_code Alpha Optional Max: 3 The Customer\u2019s country code. ISO 3 digit country code. Example: JOR","title":"Installments Merchant page Service - Request"},{"location":"Installmentsparameters/#installments-merchant-page-service-response","text":"Placeholder: Please provide sample JSON response. The following parameters will be returned in PayFort\u2019s Response in addition to the Merchant Page - Response Parameters ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE amount Numeric Max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD customer_country_code Alpha Max: 3 The Customer\u2019s country code. ISO 3-digit country code. Example: JOR number_of_installments Numeric Max: 2 The number of installments the customer has selected in payment page. Example: 3 plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE","title":"Installments Merchant page Service - Response"},{"location":"Installmentsparameters/#installments-purchase-service-request","text":"Placeholder: Sample code for merchant page operations request For transactions being carried out under operations you have to Include the following parameters in the Operation - Request Parameters while sending to PayFort: ATTRIBUTES Description installments Alpha Mandatory max: 10 Used to specify the type of the Installments service. Possible/ expected values: YES plan_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE","title":"Installments Purchase Service - Request"},{"location":"Installmentsparameters/#installments-purchase-service-response","text":"Placeholder: Provide sample JSON response sent from the PayFORT server. The following parameters will be returned in PayFort\u2019s Response in addition to the Operation - Response Parameters : ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: YES plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE number_of_installments Numeric Max: 2 The number of installments the customer has selected in payment page. Example: 3","title":"Installments Purchase Service - Response"},{"location":"Installmentsparameters/#get-installments-plans-api-request","text":"Placeholder: Provide the sample code for the request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description query_command Alpha Mandatory max: 50 Query operations command. Possible/ expected values: GET_INSTALLMENTS_PLANS Special characters: _ access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a amount Numeric Optional max: 10 The transaction\u2019s amount.*Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Optional max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha Optional max: 2 The checkout page and messages language. Possible/ expected values: en / ar issuer_code Alphanumeric Optional max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE","title":"Get Installments Plans API - Request"},{"location":"Installmentsparameters/#get-installments-plans-api-response","text":"Placeholder: Provide sample JSON response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 Query operations command. Possible/ expected values: GET_INSTALLMENTS_PLANS access_code Alphanumeric max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a amount Numeric max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar issuer_code Alphanumeric max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). installment_detail List max: - This parameter is a parent parameter for other parameters that contain the details of installment. Possible/ expected values: (Please refer to the below section issuer_detal ).","title":"Get Installments Plans API - Response"},{"location":"Installmentsparameters/#issuer-detail","text":"You can use the following attributes to know the details of the installment services issuers. Placeholder: Provide sample code for issuer details This parameter is a sub parameter of the installment_detail parameter, the table below shows the children parameters of the issuer_detail : ATTRIBUTES Description issuer_code Alphanumeric max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE issuer_name_ar Alphanumeric max: 50 The issuer name in Arabic. Example: Issuer2\u0639\u0631\u0628\u064a issuer_name_en Alphanumeric max: 50 The issuer name in English. Example: Issuer2 terms_and_condition_ar Alphanumeric max: 200 The Arabic terms and condition URL. Example: http://www.gmail.com terms_and_condition_en Alphanumeric max: 200 The English terms and condition URL. Example: http://www.yahoo.com country_code Alpha max: 3 The country\u2019s code in ISO 3-digits. Example: JOR issuer_logo_ar Alphanumeric max: 350 The issuer logo for the Arabic version. Example: https://payfort-fort-images-lt.s3.amazonaws.com/frontend/files/logos/issuer/logo_en_164.jpg issuer_logo_en Alphanumeric max: 350 The issuer logo for the English version. Example: https://payfort-fort-images-lt.s3.amazonaws.com/frontend/files/logos/issuer/logo_en_164.jpg banking_system Alpha max: 11 The type of institutions that provide financial services. Possible/ expected values: -Non Islamic -Islamic formula Alphanumeric max: 100 The equation of calculating the installment value. Example: (amount +(amount *effective rate/100))/period Please check the note below the table for more details. plan_details List max: - This parameter contain all the plans for this issuer. Possible/ expected values: (Please refer to next plan_detail section). bins List max: - List of 6 digits of the card number related to this issuer. Possible/ expected values: (Please refer to next bins section). confirmation_message_ar Alphanumeric max: 500 This parameter shows to the customer the confirmation message in Arabic. disclaimer_message_ar Alphanumeric max: 500 This parameter shows to the customer the disclaimer message in Arabic. processing_fees_message_ar Alphanumeric max: 500 This parameter shows to the customer the processing fee message in Arabic. confirmation_message_en Alphanumeric max: 500 This parameter shows the customer to the confirmation message in English. disclaimer_message_en Alphanumeric max: 500 This parameter shows to the customer the disclaimer message in English. processing_fees_message_en Alphanumeric max: 500 This parameter shows to the customer the processing fee message in English.","title":"Issuer Detail"},{"location":"Installmentsparameters/#plan-details","text":"If you want to fetch details of various installment plans you can use the attributes in this section and send in your request to the PayFORT server. Placeholder: provide sample code for plan details. This parameter is a sub parameter of the issuer_detail parameter, the table below shows the children parameters of the plan_detail : ATTRIBUTES Description plan_code Alphanumeric max: 8 A code that refers to the \u201cinstallments plan\u201d. Example: NNNN89JJ currency_code Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD number_of_installment Numeric max: 2 The number of installments. Example: 3 fees_type Alpha max: 10 The type of the fee. Possible/ expected values: -Fixed -Percentage *Please refer to the below formulas section to know the difference. fees_amount Numeric max: 10 The amount of the fee. Example: 11 processing_fees_type Alpha max: 10 The type of the processing fee. Possible/ expected values: -Fixed -Percentage *Please refer to the below formulas section to know the difference. processing_fees_amount Numeric max: 10 The amount of the processing fee. Example: 11 rate_type Alpha max: 15 The type of the rate. Possible/ expected values: -Reducing Balance -Flat plan_merchant_type Alpha max: 11 The type of agreement between the plan and Merchant. Possible/ expected values: -Partner -Non Partner plan_type Alpha max: 12 The type of the installments plan. Possible/ expected values: -Local -Cross-Border fee_display_value Numeric max: The display value that represent the fees amount. Example: 11.0 minimum_amount Numeric max: 10 The minimum range of the accepted amount for this plan. Example: 11 maximum_amount Numeric max: 10 The maximum range of the accepted amount for this plan. Example: 110000000 amountPerMonth Numeric max: 10 The payable amount per month. Example: 3.00","title":"Plan Details"},{"location":"Installmentsparameters/#bins-details","text":"This section will help you to capture the details of the credit card that customer will use for availing the installment service. You have to use the attributes in your request to fetch the details of the credit card. Placeholder: provide sample code for bins details. This parameter is a sub parameter of the issuer_detail parameter, the table below shows the children parameters of the bins : ATTRIBUTES Description bin Numeric max: 6 The first 6 digits of the card number. Example: 478773 currency_code Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: JOR card_brand_code Alpha max: 16 The type of the credit card. Possible/ expected values: -VISA -Master Card -American Express","title":"Bins Details"},{"location":"Installmentsparameters/#installment-service-for-merchant-page-20-operations-request","text":"You can use the endpoints to integrate and send request for Merchant Page 2.0 operations. Placeholder: Provide sample code for merchant page 2.0 operations for installment service. Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description command Alpha Mandatory max: 20 Command. Possible/ expected values: PURCHASE access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Mandatory Max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + token_name Alphanumeric Mandatory Max: 100 The Token received from the Tokenization process. Example: Op9Vmp Special characters: _ - . @ installments Alpha Mandatory Max: 10 Used to specify the type of the Installments service. Possible/ expected values: HOSTED issuer_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE plan_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ customer_ip Alphanumeric Mandatory max: 45 It holds the customer\u2019s IP address. It\u2019s Mandatory, if the fraud service is active. We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a payment_option Alpha Optional Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX eci Alpha Optional Max: 16 Ecommerce indicator. Possible/ expected values: ECOMMERCE order_description Alphanumeric Optional Max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space card_security_code Numeric Optional Max: 4 A security code for the card. * Only AMEX accepts card security code of 4 digits. Example: 123 customer_name Alpha Optional Max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space merchant_extra Alphanumeric Optional Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra1 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra2 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra3 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra4 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra5 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ remember_me Alpha Optional Max: 3 This parameter provides you with an indication to whether to save this token for the user based on the user selection. *The Tokenization service MUST be activated in order to be able to send \u201cremember_me\u201d parameter. Possible/ expected values: -YES -NO phone_number Alphanumeric Optional max: 19 The customer\u2019s phone number. Example: 00962797219966 Special characters: + - ( ) Space settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Special characters: - _ . return_url Alphanumeric Optional Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Installment Service For Merchant Page 2.0 Operations - Request"},{"location":"Installmentsparameters/#installment-service-for-merchant-page-20-operations-response","text":"Placeholder: Provide sample JSON response for merchant page 2.0 operations for installments. The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description command Alpha max: 20 Command. Possible/ expected values: PURCHASE access_code Alphanumeric Max: 20 The ID of the Merchant. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 amount Numeric Max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Max: 254 The customer\u2019s email. Example: customer1@domain.com token_name Alphanumeric max: 100 The Token received from the Tokenization process. Example: COp9Vmp installments Alpha Max: 10 Used to specify the type of the Installments service. Possible/ expected values: HOSTED issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ customer_ip Alphanumeric max: 45 It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: d7c185c475ac0e3 fort_id Numeric Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 payment_option Alpha Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX eci Alpha Max: 16 Ecommerce indicator. Possible/ expected values: ECOMMERCE order_description Alphanumeric Max: 150 It holds the description of the order. Example: iPhone 6-S authorization_code Alphanumeric Max: 100 The authorization code returned from the 3rd party. Example: P1000000000000372136 response_message Alphanumeric Max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 customer_name Alpha Max: 40 The customer\u2019s name. Example: John Smith merchant_extra Alphanumeric Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra1 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra2 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra3 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra4 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra5 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Max: 19 The masked credit card\u2019s number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses card_holder_name Alpha Max: 50 The card holder name. Example: John Smith 3ds_url Alphanumeric Max: 300 The URL where the Merchant redirects a customer whose card is 3-D Secure for authentication. Example: http://www.3dsecure.com remember_me Alpha Max: 3 This parameter provides you with an indication to whether to save this token for the user based on the user selection. Possible/ expected values: - YES - NO phone_number Alphanumeric max: 19 The customer\u2019s phone number. Example: 00962797219966 settlement_reference Alphanumeric max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-.","title":"Installment Service For Merchant Page 2.0 Operations - Response"},{"location":"Installmentsparameters/#installments-hosted-for-trusted-request","text":"Placeholder: Please provide sample code for trusted channel partner request for installment. First, you need to send a [Get Instalments Plans API](https://docs.payfort.com/docs/api/build/index.html?shell#get-installments-plans-api) request; to get the instalments details. Include the following input parameters in the [Trusted Channel \u2013 Request](https://docs.payfort.com/docs/api/build/index.html?shell#trusted-channel-request) Parameters you will send to PayFort: ATTRIBUTES Description installments Alpha Mandatory Max: 10 Used to specify the type of the Installments service. Possible/ expected values: HOSTED issuer_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE plan_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ","title":"Installments Hosted for Trusted \u2013 Request"},{"location":"Installmentsparameters/#installments-hosted-for-trusted-response","text":"The following parameters will be returned in PayFort\u2019s Response in addition to Trusted Channel \u2013 Response parameters: ATTRIBUTES Description installments Alpha Max: 10 Used to specify the type of the Installments service. Possible/ expected values: HOSTED issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ","title":"Installments Hosted for Trusted \u2013 Response"},{"location":"aciredfraud/","text":"What is it? You can safeguard your customer's payments from digital frauds by using basic fraud management service and ACI Red Fraud Screening. ACI ReD service adds additional layer of fraud prevention and can be used in combination of the basic fraud management service. ACI ReD is a reliable Fraud Screening and Prevention service that will further help safeguard your online payments and minimize chargebacks. It is designed to meet the needs of e-commerce Merchants as well as PSPs. ReD focuses on protecting the Merchant\u2019s revenues and support the growth of their business, not to mention enhancing their Customer experience and boosting Customer satisfaction. Integration Flow Placeholder: Provide description and Integration flow, process flow diagram. ACI ReD Fraud - Request You can take help of PayFORT API to create ACI ReD Fraud management and prevention. Just create a Request and provide input parameters. Send the request to the PayFORT system which will return a response. You can check out the details about the input parameters by visiting the link Placeholder: Please provide sample code for ACI ReD Fraud - Request The fraud_extra fields are custom fields as their values depend on the sector. ACI ReD Cart Fraud - Request Placeholder: Provide sample ACI ReD Cart Fraud- Request code. You can check out the details about the input parameters by visiting the link ACI ReD Fraud - Response Placeholder: Provide sample response sent by PayFORT server. You can check out the details about the response parameters by visiting the link Cart Details Example Value You can also fetch Cart details and the value of the cart Placeholder: Provide sample code for fetching cart details and cart value. The following is an example value of the cart_details : {cart_items: [{item_quantity:1, item_description:\u2018item desc\u2019, item_price:50}, {item_quantity:2, item_description:'item desc\u2019, item_price:50}]} Device fingerprint script Through this service you can also generate device fingerprint from which transaction is being taken place. This helps to detect any fraud. The following is the script you should use to generate the device fingerprint: <input type=\u201chidden\u201d id=\"device_fingerprint\u201d name=\u201cdevice_fingerprint\u201d/> The value of the device fingerprint hidden field will be calculated from the above script, you should take this value and send it to PayFort. Please don\u2019t edit on the values in the script below. <script type=\u201ctext/javascript\u201d>var io_bbout_element_id = 'device_fingerprint\u2019;//the input id will be used to collect the device fingerprint valuevar io_install_stm = false;var io_exclude_stm = 0;//prevent the iovation Active X control from running on either Windowsvar io_install_flash = false;var io_enable_rip = true;// collect real ip information</script><script type=\u201ctext/javascript\u201d src=\u201chttps://mpsnare.iesnare.com/snare.js\u201d></script> Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"ACI Red Fraud(Protect+)"},{"location":"aciredfraud/#what-is-it","text":"You can safeguard your customer's payments from digital frauds by using basic fraud management service and ACI Red Fraud Screening. ACI ReD service adds additional layer of fraud prevention and can be used in combination of the basic fraud management service. ACI ReD is a reliable Fraud Screening and Prevention service that will further help safeguard your online payments and minimize chargebacks. It is designed to meet the needs of e-commerce Merchants as well as PSPs. ReD focuses on protecting the Merchant\u2019s revenues and support the growth of their business, not to mention enhancing their Customer experience and boosting Customer satisfaction.","title":"What is it?"},{"location":"aciredfraud/#integration-flow","text":"Placeholder: Provide description and Integration flow, process flow diagram.","title":"Integration Flow"},{"location":"aciredfraud/#aci-red-fraud-request","text":"You can take help of PayFORT API to create ACI ReD Fraud management and prevention. Just create a Request and provide input parameters. Send the request to the PayFORT system which will return a response. You can check out the details about the input parameters by visiting the link Placeholder: Please provide sample code for ACI ReD Fraud - Request The fraud_extra fields are custom fields as their values depend on the sector.","title":"ACI ReD Fraud - Request"},{"location":"aciredfraud/#aci-red-cart-fraud-request","text":"Placeholder: Provide sample ACI ReD Cart Fraud- Request code. You can check out the details about the input parameters by visiting the link","title":"ACI ReD Cart Fraud - Request"},{"location":"aciredfraud/#aci-red-fraud-response","text":"Placeholder: Provide sample response sent by PayFORT server. You can check out the details about the response parameters by visiting the link","title":"ACI ReD Fraud - Response"},{"location":"aciredfraud/#cart-details-example-value","text":"You can also fetch Cart details and the value of the cart Placeholder: Provide sample code for fetching cart details and cart value. The following is an example value of the cart_details : {cart_items: [{item_quantity:1, item_description:\u2018item desc\u2019, item_price:50}, {item_quantity:2, item_description:'item desc\u2019, item_price:50}]}","title":"Cart Details Example Value"},{"location":"aciredfraud/#device-fingerprint-script","text":"Through this service you can also generate device fingerprint from which transaction is being taken place. This helps to detect any fraud. The following is the script you should use to generate the device fingerprint: <input type=\u201chidden\u201d id=\"device_fingerprint\u201d name=\u201cdevice_fingerprint\u201d/> The value of the device fingerprint hidden field will be calculated from the above script, you should take this value and send it to PayFort. Please don\u2019t edit on the values in the script below. <script type=\u201ctext/javascript\u201d>var io_bbout_element_id = 'device_fingerprint\u2019;//the input id will be used to collect the device fingerprint valuevar io_install_stm = false;var io_exclude_stm = 0;//prevent the iovation Active X control from running on either Windowsvar io_install_flash = false;var io_enable_rip = true;// collect real ip information</script><script type=\u201ctext/javascript\u201d src=\u201chttps://mpsnare.iesnare.com/snare.js\u201d></script>","title":"Device fingerprint script"},{"location":"aciredfraud/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"aciredfraud/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"aciredfraudparameters/","text":"ACI ReD Fraud - Request The fraud_extra fields are custom fields as their values depend on the sector. Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description customer_type Alpha Optional max: 1 This parameter is required if any customer detail is present. Example: B customer_id Alphanumeric Optional max: 16 The Customer\u2019s ID/ account number. Example: Au8vJ9HxLo Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_first_name Alpha Optional max: 30 The Customer\u2019s first name. Example: Osama Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_middle_initial Alpha Optional max: 1 The Customer\u2019s middle name\u2019s initial. Example: M Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_last_name Alpha Optional max: 30 The Customer\u2019s last name. Example: Kamal Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_address1 Alphanumeric Optional max: 30 The Customer/ Billing address line 1. Example: Amman - Khalda Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_address2 Alphanumeric Optional max: 30 The Customer/ Billing address line 2 (for extra details). Example: Al Sati St. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_apartment_no Alphanumeric Optional max: 30 The Customer/ Billing apartment number. Example: 12 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_city Alphanumeric Optional max: 20 The Customer/ Billing city. Example: Amman Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_state Alpha Optional max: 10 The Customer/ Billing state code. Example: Jordan customer_zip_code Alphanumeric Optional max: 9 The Customer/ Billing post/ zip code. Example: 11183 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_country_code Alpha Optional max: 3 The Customer\u2019s country code; ISO 3-digit country code. Example: JOR customer_phone Numeric Optional max: 19 The Customer\u2019s home phone number. Example: 00962797219966 customer_alt_phone Numeric Optional max: 19 The Customer\u2019s alternative phone. * For the Telecommunications sector, send: MSISDN. Example: 00962797256645 customer_date_birth Alphanumeric Optional max: 10 The Customer\u2019s date of birth. Format: YYYY-MM- DD. Example: 1977-10-03 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_type Alpha Optional max: 1 Shipping details present flag. * This parameter is not applicable for the Gaming sector. Example: S ship_first_name Alpha Optional max: 30 Ship to first name. * This parameter is not applicable for the Gaming sector. Example: Rana Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_middle_name Alpha Optional max: 1 Ship to middle initial. * This parameter is not applicable for the Gaming sector. Example: A Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_last_name Alpha Optional max: 30 Ship to last name. * This parameter is not applicable for the Gaming sector. Example: Rashdan Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_address1 Alphanumeric Optional max: 30 Ship to address line 1. * This parameter is not applicable for the Gaming sector. Example: Cairo - Egypt Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ , Space ship_address2 Alphanumeric Optional max: 30 Ship to address line 2. * This parameter is not applicable for the Gaming sector. Example: Garden City Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ , Space ship_apartment_no Alphanumeric Optional max: 30 Ship to appartment number. * This parameter is not applicable for the Gaming sector. Example: 22 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_address_city Alphanumeric Optional max: 20 Ship to address city. * This parameter is not applicable for the Gaming sector. Example: Dubai Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_address_state Alpha Optional max: 3 Ship to address state. * This parameter is not applicable for the Gaming sector. Example: UAE ship_zip_code Alphanumeric Optional max: 9 Ship to post/ zip code. * This parameter is not applicable for the Gaming sector. Example: 11183 ship_country_code Alpha Optional max: 3 Ship to country code; ISO 3-Digit country code. * This parameter is not applicable for the Gaming sector. Example: JOR ship_phone Numeric Optional max: 19 Ship to home phone number. * This parameter is not applicable for the Gaming sector. Example: 0096265534256 ship_alt_phone Numeric Optional max: 12 Ship To alternative phone. * This parameter is not applicable for the Gaming sector. Example: 0797334465 ship_email Alphanumeric Optional max: 254 Ship to email address. * For the Gaming sector, send: Player Email Address. Example: ship@gmail.com Special characters: @ - . _ Space ship_comments Alphanumeric Optional max: 160 Any shipping comments. * For the Gaming sector, send: Player Email Address. Example: (Any shipping comments can be entered) Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_method Alpha Optional max: 1 The shipping method. * This parameter is not applicable for the Gaming sector. Possible/ expected values: - N (Next Day Service) - T (Two-Day Service) - W (Three- Day Service) - C (Low-Cost Carrier) - D (Customer Choice) - I (International) - M (Military) - P (Collect at Store) - O (Other) fraud_extra1 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, then the field value must contain the \u201cConcatenated Billing Address\u201d. * For the Gaming sector, send: Player Email Address. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra2 Alphanumeric Optional max: 256 If the sector is Retail, Travel, or Telecommunications, the value of the field must be the \u201cConcatenated Shipping Address\u201d as follows: street + + shipzip if the address is particularly long and space is lim ited then truncate the first portion of the address and send the postcode/Zip code in full. * This parameter is not applicable for the Gaming sector. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra3 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cAddress Verification (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra4 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cAccount Status (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra5 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cEligibility Status (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra6 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cOutstanding Balance on the Account (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra7 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cCredit Score (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra8 Alphanumeric Optional max: 256 If the sector is Telecommunications, the value must be the \u201cAccount Number\u201d (if multiple MSISDN per account). Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra9 Alphanumeric Optional max: 265 If the sector is Telecommunications, the value must be the \u201cMSISDN Age in days\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra10 Alphanumeric Optional max: 256 - If the sector is Travel, the value must be the \u201cFull Travel Itinerary\u201d. - If the sector is Telecommunications, the value must be the \u201cEarliest Account Activity/ First Call Date\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra11 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cAccount Age\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra12 Alphanumeric Optional max: 30 If the sector is Retail, Travel, or Telecommunications, the value must be the \u201cNumber of Previous Orders Sent to the Shipping Address\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra13 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cNumber of Days Since the Email Attached to the Account has Changed\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra14 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cNumber of Days Since the Password was Changed\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra16 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cNumber of Previous Orders Associated with the Card and Email\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra17 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cEvent/ Promotion Flag\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra18 Alphanumeric Optional max: 30 - If the sector is Retail, Gaming, or Telecommunications, the value must be the \u201cSales Channel\u201d. - If the sector is Travel, the value must be the \u201cThird Party Booking Flag, Yes or No\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra19 Alphanumeric Optional max: 30 - If the sector is Retail, Travel, or Telecommunications, the value must be the \u201cPrivate/ Business/ Trade\u201d (customerType). - If the sector is Gaming, the value must be the \u201cCustomer Gaming ID\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra20 Alphanumeric Optional max: 30 - If the sector is Retail, Gaming, or Telecommunications, the value must be the \u201cNumber of Previous Successful Transactions\u201d. - If the sector is Travel, the value must be the \u201cNumber of Previous Successful Bookings\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra21 Alphanumeric Optional max: 30 - If the sector is Gaming, the values must be the \u201cGift for Other Player Flag\u201d. - If the sector is Travel, the value must be the \u201cBooking Type\u201d. - If the sector is Telecommunications, the value must be the \u201cPayment Type\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra22 Alphanumeric Optional max: 30 - If the sector is Gaming, the values must be the \u201cPlaying Time\u201d. - If the sector is Travel, the value must be the \u201cTime to First Departure in Hours\u201d. - If the sector is Telecommunications, the value must be the \u201cNumber of Previous Successful Top-ups\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra23 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cChannel (IVR vs. Web vs. Mobile Application, etc.). Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra24 Alphanumeric Optional max: 30 - If the sector is Gaming, the values must be the \"Premium Account Balance\u201d. - If the sector is Travel, the value must be the \u201cLoyalty Scheme\u201d. - If the sector is Telecommunications, the value must be the \u201cSim IMSI (International Mobile Subscriber Identity)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra25 Alphanumeric Optional max: 30 - If the sector is Gaming, the values must be the \u201cGame Account Balance\u201d. - If the sector is Travel, the value must be the \u201cLoyalty Scheme Member Number\u201d. - If the sector is Telecommunications, the value must be the \u201cIMEI (International Mobile Equipment Identity)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space cart_details Alphanumeric Optional max: 999 This parameter is a parent parameter for other parameters that contain the details of the shopping cart created by the Merchant. Example: (Please refer to section Cart Details Example Value Special characters: $ device_fingerprint Alphanumeric max: 4000 Unique device ID generated by Script . please refer to Fraud Native Mobile SDK Guide to generate device fingerprint. Example: 04003hQUMXGB0po\u2026 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ % + ! Space ACI ReD Cart Fraud - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description item_quantity Alphanumeric Optional max: 10 The item\u2019s quantity. * For the Gaming sector, send: Clan. Example: 4 item_sku Alphanumeric Optional max: 12 The item\u2019s commodity or \u201cStock Keeping Unit\u201d code. * For the Gaming sector, send: Gold balance. Example: 1ShirtBlueM Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_prod_code Alphanumeric Optional max: 12 The item\u2019s product code. * For the Gaming sector, send: Silver balance. Example: MOB111 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_part_no Alphanumeric Optional max: 30 The item\u2019s Manufacturers Part or EAN number. * For the Gaming sector, send: Exp balance. * For the Travel sector, send: Flight/ Train/ Bus Number. Example: TSR-1002 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_description Alphanumeric Optional max: 256 The item\u2019s description. * For the Gaming sector, send: Date of first credit. * For the Travel sector, send: Ticket Delivery Method. Example: iPhone 6-S Special characters: - _ ' , . Space item_price Numeric Optional max: 10 The item\u2019s unit price (lowest denomination). * For the Travel sector, send: Ticket Price. Example: 700 item_shipping_no Alphanumeric Optional max: 19 The item\u2019s shipping/ tracking number. * For the Travel sector, send: Ticket Departure Date And Time. Example: AB586985609GB Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_shipping_method Alpha Optional max: 1 The item\u2019s shipping method. * For the Retail, Travel, Telecommunications sectors, send: New Shipping Address Flag. * This parameter is not applicable for the Gaming sector. Possible/ expected values: - N (Next Day Service) - T (Two-Day Service) - W (Three- Day Service) - C (Low-Cost Carrier) - D (Customer Choice) - I (International) - M (Military) - P (Collect at Store) - O (Other) item_shipping_comments Alphanumeric Optional max: 160 The item\u2019s shipping comments. * For the Travel sector, send: Ticket Itinerary. Example: (Any shipping comments can be entered). Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_gift_msg Alphanumeric Optional max: 160 The item\u2019s gift message. * For the Retail and Telecommunications sectors, send: High Risk Product Flag. Example: Congrats! Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_title Alphanumeric Optional max: 5 The Recipient\u2019s title. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Adult/Child/Infant flag. Example: Mr. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_first_name Alphanumeric Optional max: 30 The Recipient\u2019s first name. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Passenger First Name. Example: Mohammad Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_middle_initial Alphanumeric Optional max: 1 The Recipient\u2019s middle initial. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Passenger Middle Initial. Example: R Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_last_name Alphanumeric Optional max: 30 The Recipient\u2019s last name. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Passenger Last Name. Example: Tawfeeq Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_apartment_no Alphanumeric Optional max: 30 The Recipient\u2019s apartment number. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Travel Class; i.e.: Standard/ Economy etc. Example: 12 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_address1 Alphanumeric Optional max: 30 The Recipient\u2019s address line 1. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Departure Airport/ Station Code/ City. Example: Amman - Khalda Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_address2 Alphanumeric Optional max: 30 The Recipient\u2019s address line 2 (for extra details). * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Arrival Airport/ Station Code/ City. Example: Al Sati St. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_city Alphanumeric Optional max: 30 The Recipient\u2019s city. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Booking Type. Example: Sharjah Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_state Alphanumeric Optional max: 10 The Recipient\u2019s state. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Departure Country 3 Digit ISO Code. Example: Qatar Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_zip_code Alphanumeric Optional max: 10 The Recipient\u2019s post/ zip code. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Ticket Type; i.e.: One Way/ Return etc. Example: 11183 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_country_code Alpha Optional max: 3 The Recipient\u2019s country code; ISO 3-Digit country code. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Arrival Country. Example: JOR rcpt_phone Numeric Optional max: 19 The Recipient\u2019s phone number. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. Example: 00962797675543 rcpt_email Alphanumeric Optional max: 45 The Recipient\u2019s email address. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Passenger Name Record. Example: recipient@hotmail.com Special characters: @ - . _ Space ACI ReD Fraud - Response The following parameter will be returned in the Response: ATTRIBUTES Description fraud_comment Alphanumeric max: 1000 \u201cfraud_comment\u201d this value represents the feedback of the agent reviewing \u201cin review\u201d transaction. This parameter is part of the Authorization/ Purchase response parameters returned on the notification URL after the In review transaction is updated. Example: Close","title":"Aciredfraudparameters"},{"location":"aciredfraudparameters/#aci-red-fraud-request","text":"The fraud_extra fields are custom fields as their values depend on the sector. Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description customer_type Alpha Optional max: 1 This parameter is required if any customer detail is present. Example: B customer_id Alphanumeric Optional max: 16 The Customer\u2019s ID/ account number. Example: Au8vJ9HxLo Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_first_name Alpha Optional max: 30 The Customer\u2019s first name. Example: Osama Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_middle_initial Alpha Optional max: 1 The Customer\u2019s middle name\u2019s initial. Example: M Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_last_name Alpha Optional max: 30 The Customer\u2019s last name. Example: Kamal Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_address1 Alphanumeric Optional max: 30 The Customer/ Billing address line 1. Example: Amman - Khalda Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_address2 Alphanumeric Optional max: 30 The Customer/ Billing address line 2 (for extra details). Example: Al Sati St. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_apartment_no Alphanumeric Optional max: 30 The Customer/ Billing apartment number. Example: 12 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_city Alphanumeric Optional max: 20 The Customer/ Billing city. Example: Amman Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_state Alpha Optional max: 10 The Customer/ Billing state code. Example: Jordan customer_zip_code Alphanumeric Optional max: 9 The Customer/ Billing post/ zip code. Example: 11183 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space customer_country_code Alpha Optional max: 3 The Customer\u2019s country code; ISO 3-digit country code. Example: JOR customer_phone Numeric Optional max: 19 The Customer\u2019s home phone number. Example: 00962797219966 customer_alt_phone Numeric Optional max: 19 The Customer\u2019s alternative phone. * For the Telecommunications sector, send: MSISDN. Example: 00962797256645 customer_date_birth Alphanumeric Optional max: 10 The Customer\u2019s date of birth. Format: YYYY-MM- DD. Example: 1977-10-03 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_type Alpha Optional max: 1 Shipping details present flag. * This parameter is not applicable for the Gaming sector. Example: S ship_first_name Alpha Optional max: 30 Ship to first name. * This parameter is not applicable for the Gaming sector. Example: Rana Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_middle_name Alpha Optional max: 1 Ship to middle initial. * This parameter is not applicable for the Gaming sector. Example: A Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_last_name Alpha Optional max: 30 Ship to last name. * This parameter is not applicable for the Gaming sector. Example: Rashdan Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_address1 Alphanumeric Optional max: 30 Ship to address line 1. * This parameter is not applicable for the Gaming sector. Example: Cairo - Egypt Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ , Space ship_address2 Alphanumeric Optional max: 30 Ship to address line 2. * This parameter is not applicable for the Gaming sector. Example: Garden City Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ , Space ship_apartment_no Alphanumeric Optional max: 30 Ship to appartment number. * This parameter is not applicable for the Gaming sector. Example: 22 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_address_city Alphanumeric Optional max: 20 Ship to address city. * This parameter is not applicable for the Gaming sector. Example: Dubai Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_address_state Alpha Optional max: 3 Ship to address state. * This parameter is not applicable for the Gaming sector. Example: UAE ship_zip_code Alphanumeric Optional max: 9 Ship to post/ zip code. * This parameter is not applicable for the Gaming sector. Example: 11183 ship_country_code Alpha Optional max: 3 Ship to country code; ISO 3-Digit country code. * This parameter is not applicable for the Gaming sector. Example: JOR ship_phone Numeric Optional max: 19 Ship to home phone number. * This parameter is not applicable for the Gaming sector. Example: 0096265534256 ship_alt_phone Numeric Optional max: 12 Ship To alternative phone. * This parameter is not applicable for the Gaming sector. Example: 0797334465 ship_email Alphanumeric Optional max: 254 Ship to email address. * For the Gaming sector, send: Player Email Address. Example: ship@gmail.com Special characters: @ - . _ Space ship_comments Alphanumeric Optional max: 160 Any shipping comments. * For the Gaming sector, send: Player Email Address. Example: (Any shipping comments can be entered) Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space ship_method Alpha Optional max: 1 The shipping method. * This parameter is not applicable for the Gaming sector. Possible/ expected values: - N (Next Day Service) - T (Two-Day Service) - W (Three- Day Service) - C (Low-Cost Carrier) - D (Customer Choice) - I (International) - M (Military) - P (Collect at Store) - O (Other) fraud_extra1 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, then the field value must contain the \u201cConcatenated Billing Address\u201d. * For the Gaming sector, send: Player Email Address. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra2 Alphanumeric Optional max: 256 If the sector is Retail, Travel, or Telecommunications, the value of the field must be the \u201cConcatenated Shipping Address\u201d as follows: street + + shipzip if the address is particularly long and space is lim ited then truncate the first portion of the address and send the postcode/Zip code in full. * This parameter is not applicable for the Gaming sector. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra3 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cAddress Verification (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra4 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cAccount Status (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra5 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cEligibility Status (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra6 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cOutstanding Balance on the Account (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra7 Alphanumeric Optional max: 256 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cCredit Score (PayPal)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra8 Alphanumeric Optional max: 256 If the sector is Telecommunications, the value must be the \u201cAccount Number\u201d (if multiple MSISDN per account). Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra9 Alphanumeric Optional max: 265 If the sector is Telecommunications, the value must be the \u201cMSISDN Age in days\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra10 Alphanumeric Optional max: 256 - If the sector is Travel, the value must be the \u201cFull Travel Itinerary\u201d. - If the sector is Telecommunications, the value must be the \u201cEarliest Account Activity/ First Call Date\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra11 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cAccount Age\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra12 Alphanumeric Optional max: 30 If the sector is Retail, Travel, or Telecommunications, the value must be the \u201cNumber of Previous Orders Sent to the Shipping Address\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra13 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cNumber of Days Since the Email Attached to the Account has Changed\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra14 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cNumber of Days Since the Password was Changed\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra16 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cNumber of Previous Orders Associated with the Card and Email\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra17 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cEvent/ Promotion Flag\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra18 Alphanumeric Optional max: 30 - If the sector is Retail, Gaming, or Telecommunications, the value must be the \u201cSales Channel\u201d. - If the sector is Travel, the value must be the \u201cThird Party Booking Flag, Yes or No\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra19 Alphanumeric Optional max: 30 - If the sector is Retail, Travel, or Telecommunications, the value must be the \u201cPrivate/ Business/ Trade\u201d (customerType). - If the sector is Gaming, the value must be the \u201cCustomer Gaming ID\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra20 Alphanumeric Optional max: 30 - If the sector is Retail, Gaming, or Telecommunications, the value must be the \u201cNumber of Previous Successful Transactions\u201d. - If the sector is Travel, the value must be the \u201cNumber of Previous Successful Bookings\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra21 Alphanumeric Optional max: 30 - If the sector is Gaming, the values must be the \u201cGift for Other Player Flag\u201d. - If the sector is Travel, the value must be the \u201cBooking Type\u201d. - If the sector is Telecommunications, the value must be the \u201cPayment Type\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra22 Alphanumeric Optional max: 30 - If the sector is Gaming, the values must be the \u201cPlaying Time\u201d. - If the sector is Travel, the value must be the \u201cTime to First Departure in Hours\u201d. - If the sector is Telecommunications, the value must be the \u201cNumber of Previous Successful Top-ups\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra23 Alphanumeric Optional max: 30 If the sector is Retail, Gaming, Travel, or Telecommunications, the value must be the \u201cChannel (IVR vs. Web vs. Mobile Application, etc.). Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra24 Alphanumeric Optional max: 30 - If the sector is Gaming, the values must be the \"Premium Account Balance\u201d. - If the sector is Travel, the value must be the \u201cLoyalty Scheme\u201d. - If the sector is Telecommunications, the value must be the \u201cSim IMSI (International Mobile Subscriber Identity)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space fraud_extra25 Alphanumeric Optional max: 30 - If the sector is Gaming, the values must be the \u201cGame Account Balance\u201d. - If the sector is Travel, the value must be the \u201cLoyalty Scheme Member Number\u201d. - If the sector is Telecommunications, the value must be the \u201cIMEI (International Mobile Equipment Identity)\u201d. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space cart_details Alphanumeric Optional max: 999 This parameter is a parent parameter for other parameters that contain the details of the shopping cart created by the Merchant. Example: (Please refer to section Cart Details Example Value Special characters: $ device_fingerprint Alphanumeric max: 4000 Unique device ID generated by Script . please refer to Fraud Native Mobile SDK Guide to generate device fingerprint. Example: 04003hQUMXGB0po\u2026 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ % + ! Space","title":"ACI ReD Fraud - Request"},{"location":"aciredfraudparameters/#aci-red-cart-fraud-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description item_quantity Alphanumeric Optional max: 10 The item\u2019s quantity. * For the Gaming sector, send: Clan. Example: 4 item_sku Alphanumeric Optional max: 12 The item\u2019s commodity or \u201cStock Keeping Unit\u201d code. * For the Gaming sector, send: Gold balance. Example: 1ShirtBlueM Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_prod_code Alphanumeric Optional max: 12 The item\u2019s product code. * For the Gaming sector, send: Silver balance. Example: MOB111 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_part_no Alphanumeric Optional max: 30 The item\u2019s Manufacturers Part or EAN number. * For the Gaming sector, send: Exp balance. * For the Travel sector, send: Flight/ Train/ Bus Number. Example: TSR-1002 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_description Alphanumeric Optional max: 256 The item\u2019s description. * For the Gaming sector, send: Date of first credit. * For the Travel sector, send: Ticket Delivery Method. Example: iPhone 6-S Special characters: - _ ' , . Space item_price Numeric Optional max: 10 The item\u2019s unit price (lowest denomination). * For the Travel sector, send: Ticket Price. Example: 700 item_shipping_no Alphanumeric Optional max: 19 The item\u2019s shipping/ tracking number. * For the Travel sector, send: Ticket Departure Date And Time. Example: AB586985609GB Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_shipping_method Alpha Optional max: 1 The item\u2019s shipping method. * For the Retail, Travel, Telecommunications sectors, send: New Shipping Address Flag. * This parameter is not applicable for the Gaming sector. Possible/ expected values: - N (Next Day Service) - T (Two-Day Service) - W (Three- Day Service) - C (Low-Cost Carrier) - D (Customer Choice) - I (International) - M (Military) - P (Collect at Store) - O (Other) item_shipping_comments Alphanumeric Optional max: 160 The item\u2019s shipping comments. * For the Travel sector, send: Ticket Itinerary. Example: (Any shipping comments can be entered). Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space item_gift_msg Alphanumeric Optional max: 160 The item\u2019s gift message. * For the Retail and Telecommunications sectors, send: High Risk Product Flag. Example: Congrats! Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_title Alphanumeric Optional max: 5 The Recipient\u2019s title. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Adult/Child/Infant flag. Example: Mr. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_first_name Alphanumeric Optional max: 30 The Recipient\u2019s first name. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Passenger First Name. Example: Mohammad Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_middle_initial Alphanumeric Optional max: 1 The Recipient\u2019s middle initial. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Passenger Middle Initial. Example: R Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_last_name Alphanumeric Optional max: 30 The Recipient\u2019s last name. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Passenger Last Name. Example: Tawfeeq Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_apartment_no Alphanumeric Optional max: 30 The Recipient\u2019s apartment number. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Travel Class; i.e.: Standard/ Economy etc. Example: 12 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_address1 Alphanumeric Optional max: 30 The Recipient\u2019s address line 1. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Departure Airport/ Station Code/ City. Example: Amman - Khalda Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_address2 Alphanumeric Optional max: 30 The Recipient\u2019s address line 2 (for extra details). * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Arrival Airport/ Station Code/ City. Example: Al Sati St. Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_city Alphanumeric Optional max: 30 The Recipient\u2019s city. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Booking Type. Example: Sharjah Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_state Alphanumeric Optional max: 10 The Recipient\u2019s state. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Departure Country 3 Digit ISO Code. Example: Qatar Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_zip_code Alphanumeric Optional max: 10 The Recipient\u2019s post/ zip code. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Ticket Type; i.e.: One Way/ Return etc. Example: 11183 Special characters: @ - . _ ' / # \\ : = ? & ; ( ) $ Space rcpt_country_code Alpha Optional max: 3 The Recipient\u2019s country code; ISO 3-Digit country code. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Arrival Country. Example: JOR rcpt_phone Numeric Optional max: 19 The Recipient\u2019s phone number. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. Example: 00962797675543 rcpt_email Alphanumeric Optional max: 45 The Recipient\u2019s email address. * For the Retail and Telecommunications sectors, this parameter should be sent if multiple shipping addresses are available. * For the Travel sector, send: Passenger Name Record. Example: recipient@hotmail.com Special characters: @ - . _ Space","title":"ACI ReD Cart Fraud - Request"},{"location":"aciredfraudparameters/#aci-red-fraud-response","text":"The following parameter will be returned in the Response: ATTRIBUTES Description fraud_comment Alphanumeric max: 1000 \u201cfraud_comment\u201d this value represents the feedback of the agent reviewing \u201cin review\u201d transaction. This parameter is part of the Authorization/ Purchase response parameters returned on the notification URL after the In review transaction is updated. Example: Close","title":"ACI ReD Fraud - Response"},{"location":"androidsdk/","text":"Integrate Android SDK You can also enable Payment processing through your mobile app by integrating PayFORT payment gateway. This section helps you to integrate PayFORT Android SDK with your android project and develop a a payment system for your mobile application. To process a transaction using the FORT Mobile SDK, create a Mobile SDK Token and proceed through the following sections. Please refer to the SDK Token section by visiting this link About the PayFORT Android SDK List of Supported Platforms The FORT Mobile SDK supports all devices running Android 4.1.x (API level 16). ICE CREAM SANDWICH or higher are supported. This release supports Android Pie API 28. Localization Support The FORT Mobile SDK supports both English and Arabic languages. Screen Orientation Portrait is the only orientation supported within the FORT Mobile SDK. Supported Payment Methods Through the first version of the FORT Mobile SDK, the Merchant has the ability to process a CREDIT CARD transactions only. Supported Payment Options The supported credit card payment options are VISA , MASTERCARD , American Express (AMEX) , MADA and MEEZA . Android Integration Flow Placeholder : Explain the Integration Flow with diagram. Setting up Development Environment Prerequisites You are required to download the FORT android sdk from this link . You can select either eclipse or android studio for your development setup. You are also required to have some knowledge of mobile app development. You are also required to generate SDK Token. IDE Configurations To start using the FORT Mobile SDK, Please follow the steps: Placeholder: Provide the pic Download the SDK and extract the SDK. The folder contains Dependencies , Res and FORTSDKv1.5.aar-release . Dependencies folder includes: Eclipse folder : .jar files for the SDK dependencies. LINKS_README text file that contains a list for sources of the above jars and a list of required libraries to be added as dependencies as well (Manual configuration). AndroidStudio_gradle text file which adds the compile command for what your project does not include. Res folder : Layout Layout-ar FORTSDKv1.5.aar-release Please make sure to read our notes according to the IDE you are using whether it\u2019s the Android Studio or Eclipse. Android Studio Project Setup Once you have downloaded and extracted the PayFORT SDK as explained above you can next setup the Android Studio. To continue the integration, please proceed with the following steps: Go to File \u2192 New \u2192 New Module. Placeholder: Pictures of Android Studio for each step. Select \u201cImport .JAR/.AAR Package\u201d and click next. Enter the path to .aar file and click finish. Browse to the dependencies folder and open the \u201cAndroidStudio_gradle\u201d text file. Copy and paste the implementation/ api lines that are NOT already supported in your dependency block. (All listed dependencies are required). Click the \u201cSync the project with gradle files\u201d button. Clean the project. The SDK is now ready for your use. Eclipse Project Setup Incase you are using Eclipse instead of Android Studio then you can ignore the above section and follow the instructions in this section. The integration will include two main steps. For the first step, you need to create a library project by following the below steps: Create a new project (from this time it\u2019s called \u201clibrary project\u201d) in your workspace. Placeholder: Provide picture of Eclipse platform for each step. Do not forget to mark it as library. Clear the src folder of the library project. Unzip the .aar file. You can rename it to zip and then unzip it or use any tool. Copy the classes.jar file to libs folder on the library project. Replace the res folder on library project with the res folder of the .aar file. Project Configuration Once the IDEs have been installed, next we will configure the project. This section discusses the steps to configure the Project. The configuration will help to integrate the PayFORT android SDK with the IDE. The project you have created contains almost everything you need. Now let\u2019s start configuring your project to reference this library project by following the below points: Placeholder: Provide pictures for project configuration. In the target project, use the library created in step one (mentioned above) as a dependency. Open the AndroidManifest.xml file inside .aar file and make sure to copy everything it takes (permissions, activities, services, receivers \u2026) in the AndroidManifest.xml file of the target project. Copy the entire contents (if any) inside the assets folder of the .aar file to the assets folder of the target project. Copy the entire contents (if any) inside the libs folder of the .aar file to the libs folder of the target project. Open the dependencies file \u2192 Eclipse, then copy all .jar files and add them to the libs folder of the target project. Check if your target project has the project dependencies included in the LINKS_README text file under the LINKS_README text file under the libraries (Projects/aar). Otherwise use the links included in the previously mentioned file and add them as a dependency project on your target project. Clean and rebuild your target project. OS Permissions The PayFORT android SDK requires the following android OS permissions to work properly as shown by the following code. You are required to include the below code in your project. <uses-permission android:name=\"android.permission.INTERNET\"/> <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/> <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/> Using the FORT Mobile SDK Collect the FORT Mobile SDK Request Through a Java Bean You can create a Java bean class for the PayFORT Mobile SDK request as shown below: // FORT Mobile SDK request public class FortRequest implements Serializable{ private Map<String, Object> requestMap; private boolean showResponsePage; public Map<String, Object> getRequestMap() { return requestMap; } public void setRequestMap(Map<String, Object> requestMap) { this.requestMap = requestMap; } public boolean isShowResponsePage() { return showResponsePage; } public void setShowResponsePage(boolean showResponsePage) { this.showResponsePage = showResponsePage; } } The following are the Mobile SDK Call Parameters: The \u201crequestMap\u201d will contain all the PayFORT parameters of the order/ transaction. \u201cshowResponsePage\u201d is the Boolean field where you can determine if you want the FORT response page to be displayed or not. Define a Callback Manager Define and initialize an instance of the FortCallBackManager in your activity as shown below: // FORT Callback Manager Instance private FortCallBackManager fortCallback = null; fortCallback = FortCallback.Factory.create(); Attach the Callback to the Activity You need to add the statement that appears below to the onActivityResult function. //Callback Statement @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); fortCallback.onActivityResult(requestCode,resultCode,data); } Call the FORT Mobile SDK For every transaction that needs to be processed, do the call as shown below and handle the callback methods upon your business flow. The FORT Mobile SDK Call registers a new callback for a new request. The registerCallBack requires the inputs as shown below. //FORT Mobile SDK Call FortSdk.getInstance().registerCallback(this,fortRequest,5, fortCallback, showLoading, new FortInterfaces.OnTnxProcessed() { @Override public void onCancel(Map<String, Object> requestParamsMap,Map<String, Object> responseMap) { //TODO: handle me } @Override public void onSuccess(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me } @Override public void onFailure(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me } @Override public void onSuccess(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me } }); Register Callback Request //The registerCallBack Request public void registerCallback( Activity context, final FortRequest fortRequest, String environment, final int requestCode, final FortCallBackManager callbackManager, boolean showLoading, final FortInterfaces.OnTnxProcessed callback) Call the Fort SDK Function //FortSDK function String device_id = FortSdk.getDeviceId(this); FORT Mobile SDK Device ID Value Please Make sure to use the FortSDK function as shown above to generate the device_id parameter value that must be used for creating the sdk_token from your business security server. The Merchant can choose to display the FORT response page by passing \u201cshowResponsePage\u201d value as \u201cTrue\u201d. Customizing the Mobile SDK Payment Layout We provide you with the res folder that includes the source code of the pages in order to customize the design, themes, etc. You can customize both English and Arabic layouts as needed. However, please take the following tips into consideration: Placeholder: Provide Android UI flow diagrams and Android based mobile screenshots. Don\u2019t change the layout name because it\u2019s considered an override process. Make sure to use all the views that has the ID property in order to avoid the NullPointerException. Redesign the view for portrait orientation. Note that Landscape orientation isn\u2019t supported. You can support as much layout densities as you want. Don\u2019t forget to redesign the layout-ar file too (right-to-left). Don\u2019t change, rename, or remove onClick functions. Our Mobile SDK v 1.5 consists one of the following three main activities design: activity_cc_payment.xml activity_cc_response.xml activity_init_secure_conn Every file is available for both English and Arabic alignments; layout and layout-ar. The files Hierarchy and Content might change in our SDK\u2019s future versions. Design Customization Codes: The following code was used to customize the way the \u201cAmount\u201d is displayed in the Standard Mobile SDK Payment Page: <TextView android:id=\u201c@+id/amountTV\u201d android:layout_width=\u201cmatch_parent\u201d android:layout_height=\u201c@dimen/pf_payment_type_header_height\u201d android:background=\u201c@color/pf_light_gray\u201d android:gravity=\u201ccenter_horizontal|center_vertical\u201d android:textColor=\u201c@android:color/black\u201d android:textSize=\u201c@dimen/pf_15_txt_size\u201d /> The following code is used to customize the way the \u201cAmount\u201d is displayed in the Customized Mobile SDK Payment Page: LinearLayout android:layout_width=\u201cmatch_parent\u201d android:layout_height=\u201cwrap_content\u201d android:orientation=\u201chorizontal\u201d android:padding=\u201c10dp\u201d android:background=\u201c@android:color/white\u201d> <ImageView android:layout_width=\u201c40dp\u201d android:layout_height=\u201c40dp\u201d android:src=\u201c@drawable/merchant_logo\u201d/> <TextView android:fontFamily=\u201csans-serif-medium\u201d android:text=\u201cMerchant name\u201d android:layout_margin=\u201c10dp\u201d android:textColor=\u201c@android:color/holo_blue_dark\u201d android:layout_width=\u201cwrap_content\u201d android:layout_gravity=\u201ccenter_vertical\u201d android:layout_height=\u201cwrap_content\u201d android:src=\u201c@drawable/merchant_logo\u201d/> <TextView android:id=\u201c@+id/amountTV\u201d android:layout_width=\u201cmatch_parent\u201d android:layout_height=\u201c@dimen/pf_payment_type_header_height\u201d android:gravity=\u201cright|center_vertical\u201d android:textColor=\u201c@android:color/black\u201d android:text=\u201c100 UDS\u201d android:textSize=\u201c@dimen/pf_15_txt_size\u201d /> </LinearLayout> As appears in the previous codes, elements with IDs haven\u2019t been changed in type or removed. For example: android:id=\u201c@+id/amountTV\u201d. We were able to add static elements such as: ImageView element that contains the Merchant\u2019s logo, and TextView that contains the Merchant\u2019s name. To sum up, you can add any static elements or redesign the view, while keeping the views\u2019 elements used in the Standard layout that hold IDs. Make sure to retest your custom design, for example, by showing the error messages on fields and applying the changes to the Arabic layout. (Refer to the points mentioned under the **Customizing the Mobile SDK Payment Layout** section). The customized XML file should be added to the layout file in the target project (Merchant Application) to override the SDK file. PayFORT Android SDK Operations Once you have done the project setup and installation, you will be performing the Operations for authorization and purchase done through mobile application. These operations helps your mobile application to process Authorization and Purchase operations. You will be sending the request parameters in your code which will be sent to the PayFORT server and your application will receive response from the PayFORT server. Sample Code public class PayFortSdkSample extends Activity { private FortCallBackManager fortCallback = null; String deviceId = \u201c\u201d, sdkToken = \u201c\u201d; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); // create Fort callback instance fortCallback = FortCallback.Factory.create(); // Generating deviceId deviceId = FortSdk.getDeviceId(PayFortSdkSample.this); Log.d(\u201cDeviceId \u201d, deviceId); // prepare payment request FortRequest fortrequest = new FortRequest(); fortrequest.setRequestMap(collectRequestMap(\u201cPASS_THE_GENERATED_SDK_TOKEN_ HERE\u201d)); fortrequest.setShowResponsePage(true); // to [display/use] the SDK response page // execute payment request callSdk(fortrequest); } private Map<String, Object> collectRequestMap(String sdkToken) { Map<String, Object> requestMap = new HashMap<>(); requestMap.put(\u201ccommand\u201d, \u201cPURCHASE\u201d); requestMap.put(\u201ccustomer_email\u201d, \u201cSam@gmail.com\u201d); requestMap.put(\u201ccurrency\u201d, \u201cSAR\u201d); requestMap.put(\u201camount\u201d, \u201c100\u201d); requestMap.put(\u201clanguage\u201d, \u201cen\u201d); requestMap.put(\u201cmerchant_reference\u201d, \u201cORD-0000007682\u201d); requestMap.put(\u201ccustomer_name\u201d, \u201cSam\u201d); requestMap.put(\u201ccustomer_ip\u201d, \u201c172.150.16.10\u201d); requestMap.put(\u201cpayment_option\u201d, \u201cVISA\u201d); requestMap.put(\u201ceci\u201d, \u201cECOMMERCE\u201d); requestMap.put(\u201corder_description\u201d, \u201cDESCRIPTION\u201d); requestMap.put(\u201csdk_token\u201d, sdkToken); return requestMap; } private void callSdk(FortRequest fortrequest) { try { FortSdk.getInstance().registerCallback(PayFortSdkSample.this, fortrequest, FortSdk.ENVIRONMENT.TEST, 5, fortCallback, new FortInterfaces.OnTnxProcessed() { @Override public void onCancel(Map<String, Object> requestParamsMap, Map<String, Object> responseMap) { //TODO: handle me Log.d(\u201cCancelled \u201d, responseMap.toString()); } @Override public void onSuccess(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me Log.i(\u201cSuccess \u201d, fortResponseMap.toString()); } @Override public void onFailure(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me Log.e(\u201cFailure \u201d, fortResponseMap.toString()); } }); } catch (Exception e) { Log.e(\u201cexecute Payment\u201d, \u201ccall FortSdk\u201d, e); } } @Override public void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); fortCallback.onActivityResult(requestCode, resultCode, data); } Placeholder for sample response from the PayFORT server. You can check out the request and response parameters by visiting this link . PayFORT Android SDK \u2013 Device ID permission This section helps the developers to understand the need and usage of the permission requested by the PayFORT Payment SDK to generate a unique device ID. You might not face this issue through your payment flow. It depends on the time you are requesting the getDeviceID function and ask about the permission for the first time. A part of the FORT mobile SDK flow is to get a unique ID for the device. Generating the ID based on more than one input (collecting as much as possible will lead to a real unique ID). The Telephone manager is one of these sources. Accessing the Telephone manager need the use of \u2018android.permission.READ_PHONE_STATE\u2019 permission. According to Android that\u2019s a dangerous permission to be used. Getting the needed permission through the flow on the case of getting the client granted that will produce a miss match device ID on the 1st SDK call. To avoid the mismatch flow we are suggesting you the following solutions: Handle the 1st SDK call in the onActivityResults(). Since The FORT SDK is a module running within the main application context the requested permission response will be returned to the merchant context. Once the activity that called geDeviceId for the 1st received a call-back in the onActivityResult() with request code = 222 you can for sure starts the payment flow of creating an SDK token and calling the SDK afterwards. Call getDeviceID on a previous activity or in your application class to make sure that the permission request was triggered before you reach the payment step. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Integrate Android SDK"},{"location":"androidsdk/#integrate-android-sdk","text":"You can also enable Payment processing through your mobile app by integrating PayFORT payment gateway. This section helps you to integrate PayFORT Android SDK with your android project and develop a a payment system for your mobile application. To process a transaction using the FORT Mobile SDK, create a Mobile SDK Token and proceed through the following sections. Please refer to the SDK Token section by visiting this link","title":"Integrate Android SDK"},{"location":"androidsdk/#about-the-payfort-android-sdk","text":"","title":"About the PayFORT Android SDK"},{"location":"androidsdk/#list-of-supported-platforms","text":"The FORT Mobile SDK supports all devices running Android 4.1.x (API level 16). ICE CREAM SANDWICH or higher are supported. This release supports Android Pie API 28.","title":"List of Supported Platforms"},{"location":"androidsdk/#localization-support","text":"The FORT Mobile SDK supports both English and Arabic languages.","title":"Localization Support"},{"location":"androidsdk/#screen-orientation","text":"Portrait is the only orientation supported within the FORT Mobile SDK.","title":"Screen Orientation"},{"location":"androidsdk/#supported-payment-methods","text":"Through the first version of the FORT Mobile SDK, the Merchant has the ability to process a CREDIT CARD transactions only.","title":"Supported Payment Methods"},{"location":"androidsdk/#supported-payment-options","text":"The supported credit card payment options are VISA , MASTERCARD , American Express (AMEX) , MADA and MEEZA .","title":"Supported Payment Options"},{"location":"androidsdk/#android-integration-flow","text":"Placeholder : Explain the Integration Flow with diagram.","title":"Android Integration Flow"},{"location":"androidsdk/#setting-up-development-environment","text":"Prerequisites You are required to download the FORT android sdk from this link . You can select either eclipse or android studio for your development setup. You are also required to have some knowledge of mobile app development. You are also required to generate SDK Token. IDE Configurations To start using the FORT Mobile SDK, Please follow the steps: Placeholder: Provide the pic Download the SDK and extract the SDK. The folder contains Dependencies , Res and FORTSDKv1.5.aar-release . Dependencies folder includes: Eclipse folder : .jar files for the SDK dependencies. LINKS_README text file that contains a list for sources of the above jars and a list of required libraries to be added as dependencies as well (Manual configuration). AndroidStudio_gradle text file which adds the compile command for what your project does not include. Res folder : Layout Layout-ar FORTSDKv1.5.aar-release Please make sure to read our notes according to the IDE you are using whether it\u2019s the Android Studio or Eclipse.","title":"Setting up Development Environment"},{"location":"androidsdk/#android-studio-project-setup","text":"Once you have downloaded and extracted the PayFORT SDK as explained above you can next setup the Android Studio. To continue the integration, please proceed with the following steps: Go to File \u2192 New \u2192 New Module. Placeholder: Pictures of Android Studio for each step. Select \u201cImport .JAR/.AAR Package\u201d and click next. Enter the path to .aar file and click finish. Browse to the dependencies folder and open the \u201cAndroidStudio_gradle\u201d text file. Copy and paste the implementation/ api lines that are NOT already supported in your dependency block. (All listed dependencies are required). Click the \u201cSync the project with gradle files\u201d button. Clean the project. The SDK is now ready for your use.","title":"Android Studio Project Setup"},{"location":"androidsdk/#eclipse-project-setup","text":"Incase you are using Eclipse instead of Android Studio then you can ignore the above section and follow the instructions in this section. The integration will include two main steps. For the first step, you need to create a library project by following the below steps: Create a new project (from this time it\u2019s called \u201clibrary project\u201d) in your workspace. Placeholder: Provide picture of Eclipse platform for each step. Do not forget to mark it as library. Clear the src folder of the library project. Unzip the .aar file. You can rename it to zip and then unzip it or use any tool. Copy the classes.jar file to libs folder on the library project. Replace the res folder on library project with the res folder of the .aar file.","title":"Eclipse Project Setup"},{"location":"androidsdk/#project-configuration","text":"Once the IDEs have been installed, next we will configure the project. This section discusses the steps to configure the Project. The configuration will help to integrate the PayFORT android SDK with the IDE. The project you have created contains almost everything you need. Now let\u2019s start configuring your project to reference this library project by following the below points: Placeholder: Provide pictures for project configuration. In the target project, use the library created in step one (mentioned above) as a dependency. Open the AndroidManifest.xml file inside .aar file and make sure to copy everything it takes (permissions, activities, services, receivers \u2026) in the AndroidManifest.xml file of the target project. Copy the entire contents (if any) inside the assets folder of the .aar file to the assets folder of the target project. Copy the entire contents (if any) inside the libs folder of the .aar file to the libs folder of the target project. Open the dependencies file \u2192 Eclipse, then copy all .jar files and add them to the libs folder of the target project. Check if your target project has the project dependencies included in the LINKS_README text file under the LINKS_README text file under the libraries (Projects/aar). Otherwise use the links included in the previously mentioned file and add them as a dependency project on your target project. Clean and rebuild your target project.","title":"Project Configuration"},{"location":"androidsdk/#os-permissions","text":"The PayFORT android SDK requires the following android OS permissions to work properly as shown by the following code. You are required to include the below code in your project. <uses-permission android:name=\"android.permission.INTERNET\"/> <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/> <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>","title":"OS Permissions"},{"location":"androidsdk/#using-the-fort-mobile-sdk","text":"Collect the FORT Mobile SDK Request Through a Java Bean You can create a Java bean class for the PayFORT Mobile SDK request as shown below: // FORT Mobile SDK request public class FortRequest implements Serializable{ private Map<String, Object> requestMap; private boolean showResponsePage; public Map<String, Object> getRequestMap() { return requestMap; } public void setRequestMap(Map<String, Object> requestMap) { this.requestMap = requestMap; } public boolean isShowResponsePage() { return showResponsePage; } public void setShowResponsePage(boolean showResponsePage) { this.showResponsePage = showResponsePage; } } The following are the Mobile SDK Call Parameters: The \u201crequestMap\u201d will contain all the PayFORT parameters of the order/ transaction. \u201cshowResponsePage\u201d is the Boolean field where you can determine if you want the FORT response page to be displayed or not. Define a Callback Manager Define and initialize an instance of the FortCallBackManager in your activity as shown below: // FORT Callback Manager Instance private FortCallBackManager fortCallback = null; fortCallback = FortCallback.Factory.create(); Attach the Callback to the Activity You need to add the statement that appears below to the onActivityResult function. //Callback Statement @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); fortCallback.onActivityResult(requestCode,resultCode,data); } Call the FORT Mobile SDK For every transaction that needs to be processed, do the call as shown below and handle the callback methods upon your business flow. The FORT Mobile SDK Call registers a new callback for a new request. The registerCallBack requires the inputs as shown below. //FORT Mobile SDK Call FortSdk.getInstance().registerCallback(this,fortRequest,5, fortCallback, showLoading, new FortInterfaces.OnTnxProcessed() { @Override public void onCancel(Map<String, Object> requestParamsMap,Map<String, Object> responseMap) { //TODO: handle me } @Override public void onSuccess(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me } @Override public void onFailure(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me } @Override public void onSuccess(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me } }); Register Callback Request //The registerCallBack Request public void registerCallback( Activity context, final FortRequest fortRequest, String environment, final int requestCode, final FortCallBackManager callbackManager, boolean showLoading, final FortInterfaces.OnTnxProcessed callback) Call the Fort SDK Function //FortSDK function String device_id = FortSdk.getDeviceId(this); FORT Mobile SDK Device ID Value Please Make sure to use the FortSDK function as shown above to generate the device_id parameter value that must be used for creating the sdk_token from your business security server. The Merchant can choose to display the FORT response page by passing \u201cshowResponsePage\u201d value as \u201cTrue\u201d.","title":"Using the FORT Mobile SDK"},{"location":"androidsdk/#customizing-the-mobile-sdk-payment-layout","text":"We provide you with the res folder that includes the source code of the pages in order to customize the design, themes, etc. You can customize both English and Arabic layouts as needed. However, please take the following tips into consideration: Placeholder: Provide Android UI flow diagrams and Android based mobile screenshots. Don\u2019t change the layout name because it\u2019s considered an override process. Make sure to use all the views that has the ID property in order to avoid the NullPointerException. Redesign the view for portrait orientation. Note that Landscape orientation isn\u2019t supported. You can support as much layout densities as you want. Don\u2019t forget to redesign the layout-ar file too (right-to-left). Don\u2019t change, rename, or remove onClick functions. Our Mobile SDK v 1.5 consists one of the following three main activities design: activity_cc_payment.xml activity_cc_response.xml activity_init_secure_conn Every file is available for both English and Arabic alignments; layout and layout-ar. The files Hierarchy and Content might change in our SDK\u2019s future versions. Design Customization Codes: The following code was used to customize the way the \u201cAmount\u201d is displayed in the Standard Mobile SDK Payment Page: <TextView android:id=\u201c@+id/amountTV\u201d android:layout_width=\u201cmatch_parent\u201d android:layout_height=\u201c@dimen/pf_payment_type_header_height\u201d android:background=\u201c@color/pf_light_gray\u201d android:gravity=\u201ccenter_horizontal|center_vertical\u201d android:textColor=\u201c@android:color/black\u201d android:textSize=\u201c@dimen/pf_15_txt_size\u201d /> The following code is used to customize the way the \u201cAmount\u201d is displayed in the Customized Mobile SDK Payment Page: LinearLayout android:layout_width=\u201cmatch_parent\u201d android:layout_height=\u201cwrap_content\u201d android:orientation=\u201chorizontal\u201d android:padding=\u201c10dp\u201d android:background=\u201c@android:color/white\u201d> <ImageView android:layout_width=\u201c40dp\u201d android:layout_height=\u201c40dp\u201d android:src=\u201c@drawable/merchant_logo\u201d/> <TextView android:fontFamily=\u201csans-serif-medium\u201d android:text=\u201cMerchant name\u201d android:layout_margin=\u201c10dp\u201d android:textColor=\u201c@android:color/holo_blue_dark\u201d android:layout_width=\u201cwrap_content\u201d android:layout_gravity=\u201ccenter_vertical\u201d android:layout_height=\u201cwrap_content\u201d android:src=\u201c@drawable/merchant_logo\u201d/> <TextView android:id=\u201c@+id/amountTV\u201d android:layout_width=\u201cmatch_parent\u201d android:layout_height=\u201c@dimen/pf_payment_type_header_height\u201d android:gravity=\u201cright|center_vertical\u201d android:textColor=\u201c@android:color/black\u201d android:text=\u201c100 UDS\u201d android:textSize=\u201c@dimen/pf_15_txt_size\u201d /> </LinearLayout> As appears in the previous codes, elements with IDs haven\u2019t been changed in type or removed. For example: android:id=\u201c@+id/amountTV\u201d. We were able to add static elements such as: ImageView element that contains the Merchant\u2019s logo, and TextView that contains the Merchant\u2019s name. To sum up, you can add any static elements or redesign the view, while keeping the views\u2019 elements used in the Standard layout that hold IDs. Make sure to retest your custom design, for example, by showing the error messages on fields and applying the changes to the Arabic layout. (Refer to the points mentioned under the **Customizing the Mobile SDK Payment Layout** section). The customized XML file should be added to the layout file in the target project (Merchant Application) to override the SDK file.","title":"Customizing the Mobile SDK Payment Layout"},{"location":"androidsdk/#payfort-android-sdk-operations","text":"Once you have done the project setup and installation, you will be performing the Operations for authorization and purchase done through mobile application. These operations helps your mobile application to process Authorization and Purchase operations. You will be sending the request parameters in your code which will be sent to the PayFORT server and your application will receive response from the PayFORT server. Sample Code public class PayFortSdkSample extends Activity { private FortCallBackManager fortCallback = null; String deviceId = \u201c\u201d, sdkToken = \u201c\u201d; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); // create Fort callback instance fortCallback = FortCallback.Factory.create(); // Generating deviceId deviceId = FortSdk.getDeviceId(PayFortSdkSample.this); Log.d(\u201cDeviceId \u201d, deviceId); // prepare payment request FortRequest fortrequest = new FortRequest(); fortrequest.setRequestMap(collectRequestMap(\u201cPASS_THE_GENERATED_SDK_TOKEN_ HERE\u201d)); fortrequest.setShowResponsePage(true); // to [display/use] the SDK response page // execute payment request callSdk(fortrequest); } private Map<String, Object> collectRequestMap(String sdkToken) { Map<String, Object> requestMap = new HashMap<>(); requestMap.put(\u201ccommand\u201d, \u201cPURCHASE\u201d); requestMap.put(\u201ccustomer_email\u201d, \u201cSam@gmail.com\u201d); requestMap.put(\u201ccurrency\u201d, \u201cSAR\u201d); requestMap.put(\u201camount\u201d, \u201c100\u201d); requestMap.put(\u201clanguage\u201d, \u201cen\u201d); requestMap.put(\u201cmerchant_reference\u201d, \u201cORD-0000007682\u201d); requestMap.put(\u201ccustomer_name\u201d, \u201cSam\u201d); requestMap.put(\u201ccustomer_ip\u201d, \u201c172.150.16.10\u201d); requestMap.put(\u201cpayment_option\u201d, \u201cVISA\u201d); requestMap.put(\u201ceci\u201d, \u201cECOMMERCE\u201d); requestMap.put(\u201corder_description\u201d, \u201cDESCRIPTION\u201d); requestMap.put(\u201csdk_token\u201d, sdkToken); return requestMap; } private void callSdk(FortRequest fortrequest) { try { FortSdk.getInstance().registerCallback(PayFortSdkSample.this, fortrequest, FortSdk.ENVIRONMENT.TEST, 5, fortCallback, new FortInterfaces.OnTnxProcessed() { @Override public void onCancel(Map<String, Object> requestParamsMap, Map<String, Object> responseMap) { //TODO: handle me Log.d(\u201cCancelled \u201d, responseMap.toString()); } @Override public void onSuccess(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me Log.i(\u201cSuccess \u201d, fortResponseMap.toString()); } @Override public void onFailure(Map<String, Object> requestParamsMap, Map<String, Object> fortResponseMap) { //TODO: handle me Log.e(\u201cFailure \u201d, fortResponseMap.toString()); } }); } catch (Exception e) { Log.e(\u201cexecute Payment\u201d, \u201ccall FortSdk\u201d, e); } } @Override public void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); fortCallback.onActivityResult(requestCode, resultCode, data); } Placeholder for sample response from the PayFORT server. You can check out the request and response parameters by visiting this link .","title":"PayFORT Android SDK Operations"},{"location":"androidsdk/#payfort-android-sdk-device-id-permission","text":"This section helps the developers to understand the need and usage of the permission requested by the PayFORT Payment SDK to generate a unique device ID. You might not face this issue through your payment flow. It depends on the time you are requesting the getDeviceID function and ask about the permission for the first time. A part of the FORT mobile SDK flow is to get a unique ID for the device. Generating the ID based on more than one input (collecting as much as possible will lead to a real unique ID). The Telephone manager is one of these sources. Accessing the Telephone manager need the use of \u2018android.permission.READ_PHONE_STATE\u2019 permission. According to Android that\u2019s a dangerous permission to be used. Getting the needed permission through the flow on the case of getting the client granted that will produce a miss match device ID on the 1st SDK call. To avoid the mismatch flow we are suggesting you the following solutions: Handle the 1st SDK call in the onActivityResults(). Since The FORT SDK is a module running within the main application context the requested permission response will be returned to the merchant context. Once the activity that called geDeviceId for the 1st received a call-back in the onActivityResult() with request code = 222 you can for sure starts the payment flow of creating an SDK token and calling the SDK afterwards. Call getDeviceID on a previous activity or in your application class to make sure that the permission request was triggered before you reach the payment step.","title":"PayFORT Android SDK \u2013 Device ID permission"},{"location":"androidsdk/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"androidsdk/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"androidsdkoperations/","text":"Android SDK Operations command (String, mandatory) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric, mandatory) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. sdk_token (alphanumeric, mandatory) Maximum Length Example Description 100 Dwp78q3 An SDK Token to enable using the FORT Mobile SDK. payment_option (String, optional) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String, optional) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric, optional) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String, optional) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric, optional) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha, optional) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric, optional) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. SDK Operations response command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. customer_email (alphanumeric) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. fort_id (alphanumeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. sdk_token (alphanumeric) Maximum Length Example Description 100 Dwp78q3 An SDK Token to enable using the FORT Mobile SDK. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. authorization_code (alphanumeric) Maximum Length Example Description 100 P1000000000000372136 The authorization code returned from the 3rd party. order_description (Alphanumeric) Maximum Length Example Special Characters Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. response_message (Alphanumeric) Maximum Length Possible/Expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . customer_ip (Alphanumeric) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 16 400555 * 0001 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. status (numeric) Maximum Length Possible/Expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. merchant_extra (alphanumeric) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. phone_number (numeric) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Android SDK Parameters"},{"location":"androidsdkoperations/#android-sdk-operations","text":"command (String, mandatory) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric, mandatory) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. sdk_token (alphanumeric, mandatory) Maximum Length Example Description 100 Dwp78q3 An SDK Token to enable using the FORT Mobile SDK. payment_option (String, optional) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String, optional) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric, optional) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String, optional) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric, optional) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha, optional) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric, optional) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Android SDK Operations"},{"location":"androidsdkoperations/#sdk-operations-response","text":"command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. customer_email (alphanumeric) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. fort_id (alphanumeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. sdk_token (alphanumeric) Maximum Length Example Description 100 Dwp78q3 An SDK Token to enable using the FORT Mobile SDK. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. authorization_code (alphanumeric) Maximum Length Example Description 100 P1000000000000372136 The authorization code returned from the 3rd party. order_description (Alphanumeric) Maximum Length Example Special Characters Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. response_message (Alphanumeric) Maximum Length Possible/Expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . customer_ip (Alphanumeric) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 16 400555 * 0001 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. status (numeric) Maximum Length Possible/Expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. merchant_extra (alphanumeric) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. phone_number (numeric) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"SDK Operations response"},{"location":"backoffice/","text":"","title":"Backoffice"},{"location":"batchinvoicing/","text":"One to Many (Batch Invoicing) PayFORT also allows you to generate and upload bulk of invoice to PayFORT as a batch. This service helps you to serve several customers in one go. For example sending bulk invoices to customers for fixed price item. Batch invoicing works on similar principle of Batch Service . There are two types of invoicing services which you can use as per your business requirement. This section describes one to many or batch invoicing service. For one to one invoice generation visit this link . Before You Start Before starting you have to know the following: You\u2019re only allowed to send PAYMENT_LINK service command in the invoice batch file. You should active the Batch processing and invoicing services. You can download the invoice batch file template from the Back office by clicking on the Batch invoicing tab that appears only if you activate the batch and invoicing services. Steps to activate Batch and Invoicing services Provide steps to activate batch and invoicing services from the back office along with images, videos etc. Steps to download the Batch Invoicing Template Provide steps to download batch invoicing template from the backoffice along with images, videos, etc. How it Works Placeholder: Add Integration flow/Process flow diagram. As Batch Invoice process applies similar steps as that of Batch service, here are steps : Upload Invoicing Batch File This request is quite similar to the upload batch file request that you process in the Batch Service . Only difference is that you will be uploading the batch invoicing template (which can be downloaded from the back office, provided you have activated the batch and invoicing service). This request allows you to upload the invoice batch file to PayFORT system. Please refer to the section upload batch file- request and upload batch file - response by visiting this link Upload Invoicing Batch File - Request Placeholder: please provide sample code for the request For more details on input parameters refer to the link Upload Invoicing Batch File - Response Placeholder: Please provide sample response sent from the PayFORT. Get Invoicing Batch Results This request is similar to the Get Batch file results request in the Batch Service. In this case you will be requesting the results of the invoicing template which has been uploaded to the PayFORT system. This request allows you to validate the format of the file and to check that the merchant reference for each and every transaction is unique. After validation the Account Administrator will receive an email notification with success invoices count. Please refer to the section get batch file results- request and get batch file results - response by visiting this link Get Invoicing Batch Results - Request Placeholder: please provide sample code for the request For more details on input parameters refer to the link Get Invoicing Batch Results - Response Placeholder: Please provide sample response sent from the PayFORT. Process Invoicing Batch File This is again similar to the last step in the Batch service where you process the batch file. In this case you will be requesting to process the invoicing template for further transactions. This request allows you to initiate the processing of transactions. To start the processing the file should have been validated in the Get Invoicing Batch Results-request and passed the validation process which you will be able to know from the PayFORT response. After processing the Account Administrator will receive an email notification with success invoices count. Please refer to the section process batch file- request and process batch file - response by visiting this link Process Invoicing Batch File - Request Placeholder: please provide sample code for the request For more details on input parameters refer to the link Process Invoicing Batch File - Response Placeholder: Please provide sample response sent from the PayFORT. Supported Schemes Placeholder: Details for supported schemes to be added here. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"One to Many(Batch invoicing)"},{"location":"batchinvoicing/#one-to-many-batch-invoicing","text":"PayFORT also allows you to generate and upload bulk of invoice to PayFORT as a batch. This service helps you to serve several customers in one go. For example sending bulk invoices to customers for fixed price item. Batch invoicing works on similar principle of Batch Service . There are two types of invoicing services which you can use as per your business requirement. This section describes one to many or batch invoicing service. For one to one invoice generation visit this link .","title":"One to Many (Batch Invoicing)"},{"location":"batchinvoicing/#before-you-start","text":"Before starting you have to know the following: You\u2019re only allowed to send PAYMENT_LINK service command in the invoice batch file. You should active the Batch processing and invoicing services. You can download the invoice batch file template from the Back office by clicking on the Batch invoicing tab that appears only if you activate the batch and invoicing services.","title":"Before You Start"},{"location":"batchinvoicing/#steps-to-activate-batch-and-invoicing-services","text":"Provide steps to activate batch and invoicing services from the back office along with images, videos etc.","title":"Steps to activate Batch and Invoicing services"},{"location":"batchinvoicing/#steps-to-download-the-batch-invoicing-template","text":"Provide steps to download batch invoicing template from the backoffice along with images, videos, etc.","title":"Steps to download the Batch Invoicing Template"},{"location":"batchinvoicing/#how-it-works","text":"Placeholder: Add Integration flow/Process flow diagram. As Batch Invoice process applies similar steps as that of Batch service, here are steps : Upload Invoicing Batch File This request is quite similar to the upload batch file request that you process in the Batch Service . Only difference is that you will be uploading the batch invoicing template (which can be downloaded from the back office, provided you have activated the batch and invoicing service). This request allows you to upload the invoice batch file to PayFORT system. Please refer to the section upload batch file- request and upload batch file - response by visiting this link Upload Invoicing Batch File - Request Placeholder: please provide sample code for the request For more details on input parameters refer to the link Upload Invoicing Batch File - Response Placeholder: Please provide sample response sent from the PayFORT. Get Invoicing Batch Results This request is similar to the Get Batch file results request in the Batch Service. In this case you will be requesting the results of the invoicing template which has been uploaded to the PayFORT system. This request allows you to validate the format of the file and to check that the merchant reference for each and every transaction is unique. After validation the Account Administrator will receive an email notification with success invoices count. Please refer to the section get batch file results- request and get batch file results - response by visiting this link Get Invoicing Batch Results - Request Placeholder: please provide sample code for the request For more details on input parameters refer to the link Get Invoicing Batch Results - Response Placeholder: Please provide sample response sent from the PayFORT. Process Invoicing Batch File This is again similar to the last step in the Batch service where you process the batch file. In this case you will be requesting to process the invoicing template for further transactions. This request allows you to initiate the processing of transactions. To start the processing the file should have been validated in the Get Invoicing Batch Results-request and passed the validation process which you will be able to know from the PayFORT response. After processing the Account Administrator will receive an email notification with success invoices count. Please refer to the section process batch file- request and process batch file - response by visiting this link Process Invoicing Batch File - Request Placeholder: please provide sample code for the request For more details on input parameters refer to the link Process Invoicing Batch File - Response Placeholder: Please provide sample response sent from the PayFORT.","title":"How it Works"},{"location":"batchinvoicing/#supported-schemes","text":"Placeholder: Details for supported schemes to be added here.","title":"Supported Schemes"},{"location":"batchinvoicing/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"batchinvoicing/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"batchservice/","text":"Batch Service On several occasions you will be required to perform tasks in batches. PayFORT Batch Service allows you to process requests in bulk as a batch. One example that can fits the description of batch service is the bulk invoice generation. This service reduces the time and manual effort required as in case of one to one service. For example creating a invoice for 100 customers for same product with same price increases the effort if done in single units, however batch service reduces the effort by perform the operation in one go. Before You Start You have to bear in mind certain conditions while performing Batch Operations. Here they are: You\u2019re only allowed to send one of the following transactions in your batch file or a mixture of them: Recurring Transactions: In the recurring transactions PURCHASE command should be sent while performing bulk operations. Maintenance operations (capture, refund , and void authorization) You can perform any of the maintenance operations for bulk processing of transactions after completing a successful Authorization or Purchase transactions through one of PayFort\u2019s channels. You should activate the Batch processing service to process the transactions in bulk. How it works The batch service works in three steps. The following steps describes how batch processing service works. Placeholder: Provide process flow/Integration flow diagram along with description. Upload Batch File This request allows you to upload the batch file to the PayFORT system. Get Batch Results This request allows you to validate the format of the file and to check that the merchant reference for each and every transaction is unique. Process Batch File This request allows you to initiate the processing of transactions(recurring,maintenance or combination of both). In order to start the processing the file should have been validated and passed the validation process. Upload Batch file This request allows you to upload the Batch file to the PayFORT system. You will specify the order of the fields in the batch file. Then you will receive a success message (response code: 50000) indicating that the batch file uploaded successfully at PayFORT side. Then Payfort will start the validation process on the uploaded file Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/upload/ Live POST https://paymentservices.payfort.com/FortAPI/upload/ Parameters Submission Type Host to Host Form Post Request (From the backend) Make sure to add the action, method and enctype properties on the form tag as shown below: <form action=\u201chttps://sbpaymentservices.payfort.com/FortAPI/upload/\u201d method=\u201cPOST\u201d enctype=\u201cmultipart/form-data\u201d> Upload Batch File - Request The first process in the Batch processing is Upload Batch File request to PayFORT system. The below html sample code describes how to create a request for bulk upload to the PayFORT. You can visit the link to learn more about input parameters for the request. Upload Batch Request Example! <html><body> <form action=\"https://sbpaymentservices.payfort.com/FortAPI/upload\" method=\"POST\" enctype=\"multipart/form-data\"> <input type=\"text\" name=\"merchant_identifier\" value=\"bxgOIxIz\" /> <input type=\"text\" name=\"access_code\" value=\"1DFxVvhXWV6wumenTTg9\" /> <input type=\"text\" name=\"service_command\" value=\"UPLOAD_BATCH_FILE\" /> <input type=\"text\" name=\"batch_reference\" value=\"batch180\" /> <input type=\"text\" name=\"language\" value=\"en\" /> <input type=\"text\" name=\"signature\" value=\"9bea9f369473b8355b2c32884f4b2e8425b145b10d647c2fcaeeee79d7f86fdc\" /><input type=\"file\" name=\"file\" accept=\"test.csv\"> <input type=\"submit\"> </form> </body></html> Upload Batch File - Response Here is the sample JSON response sent by the PayFORT server with response_code as 50000 indicating successful upload. {\u201cresponse_code\u201d:\u201c50000\u201d, \u201cservice_command\u201d:\u201cUPLOAD_BATCH_FILE\u201d, \u201cresponse_message\u201d:\u201cSuccess\u201d, \u201cbatch_id\u201d:\u201c151791753100095172\u201d, \u201csignature\u201d:\u201ca8888a646b30f756a4f7ce892574e9da7342d7833c3b83cf6f2393978430d74f\u201d, \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cstatus\u201d:\u201c50\u201d} Get Batch Results Once the batch upload operation has been successfully completed next batch operation is to fetch batch results. This request allows you to validate the format of the file and to check that the merchant reference for each and every transaction is unique. In the response of this request the merchant will receive the batch file validation results such as (Batch validation successfully, Validation done with errors, The Batch file still under validation) The batch file cannot be processed if the validation status is (The Batch file still under validation). Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/batchApi/ Live POST https://paymentservices.payfort.com/FortAPI/batchApi/ Parameters Submission Type REST POST request using JSON. Get Batch Results - Request The below JSON sample file describes how to create a request for fetching batch results from the PayFORT. You can visit the link to learn more about input parameters for the request. Get Batch Results Request Example! { \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201csignature\u201d:\u201c17e62207b17ea9f550b41811039cb4a05f86087c5cdec40aad1dcc250909b054\u201d, \u201cservice_command\u201d:\u201cGET_BATCH_RESULTS\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cbatch_id\u201d : \u201c151791753100095172\u201d } Get Batch Results - Response Once the Batch Results have been requested from PayFORT you will receive a response similar to the sample shown here: Sample JSON response sent by PayFORT server { \u201ctransactions_count\u201d: \u201c9\u201d, \u201cresponse_code\u201d: \u201c70000\u201d, \u201cservice_command\u201d: \u201cGET_BATCH_RESULTS\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201cbatch_id\u201d: \u201c151791753100095172\u201d, \u201csignature\u201d: \u201c036823f98cfca2a1b7efcf7552dd87fc44df666fc345d553ce733efb2003f5cd\u201d, \u201cmerchant_identifier\u201d: \u201cbxgOIxIz\u201d, \u201caccess_code\u201d: \u201c1DFxVvhXWV6wumenTTg9\u201d, \u201cbatch_reference\u201d: \u201cbatch180\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201cstatus\u201d: \u201c70\u201d } Process Batch file The last step in Batch Processing is to process the uploaded batch file for transaction. This request allows you to initiate the processing of transactions. In order to start processing, the file should have been validated and passed the validation successfully regarding less the validation done without/with errors. Endpoints Sandbox POST https://sbbatch.payfort.com/integration-batch/batchApi/ Live POST https://paymentservices.payfort.com/FortAPI/batchApi/ Parameters Submission Type REST POST request using JSON. Process Batch File - Request The below JSON sample file describes how to create a request for processing the batch file . You can visit the link to learn more about input parameters for the request. Process Batch Request Example! { \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201csignature\u201d:\u201c17e62207b17ea9f550b41811039cb4a05f86087c5cdec40aad1dcc250909b054\u201d, \u201cservice_command\u201d:\u201cPROCESS_BATCH\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cbatch_id\u201d : \u201c151791753100095172\u201d } Process Batch File - Response PayFORT will return the response in the form of JSON format and the response_code as 72147 stating that the batch file has been processed successfully for the transaction. Process Batch Response Example! { \u201cresponse_code\u201d:\u201c72147\u201d, \u201cservice_command\u201d:\u201cPROCESS_BATCH\u201d, \u201cresponse_message\u201d:\u201cProcess batch request received\u201d, \u201csignature\":\u201cee1d30d4fcc6f61100cca0a5ee0639e3c22620ae88d6dc7ec2b6aad2a2489184\u201d, \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cstatus\u201d:\u201c72\u201d } Now you can initiate Get Batch Results Request once again to see final status for each transaction within the processed batch file. PayFORT will send the response example as shown below Line_Number,response_code,response_message,status,eci,fort_id,merchant_reference, amount,card_number,expiry_date,currency \u201c5\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095202\u201d,\u201cnewww33\u201d,\u201c10003\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c4\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095203\u201d,\u201cnewww32\u201d,\u201c10002\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c10\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095208\u201d,\u201cnewww38\u201d,\u201c10008\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c8\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095204\u201d,\u201cnewww36\u201d,\u201c10006\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c9\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095205\u201d,\u201cnewww37\u201d,\u201c10007\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c2\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095206\u201d,\u201cnewww30\u201d,\u201c10000\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c6\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095201\u201d,\u201cnewww34\u201d,\u201c10004\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c7\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095207\u201d,\u201cnewww35\u201d,\u201c10005\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c3\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095200\u201d,\u201cnewww31\u201d,\u201c10001\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Batch Service"},{"location":"batchservice/#batch-service","text":"On several occasions you will be required to perform tasks in batches. PayFORT Batch Service allows you to process requests in bulk as a batch. One example that can fits the description of batch service is the bulk invoice generation. This service reduces the time and manual effort required as in case of one to one service. For example creating a invoice for 100 customers for same product with same price increases the effort if done in single units, however batch service reduces the effort by perform the operation in one go.","title":"Batch Service"},{"location":"batchservice/#before-you-start","text":"You have to bear in mind certain conditions while performing Batch Operations. Here they are: You\u2019re only allowed to send one of the following transactions in your batch file or a mixture of them: Recurring Transactions: In the recurring transactions PURCHASE command should be sent while performing bulk operations. Maintenance operations (capture, refund , and void authorization) You can perform any of the maintenance operations for bulk processing of transactions after completing a successful Authorization or Purchase transactions through one of PayFort\u2019s channels. You should activate the Batch processing service to process the transactions in bulk.","title":"Before You Start"},{"location":"batchservice/#how-it-works","text":"The batch service works in three steps. The following steps describes how batch processing service works. Placeholder: Provide process flow/Integration flow diagram along with description. Upload Batch File This request allows you to upload the batch file to the PayFORT system. Get Batch Results This request allows you to validate the format of the file and to check that the merchant reference for each and every transaction is unique. Process Batch File This request allows you to initiate the processing of transactions(recurring,maintenance or combination of both). In order to start the processing the file should have been validated and passed the validation process.","title":"How it works"},{"location":"batchservice/#upload-batch-file","text":"This request allows you to upload the Batch file to the PayFORT system. You will specify the order of the fields in the batch file. Then you will receive a success message (response code: 50000) indicating that the batch file uploaded successfully at PayFORT side. Then Payfort will start the validation process on the uploaded file","title":"Upload Batch file"},{"location":"batchservice/#endpoints","text":"Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/upload/ Live POST https://paymentservices.payfort.com/FortAPI/upload/","title":"Endpoints"},{"location":"batchservice/#parameters-submission-type","text":"Host to Host Form Post Request (From the backend) Make sure to add the action, method and enctype properties on the form tag as shown below: <form action=\u201chttps://sbpaymentservices.payfort.com/FortAPI/upload/\u201d method=\u201cPOST\u201d enctype=\u201cmultipart/form-data\u201d>","title":"Parameters Submission Type"},{"location":"batchservice/#upload-batch-file-request","text":"The first process in the Batch processing is Upload Batch File request to PayFORT system. The below html sample code describes how to create a request for bulk upload to the PayFORT. You can visit the link to learn more about input parameters for the request. Upload Batch Request Example! <html><body> <form action=\"https://sbpaymentservices.payfort.com/FortAPI/upload\" method=\"POST\" enctype=\"multipart/form-data\"> <input type=\"text\" name=\"merchant_identifier\" value=\"bxgOIxIz\" /> <input type=\"text\" name=\"access_code\" value=\"1DFxVvhXWV6wumenTTg9\" /> <input type=\"text\" name=\"service_command\" value=\"UPLOAD_BATCH_FILE\" /> <input type=\"text\" name=\"batch_reference\" value=\"batch180\" /> <input type=\"text\" name=\"language\" value=\"en\" /> <input type=\"text\" name=\"signature\" value=\"9bea9f369473b8355b2c32884f4b2e8425b145b10d647c2fcaeeee79d7f86fdc\" /><input type=\"file\" name=\"file\" accept=\"test.csv\"> <input type=\"submit\"> </form> </body></html>","title":"Upload Batch File - Request"},{"location":"batchservice/#upload-batch-file-response","text":"Here is the sample JSON response sent by the PayFORT server with response_code as 50000 indicating successful upload. {\u201cresponse_code\u201d:\u201c50000\u201d, \u201cservice_command\u201d:\u201cUPLOAD_BATCH_FILE\u201d, \u201cresponse_message\u201d:\u201cSuccess\u201d, \u201cbatch_id\u201d:\u201c151791753100095172\u201d, \u201csignature\u201d:\u201ca8888a646b30f756a4f7ce892574e9da7342d7833c3b83cf6f2393978430d74f\u201d, \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cstatus\u201d:\u201c50\u201d}","title":"Upload Batch File - Response"},{"location":"batchservice/#get-batch-results","text":"Once the batch upload operation has been successfully completed next batch operation is to fetch batch results. This request allows you to validate the format of the file and to check that the merchant reference for each and every transaction is unique. In the response of this request the merchant will receive the batch file validation results such as (Batch validation successfully, Validation done with errors, The Batch file still under validation) The batch file cannot be processed if the validation status is (The Batch file still under validation).","title":"Get Batch Results"},{"location":"batchservice/#endpoints_1","text":"Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/batchApi/ Live POST https://paymentservices.payfort.com/FortAPI/batchApi/","title":"Endpoints"},{"location":"batchservice/#parameters-submission-type_1","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"batchservice/#get-batch-results-request","text":"The below JSON sample file describes how to create a request for fetching batch results from the PayFORT. You can visit the link to learn more about input parameters for the request. Get Batch Results Request Example! { \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201csignature\u201d:\u201c17e62207b17ea9f550b41811039cb4a05f86087c5cdec40aad1dcc250909b054\u201d, \u201cservice_command\u201d:\u201cGET_BATCH_RESULTS\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cbatch_id\u201d : \u201c151791753100095172\u201d }","title":"Get Batch Results - Request"},{"location":"batchservice/#get-batch-results-response","text":"Once the Batch Results have been requested from PayFORT you will receive a response similar to the sample shown here: Sample JSON response sent by PayFORT server { \u201ctransactions_count\u201d: \u201c9\u201d, \u201cresponse_code\u201d: \u201c70000\u201d, \u201cservice_command\u201d: \u201cGET_BATCH_RESULTS\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201cbatch_id\u201d: \u201c151791753100095172\u201d, \u201csignature\u201d: \u201c036823f98cfca2a1b7efcf7552dd87fc44df666fc345d553ce733efb2003f5cd\u201d, \u201cmerchant_identifier\u201d: \u201cbxgOIxIz\u201d, \u201caccess_code\u201d: \u201c1DFxVvhXWV6wumenTTg9\u201d, \u201cbatch_reference\u201d: \u201cbatch180\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201cstatus\u201d: \u201c70\u201d }","title":"Get Batch Results - Response"},{"location":"batchservice/#process-batch-file","text":"The last step in Batch Processing is to process the uploaded batch file for transaction. This request allows you to initiate the processing of transactions. In order to start processing, the file should have been validated and passed the validation successfully regarding less the validation done without/with errors.","title":"Process Batch file"},{"location":"batchservice/#endpoints_2","text":"Sandbox POST https://sbbatch.payfort.com/integration-batch/batchApi/ Live POST https://paymentservices.payfort.com/FortAPI/batchApi/","title":"Endpoints"},{"location":"batchservice/#parameters-submission-type_2","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"batchservice/#process-batch-file-request","text":"The below JSON sample file describes how to create a request for processing the batch file . You can visit the link to learn more about input parameters for the request. Process Batch Request Example! { \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201csignature\u201d:\u201c17e62207b17ea9f550b41811039cb4a05f86087c5cdec40aad1dcc250909b054\u201d, \u201cservice_command\u201d:\u201cPROCESS_BATCH\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cbatch_id\u201d : \u201c151791753100095172\u201d }","title":"Process Batch File - Request"},{"location":"batchservice/#process-batch-file-response","text":"PayFORT will return the response in the form of JSON format and the response_code as 72147 stating that the batch file has been processed successfully for the transaction. Process Batch Response Example! { \u201cresponse_code\u201d:\u201c72147\u201d, \u201cservice_command\u201d:\u201cPROCESS_BATCH\u201d, \u201cresponse_message\u201d:\u201cProcess batch request received\u201d, \u201csignature\":\u201cee1d30d4fcc6f61100cca0a5ee0639e3c22620ae88d6dc7ec2b6aad2a2489184\u201d, \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cstatus\u201d:\u201c72\u201d } Now you can initiate Get Batch Results Request once again to see final status for each transaction within the processed batch file. PayFORT will send the response example as shown below Line_Number,response_code,response_message,status,eci,fort_id,merchant_reference, amount,card_number,expiry_date,currency \u201c5\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095202\u201d,\u201cnewww33\u201d,\u201c10003\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c4\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095203\u201d,\u201cnewww32\u201d,\u201c10002\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c10\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095208\u201d,\u201cnewww38\u201d,\u201c10008\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c8\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095204\u201d,\u201cnewww36\u201d,\u201c10006\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c9\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095205\u201d,\u201cnewww37\u201d,\u201c10007\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c2\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095206\u201d,\u201cnewww30\u201d,\u201c10000\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c6\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095201\u201d,\u201cnewww34\u201d,\u201c10004\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c7\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095207\u201d,\u201cnewww35\u201d,\u201c10005\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d \u201c3\u201d,\u201c14000\u201d,\u201cSuccess\u201d,\u201c14\u201d,\u201cRECURRING\u201d,\u201c151792390600095200\u201d,\u201cnewww31\u201d,\u201c10001\u201d, \u201c400555******0001\u201d,\u201c2105\u201d,\u201cUSD\u201d","title":"Process Batch File - Response"},{"location":"batchservice/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"batchservice/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"batchserviceparameters/","text":"Batch Service Request and Response Parameters Upload Batch File - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: UPLOAD_BATCH_FILE Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Mandatory Max: 20 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . / language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar file Alphanumeric Mandatory Max: 50 The file that contain a batch of transactions. The file should be of type CSV. Example: test.csv Special characters: . - ! @ # $ % ^ & ( ) _ + , Space signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a Upload Batch File - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: UPLOAD_BATCH_FILE access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Max: 20 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar batch_id Numeric Max: 20 The Merchant\u2019s unique batch ID. Example: 150754364000030895 signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 50000 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses Get Batch Results - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: GET_BATCH_RESULTS Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Mandatory Max: 20 The Merchant\u2019s unique order number. *You have to use the same batch reference you used in the upload_batch_file. Example: XYZ9239-yu898 Special characters: - _ . / language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a batch_id Numeric Optional Max: 20 The Merchant\u2019s unique batch ID returned when uploading a file successfully. Example: 150754364000030895 Get Batch Results Request Example! { \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201csignature\u201d:\u201c17e62207b17ea9f550b41811039cb4a05f86087c5cdec40aad1dcc250909b054\u201d, \u201cservice_command\u201d:\u201cGET_BATCH_RESULTS\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cbatch_id\u201d : \u201c151791753100095172\u201d } Get Batch Results - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: GET_BATCH_RESULTS access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Max: 20 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a batch_id Numeric Max: 20 The Merchant\u2019s unique batch ID. Example: 150754364000030895 transactions_count Numeric Max: 10 A parameter that counts the total number of transactions inside the file. Example: 9 response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 70000 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section [statuses]( Process Batch File - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: PROCESS_BATCH Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Mandatory Max: 20 The Merchant\u2019s unique order number. *You have to use the same batch reference you used in the upload_batch_file. Example: XYZ9239-yu898 Special characters: - _ . / language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a batch_id Numeric Optional Max: 20 The Merchant\u2019s unique batch ID returned when uploading a file successfully. Example: 150754364000030895","title":"Batch Service Request and Response Parameters"},{"location":"batchserviceparameters/#batch-service-request-and-response-parameters","text":"","title":"Batch Service Request and Response Parameters"},{"location":"batchserviceparameters/#upload-batch-file-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: UPLOAD_BATCH_FILE Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Mandatory Max: 20 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . / language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar file Alphanumeric Mandatory Max: 50 The file that contain a batch of transactions. The file should be of type CSV. Example: test.csv Special characters: . - ! @ # $ % ^ & ( ) _ + , Space signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a","title":"Upload Batch File - Request"},{"location":"batchserviceparameters/#upload-batch-file-response","text":"The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: UPLOAD_BATCH_FILE access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Max: 20 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar batch_id Numeric Max: 20 The Merchant\u2019s unique batch ID. Example: 150754364000030895 signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 50000 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses","title":"Upload Batch File - Response"},{"location":"batchserviceparameters/#get-batch-results-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: GET_BATCH_RESULTS Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Mandatory Max: 20 The Merchant\u2019s unique order number. *You have to use the same batch reference you used in the upload_batch_file. Example: XYZ9239-yu898 Special characters: - _ . / language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a batch_id Numeric Optional Max: 20 The Merchant\u2019s unique batch ID returned when uploading a file successfully. Example: 150754364000030895 Get Batch Results Request Example! { \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201caccess_code\u201d:\u201c1DFxVvhXWV6wumenTTg9\u201d, \u201csignature\u201d:\u201c17e62207b17ea9f550b41811039cb4a05f86087c5cdec40aad1dcc250909b054\u201d, \u201cservice_command\u201d:\u201cGET_BATCH_RESULTS\u201d, \u201cbatch_reference\u201d:\u201cbatch180\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cbatch_id\u201d : \u201c151791753100095172\u201d }","title":"Get Batch Results - Request"},{"location":"batchserviceparameters/#get-batch-results-response","text":"The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: GET_BATCH_RESULTS access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Max: 20 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a batch_id Numeric Max: 20 The Merchant\u2019s unique batch ID. Example: 150754364000030895 transactions_count Numeric Max: 10 A parameter that counts the total number of transactions inside the file. Example: 9 response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 70000 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section [statuses](","title":"Get Batch Results - Response"},{"location":"batchserviceparameters/#process-batch-file-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: PROCESS_BATCH Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj batch_reference Alphanumeric Mandatory Max: 20 The Merchant\u2019s unique order number. *You have to use the same batch reference you used in the upload_batch_file. Example: XYZ9239-yu898 Special characters: - _ . / language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a batch_id Numeric Optional Max: 20 The Merchant\u2019s unique batch ID returned when uploading a file successfully. Example: 150754364000030895","title":"Process Batch File - Request"},{"location":"billpresentment/","text":"Cash Payment Accept cash payments using the same integration process you use for card payments. Through this service your customers can pay to any authorized PayFORT's payment partners for their order by showing a unique bill number that is displayed by your site or sent to them by you. This service allows you to generate a unique bill numbers for your Customer\u2019s orders using the PayFORT API. Endpoints Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Supported Schemes Fawry Features Details Countries supported Egypt Type voucher Clearing and Settlement Instant Processing currencies EGP Default settlement currency USD Refunds Yes Partial Refunds Yes Placeholder: If more than one scheme is supported then toggable tab is required which will contain a table for each tab similar to the above. Fawry Payment Start accepting payments using Fawry, a favorite payment method in Egypt. To start accepting Fawry payments, please contact your customer success manager. Request a Fawry payment The Request Use the details below to set up your request. Endpoints Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Body parameters The table below describes the minimum recommended fields. You can find the full list, as well as complete request and response examples, in our API reference service_command (String,mandatory,) Maximum Length Possible/ expected values Special Characters Description 20 BILL_PRESENTMENT _ A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic request_expiry_date (alphanumeric, mandatory) Maximum Length Example Special Characters Description 25 2017-12-20T15:36:55+03:00 - + : The date when the bill expires. *The merchant will hold the item till the expiry date. If the customer didn\u2019t pay, the holding will be canceled. payment_partner (String, mandatory) Maximum Length Possible/Expected values Special Characters Description 5 FAWRY - + : A financial corporation that generate bills to the customer. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature customer_name (alpha, optional) Maximum Length Example Special Characters Description 50 John Smith _ \\ / - . ' Space The customer\u2019s name customer_email (alphanumeric, optional) Maximum Length Example Special Characters Description 254 customer@domain.com _ - . @ + The customer\u2019s email. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Response service_command (String) Maximum Length Possible/ expected values Special Characters Description 20 BILL_PRESENTMENT _ A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic bill_number (numeric) Maximum Length Example Description 14 14823285500005 A unique number generated by PayFort to pay bills. request_expiry_date (alphanumeric) Maximum Length Example Special Characters Description 25 2017-12-20T15:36:55+03:00 - + : The date when the bill expires. *The merchant will hold the item till the expiry date. If the customer didn\u2019t pay, the holding will be canceled. payment_partner (String) Maximum Length Possible/Expected values Special Characters Description 5 FAWRY - + : A financial corporation that generate bills to the customer. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature customer_name (alpha) Maximum Length Example Special Characters Description 50 John Smith _ \\ / - . ' Space The customer\u2019s name customer_email (alphanumeric) Maximum Length Example Special Characters Description 254 customer@domain.com _ - . @ + The customer\u2019s email. response_message (alphanumeric) Maximum Length Possible/Expected value Description 150 Please refer to section messages Message description of the response code. It returns according to the request language. response_code (numeric) Maximum Length Example Description 5 46000 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/Expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Cash Payment"},{"location":"billpresentment/#cash-payment","text":"Accept cash payments using the same integration process you use for card payments. Through this service your customers can pay to any authorized PayFORT's payment partners for their order by showing a unique bill number that is displayed by your site or sent to them by you. This service allows you to generate a unique bill numbers for your Customer\u2019s orders using the PayFORT API.","title":"Cash Payment"},{"location":"billpresentment/#endpoints","text":"Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"billpresentment/#supported-schemes","text":"Fawry Features Details Countries supported Egypt Type voucher Clearing and Settlement Instant Processing currencies EGP Default settlement currency USD Refunds Yes Partial Refunds Yes Placeholder: If more than one scheme is supported then toggable tab is required which will contain a table for each tab similar to the above.","title":"Supported Schemes"},{"location":"billpresentment/#fawry-payment","text":"Start accepting payments using Fawry, a favorite payment method in Egypt. To start accepting Fawry payments, please contact your customer success manager.","title":"Fawry Payment"},{"location":"billpresentment/#request-a-fawry-payment","text":"","title":"Request a Fawry payment"},{"location":"billpresentment/#the-request","text":"Use the details below to set up your request.","title":"The Request"},{"location":"billpresentment/#endpoints_1","text":"Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"billpresentment/#body-parameters","text":"The table below describes the minimum recommended fields. You can find the full list, as well as complete request and response examples, in our API reference service_command (String,mandatory,) Maximum Length Possible/ expected values Special Characters Description 20 BILL_PRESENTMENT _ A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic request_expiry_date (alphanumeric, mandatory) Maximum Length Example Special Characters Description 25 2017-12-20T15:36:55+03:00 - + : The date when the bill expires. *The merchant will hold the item till the expiry date. If the customer didn\u2019t pay, the holding will be canceled. payment_partner (String, mandatory) Maximum Length Possible/Expected values Special Characters Description 5 FAWRY - + : A financial corporation that generate bills to the customer. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature customer_name (alpha, optional) Maximum Length Example Special Characters Description 50 John Smith _ \\ / - . ' Space The customer\u2019s name customer_email (alphanumeric, optional) Maximum Length Example Special Characters Description 254 customer@domain.com _ - . @ + The customer\u2019s email. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Body parameters"},{"location":"billpresentment/#response","text":"service_command (String) Maximum Length Possible/ expected values Special Characters Description 20 BILL_PRESENTMENT _ A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic bill_number (numeric) Maximum Length Example Description 14 14823285500005 A unique number generated by PayFort to pay bills. request_expiry_date (alphanumeric) Maximum Length Example Special Characters Description 25 2017-12-20T15:36:55+03:00 - + : The date when the bill expires. *The merchant will hold the item till the expiry date. If the customer didn\u2019t pay, the holding will be canceled. payment_partner (String) Maximum Length Possible/Expected values Special Characters Description 5 FAWRY - + : A financial corporation that generate bills to the customer. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature customer_name (alpha) Maximum Length Example Special Characters Description 50 John Smith _ \\ / - . ' Space The customer\u2019s name customer_email (alphanumeric) Maximum Length Example Special Characters Description 254 customer@domain.com _ - . @ + The customer\u2019s email. response_message (alphanumeric) Maximum Length Possible/Expected value Description 150 Please refer to section messages Message description of the response code. It returns according to the request language. response_code (numeric) Maximum Length Example Description 5 46000 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/Expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Response"},{"location":"billpresentment/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"billpresentment/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"bypass/","text":"What is Bypass? The Bypass consists of security system which combines the features of 3-D secure services. This ensures that your account has additional layer of security services which will authenticate every transaction being carried out by the customers on your site. This will not only safeguard the interests of the customers but also safeguard you from potential fraud and threats from novel scammers. The Bypass consists of 3-D secure services and cvv suppression. This section explains the complete 3-D Secure services and cvv suppression. 3-D Secure services Overview The 3D Secure (3DS) protocol, commonly known by its branded names Verified by Visa , Mastercard SecureCode , American Express SafeKey , introduced an additional layer of verification to protect you from liability for fraudulent card payments and make online payments more secure. Placeholder: Visual graphs and pictures to be added that displays the complete 3-D secure services 3-D Secure services is an extra authentication service to authenticate the transaction by sending an OTP to the card holder from the issuer bank then the card holder have to authenticate the transaction by entering this OTP on the 3DS page. There are two types of 3-D Secure Services: Check 3-D Secure & Flex 3-D Secure Services: External MPI & Expose 3-D Secure services: Check 3-D Secure & Flex 3-D Secure Services Check 3-D Secure Service This service provides cardholders a decreased risk of other people being able to use their payment cards fraudulently on the Merchant\u2019s site. Placeholder: Integration flow diagram to be added along with the sample php/java/ruby/curl code for check 3-D secure service request being sent to PayFORT. For details on input parameters please visit the link PayFort\u2019s Operations team must activate the 3-D Secure service. Flex 3-D Secure Service This service gives you the flexibility to downgrade the 3-D Secure authentication in the transaction processing, based on a set of rules of your choice. You can active/ deactivate this service under the \u201cFlex Management\u201d tab on your FORT Back-office. Placeholder: Provide steps to activate/deactivate the service in the back office. How it Works? Placeholder: Provide visual presentation/Integration/process flow diagram alongwith description. Placeholder: Provide Backoffice snapshot of the \"Flex Management Tab\" Click on the Flex Management tab on the main menu of your PayFORT Back-office. The following tabs should be displayed: \u2022 Service configuration: allows you to activate/ deactivate the flex service after you accept the terms and conditions. \u2022 List management: allows you to add multiple lists with different list types (email, IP, BIN, custom field and country) through Add New List . \u2022 Rules Management: sets the required rules for flex Management by your choice. \u2022 Audit log: Provides logs of triggered actions by you in configurations of the Flex service. Placeholder: Provide sample code for request sent to PayFORT for Flex 3-D secure service. For details on input parameters please visit the link This Service is only available for eci = ECOMMERCE transactions (Redirection, Trusted, SDK, Merchant page and Merchant page 2.0) and credit cards (Visa, MasterCard and Amex). External MPI & Expose 3-D Secure services External MPI 3-D Secure Service This service allows the payFort system to accept Purchase/ Authorization transactions in which the 3ds check was done externally using an external MPI. Placeholder: Provide integration flow diagram alongwith description. Endpoints Sandbox: POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. External MPI 3-D Secure - Request Placeholder: Provide sample code for External MPI 3-D Secure - Request For details on input parameters please visit the link Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. External MPI 3-D Secure - Response Placeholder: Provide sample JSON response sent by PayFORT system. For details on response parameters please visit the link Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Expose 3-D Secure Service This service allows you to use the 3-D Secure service in standalone request without the transaction purchase/Authorization flow, the user 3-D Secure Authentication can be done separately to get the user Authentication data and then you can perform the charge request Authorization/Purchase in another request. Placeholder: Provide Integration flow/process flow diagram alongwith description if applicable. Endpoints Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Production Environment URL: POST https://paymentservices.PayFort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. 3-D Secure Enrollment Service Command - Request For details on input parameters please visit the link placeholder: Sample code to be inserted for the request. 3-D Secure Enrollment Request Example in JSON file { \u201cmerchant_reference\u201d:\u201cXYZ9239-yu898\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cservice_command\u201d:\u201c3DS_ENROLLMENT\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201ccurrency\u201d:\u201cAED\u201d, \u201camount\u201d:\u201c10000\u201d, \u201ccard_number\u201d:\u201c4005550000000001\u201d, \u201cexpiry_date\u201d:\u201c2105\u201d, \u201cmerchant_3ds_url\u201d:\u201chttps://www.merchant.com\u201d, \u201csignature\u201d:\u201ca10048ca30a401d798f236bbdeb8b63a3a944449fafa9af2dee28eb6054dc07e\u201d } 3-D Secure Enrollment Service Command - Response For details on response parameters please visit the link 3-D Secure Enrollment Response sent by PayFORT { \u201camount\u201d: \u201c10000\u201d, \u201cresponse_code\u201d: \u201c44000\u201d, \u201ccard_number\u201d: \u201c400555******0001\u201d, \u201csignature\u201d: \u201c44d80139e9557661822c2e2d571983cc84a2de5a85e7499835dffd19f6192040\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201caccess_code\u201d: \u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cexpiry_date\u201d: \u201c2105\u201d, \u201cmerchant_3ds_url\u201d: \u201chttps://www.merchant.com\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201cthreeds_id\u201d: \u201c153606397100001061\u201d, \u201c3ds_url\u201d: \u201chttps://migs.mastercard.com.au/vpcpay?paymentId=3499269050937443526&DOID=E870F0B65189A7128A86B7FC206F136E&o=pt&action=retry\u201d, \u201cservice_command\u201d: \u201c3DS_ENROLLMENT\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201c3ds_enrolled\u201d: \u201cY\u201d, \u201ccurrency\u201d: \u201cAED\u201d, \u201cstatus\u201d: \u201c44\u201d } After you get back a 3Ds Enrollment response that includes the parameter 3ds_enrolled of value Y follow the steps for the 3Ds Authentication request: In case you are on MIGS processor, copy the returned 3ds_url in a new browser. Then, select all the returned parameters to be send in the next request \u201c3Ds Authentication\u201d. In case you are on \"Cybersource\u201d/ \u201cMPGS\u201d processor; two parameters will returns in the \u201c3Ds Enrollment\u201d; as below: \u2022 MD \u2022 PaRes And you have to copy them in the \u201c3Ds Authentication\u201d request; as you will see in the 3Ds Authentication request example. 3-D Secure Authentication Service Placeholder: Provide process flow diagram along with description. Endpoints Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. 3-D Secure Authentication Service Command - Request For details on input parameters please visit the link Include the following parameters in the Request you will send to PayFort: 3-D Secure Authentication Request on MIGS processor Example!** { \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cservice_command\u201d:\u201c3DS_AUTHENTICATION\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201cthird_party_body\u201d:\u201cvpc_3DSECI=05&vpc_3DSXID=6kQGHEiZDU0H4+mUWF7zELHAcqM=&vpc_3DSenrolled=Y&vpc_3DSstatus=Y&vpc_Amount=1000&vpc_BatchNo=0&vpc_Command=pay&vpc_Currency=USD&vpc_Locale=en_SA&vpc_MerchTxnRef=153615472100001289&vpc_Merchant=TEST81002&vpc_Message=Approved&vpc_OrderInfo=153615472100001289&vpc_SecureHash=5E22F556A03C3ED90065DDBDA51577D4FAFF45BD858C3587D6589E69953C5615&vpc_SecureHashType=SHA256&vpc_TransactionNo=0&vpc_TxnResponseCode=0&vpc_VerSecurityLevel=05&vpc_VerStatus=Y&vpc_VerToken=gIGCg4SFhoeIiYqLjI2Oj5CRkpM=&vpc_VerType=3DS&vpc_Version=1\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201csignature\u201d:\u201c5342edd1b7f34cd7b2be93487f1b80e86a2266f78e274c9bde6b2c1b1eca0f20\u201d } 3-D Secure Authentication Request on Cybersource/ MPGS Processors Example! { \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cservice_command\u201d:\u201c3DS_AUTHENTICATION\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201cthird_party_body\u201d:\u201cMD=153354476300012267&PaRes=eAHNV1nTokgW/SsdPY9GFYuiUEEbkWyCkijIIryxCcimLIL8+kk/q776urp6pmImYmJ8MfNy8ua5mffkzWTNtIlj4RiHfROvWRi3rZ/Ev2XRH78T+NuPoEmKpH9fswdgxO2avcdNm9XVmviMfyZZ7FsXDW3C1K+6NeuHN07R1gtqSTMEi33tsmXcKMKaIOfow4pmcAKNftlY7PvgQ/900yIuYxatvVR5VLttnpaOyTl3sNH2Sstvt2Gv/MFiTwQb+V28JnGCxml8+RtOf5kzX8g5i73Z2evTHSjrHhF7BsRiHy0sirqJq/Cxphfo03uPjcdrXcVoDOL43max7+SufoUCxOkVheMEtVoQOMEg38jKmqc122Xln0kt8C8k8vVmZ9vO7/p27bLY1xYb+vf7OlE2fLI4SmkdK5l7Uy8Kub9QvJFfIQr2DcLGYbbGKUQK/b+NAkVSN1mXlmu01E/MdwOLPalgX/ftmCUVmraJfxvLomr/+D3tuusXDBuG4fMw/1w3CUaiBcJwBkOAqM2Sf6BNf46KI6U612uW96u6ykK/yCa/QykA4y6to9/eJ/yZS9PACIZhMEf4hLx+ColF9elpIAiCQu6xn/t8zfvG9lcmefEm33k3rf+pTX3iOcF72C9Ha9aIz/Fzz1GGCVkSt91/MsM37x89fPNn+0Ufr3cr8rrz54spi0q/HxPDLHtXzO35sUWb+Rr3QrLYB0pvfL8t+Dv3F9DmMKeeT4CGvGqchQNGXWlguIFRMyWV5IeAxvGFmjfd2JbMItIFrPbC9rKqvWYAWBPojRnnt76ZNhAbhLGyo8odXCgbpSjaWl9eb/PLHi77jZz7mD5XwUCLQr4aSMidXJtvzhxGUGKPc8EWKxov4IdqtaeL86DrcSLxXElYbnZc+FmGoxB/IM/u4scrjU4Uzgh+56/ZZ4uPmy47o6xCKoaKwrsCz4Mw54E9DILubne1p6T3UAO6KHI6GEJBVCHIN4CwRC6FvG5boyCAHZdoNgcSExASNATRgIB+YUao6NX2GpLbNCg/YmuENfbW9B3LI6yF27IiGZJF6KM8gejlF5pSYTyik4Z7jj6ZG5v0nFHwN9I1yIitjouDnIYaFPIRCuIcCsoDChbhPG3mm414t114LvkvY9hMwHvxqk2xQDE8OO7JLSyl1nfExN7YUySIEIL6bQ1QXMIzLni0BmVwBVvXBXEcrbBCuI2dQ3wsotJudTJNfWfROSIBLbKogtJ+QGVzhgDf8Mfb5qgEc0EXOaBbACw2GhB4LtPR0uuC/aC3gmXs74F1iwU705Uz4OTFauxp+jho5VlmFuRcy2jumuFnVdwXylXFGnwrt/KQ52gu/L7J71U8XPf7gXdqRJ583NLjzbk7vNuDmG/hhd9dHjRTzw6Ghx/5XpP2THCiNnfnUOx872T2zmE5lpPMkMlSJhck0TNQF4lZf2oTcOmswQoaXRGADrgfY+LAW0wcACUhORJDBUlw1mX9qu9dTT4fq0fhLvfG/HSnztXO9RVUFuhShkwaBlbXHtReXTpYtg8oDqXfwvMkgdH7VTwswohxutkiT0LprCT9xGtV1cCZsEzx1NhBfZEvi4CbraSSWMJiUNVYtR/8gDkHeVvTok+tnDPgh/11qz30frnDa3OZ5fPEq1nsRwX9VFLmBUkqCHkkoZ9KKpj+h5K6gPBdUvbfSkrQTRBLAz7sTXGAZjjACUxwknxkG182690GZTDyE9i+/LomyCUb6sPAJ2+proiDZpiiPoomOLwwocmL24d/0jLXoYoP2B3CWmYBP2Bbk5c0yXhwlmFrFjToQda/Scj7WwkdLY37Nenw9zBpZ8ExIGY5t6+LKXVUvb7cbiRFJSIOr/jAS2PZ3W6bvUNMDZPJIFoOq2xPp0dcsTWnadvVY2bcKU2neK3hKC2ZvIh4zCJfvKDD3UuX+pm6z9SkVJNzBWnOFkYM47Z3I6+qk3lwOS9Lx5Miz04nffcguIiXj9P+vtjZW0KD3ko3/ItwtYd/Ix1pf7m7d0KdG7uSGdvhKDPFo1nJcRL2sDwVdPngHx4oOtdLM17LpmzkPV5WpYBJ8sBt8GvTK1NHpMf8FF4wdxs1KdG4YMV7hXaoNpKKXfAz7cpUk9AyeAhGdxrzYth13lwYp5GnM1t7FDq9iDZHyuuPncmHx8x3k32eNc7GvqWdwuM0J2a/Jh0Bmkg611sCBgUVF2ULtrOGx21QptT1LycIOhXhhv4fpuJikMG3VLT/NhX/Wp3gUzrUn6vTV9uFu0O9HfhXim/EYcvZ5odKwqFKYo0iNNBR8qoksjikfFgWk1tKvfcRm0LBFinzA1ZFWNOwwsQWbdMWxBhyw1uFAiO0bXlLhHOj8ASUcievCEStdp2iV39ZSoKm4NA8R/RdwrOLbbpu5xXqTCI8s0quYUIcIrx2miQkljmRe5rp5vw1niXSebXbOpQ6zNELQ7S8SlqpiXZsGksZ77Oi6v1Fn95nbQ1iTw1sxXet4DDwtxvoTpSH60KZribmVOv+yi3C5FLPz4CuYu7mabUQpU0qeuiCFiWz6jhT8B1xtOZfpVQvZAsqsgE5/LkOkZDoDscZDU3eRDU6XnequqKdWau390XeTHcbVdz6uTcGfuGUjYeOGCf5V/idNF3RDv1fHvHuj3p6y4VIHHQJAsiBM/1juZLQDVBIXBGI4YEzqDhcxKQg1vecLLhNlTPSki9vvZ0K5S2oJFko78VpJZZ2Qk+HORNMq3QzOAI/k0vVGhM1P8ubqkmiReLObwxpYg440VtyjGKgr8xzdldrbcmvcJvGk0gL9FVWS1YURhWpiXZnz1LhfLCFer+iOYJeHuKCgebGk69jdFtdCkbpJC96XoX/UqXfLK87MPZ+L/5+Y0bPlq8PcdT60wP9nw6uIpY=\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201csignature\u201d:\u201c714ae368b706be6db4073e75bd58e8feada61736edc7a07c0e59e3c9071ad2d5\u201d } 3-D Secure Authentication Service Command - Response Placeholder: Provide sample Json response sent by PayFORT. For details on input parameters please visit the link 3Ds Authentication Response on MIGS Processor Example! { \u201cresponse_code\u201d: \u201c44000\u201d, \u201csignature\u201d: \u201c1f87e311965bf27cd497396420eb9c7abe5bfac14d17eb09904517ec86ee2caa\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201cver_token\u201d: \u201cgIGCg4SFhoeIiYqLjI2Oj5CRkpM=\u201d, \u201caccess_code\u201d: \u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201c3ds_eci\u201d: \u201c05\u201d, \u201cthreeds_id\u201d: \u201c153606397100001061\u201d, \u201c3ds_status\u201d: \u201cY\u201d, \u201cservice_command\u201d: \u201c3DS_AUTHENTICATION\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201c3ds_xid\u201d: \u201c6kQGHEiZDU0H4+mUWF7zELHAcqM=\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201c3ds_enrolled\u201d: \u201cY\u201d, \u201cstatus\u201d: \u201c44\u201d } 3-D Secure Authentication Response on Cybersource/ MPGS Processors Example! { \u201cresponse_code\u201d: \u201c44000\u201d, \u201csignature\u201d: \u201c1f87e311965bf27cd497396420eb9c7abe5bfac14d17eb09904517ec86ee2caa\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201cver_token\u201d: \u201cgIGCg4SFhoeIiYqLjI2Oj5CRkpM=\u201d, \u201caccess_code\u201d: \u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201c3ds_eci\u201d: \u201c05\u201d, \u201cthreeds_id\u201d: \u201c153606397100001061\u201d, \u201c3ds_status\u201d: \u201cY\u201d, \u201cservice_command\u201d: \u201c3DS_AUTHENTICATION\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201c3ds_xid\u201d: \u201c6kQGHEiZDU0H4+mUWF7zELHAcqM=\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201c3ds_enrolled\u201d: \u201cY\u201d, \u201cstatus\u201d: \u201c44\u201d } CVV suppression The CVV Suppression enables you to process the eCommerce transaction with PayFort and reduce the requirement of CVV to be part of the transaction request. In this feature the merchant can simplify and ease the user experience for the customer during the checkout . Not all the issuing banks participate in the CVV suppression enablement as the banks in the region check the CVV usually. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Bypass"},{"location":"bypass/#what-is-bypass","text":"The Bypass consists of security system which combines the features of 3-D secure services. This ensures that your account has additional layer of security services which will authenticate every transaction being carried out by the customers on your site. This will not only safeguard the interests of the customers but also safeguard you from potential fraud and threats from novel scammers. The Bypass consists of 3-D secure services and cvv suppression. This section explains the complete 3-D Secure services and cvv suppression.","title":"What is Bypass?"},{"location":"bypass/#3-d-secure-services-overview","text":"The 3D Secure (3DS) protocol, commonly known by its branded names Verified by Visa , Mastercard SecureCode , American Express SafeKey , introduced an additional layer of verification to protect you from liability for fraudulent card payments and make online payments more secure. Placeholder: Visual graphs and pictures to be added that displays the complete 3-D secure services 3-D Secure services is an extra authentication service to authenticate the transaction by sending an OTP to the card holder from the issuer bank then the card holder have to authenticate the transaction by entering this OTP on the 3DS page. There are two types of 3-D Secure Services: Check 3-D Secure & Flex 3-D Secure Services: External MPI & Expose 3-D Secure services:","title":"3-D Secure services Overview"},{"location":"bypass/#check-3-d-secure-flex-3-d-secure-services","text":"","title":"Check 3-D Secure &amp; Flex 3-D Secure Services"},{"location":"bypass/#check-3-d-secure-service","text":"This service provides cardholders a decreased risk of other people being able to use their payment cards fraudulently on the Merchant\u2019s site. Placeholder: Integration flow diagram to be added along with the sample php/java/ruby/curl code for check 3-D secure service request being sent to PayFORT. For details on input parameters please visit the link PayFort\u2019s Operations team must activate the 3-D Secure service.","title":"Check 3-D Secure Service"},{"location":"bypass/#flex-3-d-secure-service","text":"This service gives you the flexibility to downgrade the 3-D Secure authentication in the transaction processing, based on a set of rules of your choice. You can active/ deactivate this service under the \u201cFlex Management\u201d tab on your FORT Back-office. Placeholder: Provide steps to activate/deactivate the service in the back office. How it Works? Placeholder: Provide visual presentation/Integration/process flow diagram alongwith description. Placeholder: Provide Backoffice snapshot of the \"Flex Management Tab\" Click on the Flex Management tab on the main menu of your PayFORT Back-office. The following tabs should be displayed: \u2022 Service configuration: allows you to activate/ deactivate the flex service after you accept the terms and conditions. \u2022 List management: allows you to add multiple lists with different list types (email, IP, BIN, custom field and country) through Add New List . \u2022 Rules Management: sets the required rules for flex Management by your choice. \u2022 Audit log: Provides logs of triggered actions by you in configurations of the Flex service. Placeholder: Provide sample code for request sent to PayFORT for Flex 3-D secure service. For details on input parameters please visit the link This Service is only available for eci = ECOMMERCE transactions (Redirection, Trusted, SDK, Merchant page and Merchant page 2.0) and credit cards (Visa, MasterCard and Amex).","title":"Flex 3-D Secure Service"},{"location":"bypass/#external-mpi-expose-3-d-secure-services","text":"","title":"External MPI &amp; Expose 3-D Secure services"},{"location":"bypass/#external-mpi-3-d-secure-service","text":"This service allows the payFort system to accept Purchase/ Authorization transactions in which the 3ds check was done externally using an external MPI. Placeholder: Provide integration flow diagram alongwith description.","title":"External MPI 3-D Secure Service"},{"location":"bypass/#endpoints","text":"Sandbox: POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"bypass/#parameters-submission-type","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"bypass/#external-mpi-3-d-secure-request","text":"Placeholder: Provide sample code for External MPI 3-D Secure - Request For details on input parameters please visit the link Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"External MPI 3-D Secure - Request"},{"location":"bypass/#external-mpi-3-d-secure-response","text":"Placeholder: Provide sample JSON response sent by PayFORT system. For details on response parameters please visit the link Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"External MPI 3-D Secure - Response"},{"location":"bypass/#expose-3-d-secure-service","text":"This service allows you to use the 3-D Secure service in standalone request without the transaction purchase/Authorization flow, the user 3-D Secure Authentication can be done separately to get the user Authentication data and then you can perform the charge request Authorization/Purchase in another request. Placeholder: Provide Integration flow/process flow diagram alongwith description if applicable.","title":"Expose 3-D Secure Service"},{"location":"bypass/#endpoints_1","text":"Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Production Environment URL: POST https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"bypass/#parameters-submission-type_1","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"bypass/#3-d-secure-enrollment-service-command-request","text":"For details on input parameters please visit the link placeholder: Sample code to be inserted for the request. 3-D Secure Enrollment Request Example in JSON file { \u201cmerchant_reference\u201d:\u201cXYZ9239-yu898\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cservice_command\u201d:\u201c3DS_ENROLLMENT\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201ccurrency\u201d:\u201cAED\u201d, \u201camount\u201d:\u201c10000\u201d, \u201ccard_number\u201d:\u201c4005550000000001\u201d, \u201cexpiry_date\u201d:\u201c2105\u201d, \u201cmerchant_3ds_url\u201d:\u201chttps://www.merchant.com\u201d, \u201csignature\u201d:\u201ca10048ca30a401d798f236bbdeb8b63a3a944449fafa9af2dee28eb6054dc07e\u201d }","title":"3-D Secure Enrollment Service Command - Request"},{"location":"bypass/#3-d-secure-enrollment-service-command-response","text":"For details on response parameters please visit the link 3-D Secure Enrollment Response sent by PayFORT { \u201camount\u201d: \u201c10000\u201d, \u201cresponse_code\u201d: \u201c44000\u201d, \u201ccard_number\u201d: \u201c400555******0001\u201d, \u201csignature\u201d: \u201c44d80139e9557661822c2e2d571983cc84a2de5a85e7499835dffd19f6192040\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201caccess_code\u201d: \u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cexpiry_date\u201d: \u201c2105\u201d, \u201cmerchant_3ds_url\u201d: \u201chttps://www.merchant.com\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201cthreeds_id\u201d: \u201c153606397100001061\u201d, \u201c3ds_url\u201d: \u201chttps://migs.mastercard.com.au/vpcpay?paymentId=3499269050937443526&DOID=E870F0B65189A7128A86B7FC206F136E&o=pt&action=retry\u201d, \u201cservice_command\u201d: \u201c3DS_ENROLLMENT\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201c3ds_enrolled\u201d: \u201cY\u201d, \u201ccurrency\u201d: \u201cAED\u201d, \u201cstatus\u201d: \u201c44\u201d } After you get back a 3Ds Enrollment response that includes the parameter 3ds_enrolled of value Y follow the steps for the 3Ds Authentication request: In case you are on MIGS processor, copy the returned 3ds_url in a new browser. Then, select all the returned parameters to be send in the next request \u201c3Ds Authentication\u201d. In case you are on \"Cybersource\u201d/ \u201cMPGS\u201d processor; two parameters will returns in the \u201c3Ds Enrollment\u201d; as below: \u2022 MD \u2022 PaRes And you have to copy them in the \u201c3Ds Authentication\u201d request; as you will see in the 3Ds Authentication request example.","title":"3-D Secure Enrollment Service Command - Response"},{"location":"bypass/#3-d-secure-authentication-service","text":"Placeholder: Provide process flow diagram along with description.","title":"3-D Secure Authentication Service"},{"location":"bypass/#endpoints_2","text":"Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"bypass/#parameters-submission-type_2","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"bypass/#3-d-secure-authentication-service-command-request","text":"For details on input parameters please visit the link Include the following parameters in the Request you will send to PayFort: 3-D Secure Authentication Request on MIGS processor Example!** { \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cservice_command\u201d:\u201c3DS_AUTHENTICATION\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cmerchant_identifier\u201d:\u201cbxgOIxIz\u201d, \u201cthird_party_body\u201d:\u201cvpc_3DSECI=05&vpc_3DSXID=6kQGHEiZDU0H4+mUWF7zELHAcqM=&vpc_3DSenrolled=Y&vpc_3DSstatus=Y&vpc_Amount=1000&vpc_BatchNo=0&vpc_Command=pay&vpc_Currency=USD&vpc_Locale=en_SA&vpc_MerchTxnRef=153615472100001289&vpc_Merchant=TEST81002&vpc_Message=Approved&vpc_OrderInfo=153615472100001289&vpc_SecureHash=5E22F556A03C3ED90065DDBDA51577D4FAFF45BD858C3587D6589E69953C5615&vpc_SecureHashType=SHA256&vpc_TransactionNo=0&vpc_TxnResponseCode=0&vpc_VerSecurityLevel=05&vpc_VerStatus=Y&vpc_VerToken=gIGCg4SFhoeIiYqLjI2Oj5CRkpM=&vpc_VerType=3DS&vpc_Version=1\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201csignature\u201d:\u201c5342edd1b7f34cd7b2be93487f1b80e86a2266f78e274c9bde6b2c1b1eca0f20\u201d } 3-D Secure Authentication Request on Cybersource/ MPGS Processors Example! { \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cservice_command\u201d:\u201c3DS_AUTHENTICATION\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201cthird_party_body\u201d:\u201cMD=153354476300012267&PaRes=eAHNV1nTokgW/SsdPY9GFYuiUEEbkWyCkijIIryxCcimLIL8+kk/q776urp6pmImYmJ8MfNy8ua5mffkzWTNtIlj4RiHfROvWRi3rZ/Ev2XRH78T+NuPoEmKpH9fswdgxO2avcdNm9XVmviMfyZZ7FsXDW3C1K+6NeuHN07R1gtqSTMEi33tsmXcKMKaIOfow4pmcAKNftlY7PvgQ/900yIuYxatvVR5VLttnpaOyTl3sNH2Sstvt2Gv/MFiTwQb+V28JnGCxml8+RtOf5kzX8g5i73Z2evTHSjrHhF7BsRiHy0sirqJq/Cxphfo03uPjcdrXcVoDOL43max7+SufoUCxOkVheMEtVoQOMEg38jKmqc122Xln0kt8C8k8vVmZ9vO7/p27bLY1xYb+vf7OlE2fLI4SmkdK5l7Uy8Kub9QvJFfIQr2DcLGYbbGKUQK/b+NAkVSN1mXlmu01E/MdwOLPalgX/ftmCUVmraJfxvLomr/+D3tuusXDBuG4fMw/1w3CUaiBcJwBkOAqM2Sf6BNf46KI6U612uW96u6ykK/yCa/QykA4y6to9/eJ/yZS9PACIZhMEf4hLx+ColF9elpIAiCQu6xn/t8zfvG9lcmefEm33k3rf+pTX3iOcF72C9Ha9aIz/Fzz1GGCVkSt91/MsM37x89fPNn+0Ufr3cr8rrz54spi0q/HxPDLHtXzO35sUWb+Rr3QrLYB0pvfL8t+Dv3F9DmMKeeT4CGvGqchQNGXWlguIFRMyWV5IeAxvGFmjfd2JbMItIFrPbC9rKqvWYAWBPojRnnt76ZNhAbhLGyo8odXCgbpSjaWl9eb/PLHi77jZz7mD5XwUCLQr4aSMidXJtvzhxGUGKPc8EWKxov4IdqtaeL86DrcSLxXElYbnZc+FmGoxB/IM/u4scrjU4Uzgh+56/ZZ4uPmy47o6xCKoaKwrsCz4Mw54E9DILubne1p6T3UAO6KHI6GEJBVCHIN4CwRC6FvG5boyCAHZdoNgcSExASNATRgIB+YUao6NX2GpLbNCg/YmuENfbW9B3LI6yF27IiGZJF6KM8gejlF5pSYTyik4Z7jj6ZG5v0nFHwN9I1yIitjouDnIYaFPIRCuIcCsoDChbhPG3mm414t114LvkvY9hMwHvxqk2xQDE8OO7JLSyl1nfExN7YUySIEIL6bQ1QXMIzLni0BmVwBVvXBXEcrbBCuI2dQ3wsotJudTJNfWfROSIBLbKogtJ+QGVzhgDf8Mfb5qgEc0EXOaBbACw2GhB4LtPR0uuC/aC3gmXs74F1iwU705Uz4OTFauxp+jho5VlmFuRcy2jumuFnVdwXylXFGnwrt/KQ52gu/L7J71U8XPf7gXdqRJ583NLjzbk7vNuDmG/hhd9dHjRTzw6Ghx/5XpP2THCiNnfnUOx872T2zmE5lpPMkMlSJhck0TNQF4lZf2oTcOmswQoaXRGADrgfY+LAW0wcACUhORJDBUlw1mX9qu9dTT4fq0fhLvfG/HSnztXO9RVUFuhShkwaBlbXHtReXTpYtg8oDqXfwvMkgdH7VTwswohxutkiT0LprCT9xGtV1cCZsEzx1NhBfZEvi4CbraSSWMJiUNVYtR/8gDkHeVvTok+tnDPgh/11qz30frnDa3OZ5fPEq1nsRwX9VFLmBUkqCHkkoZ9KKpj+h5K6gPBdUvbfSkrQTRBLAz7sTXGAZjjACUxwknxkG182690GZTDyE9i+/LomyCUb6sPAJ2+proiDZpiiPoomOLwwocmL24d/0jLXoYoP2B3CWmYBP2Bbk5c0yXhwlmFrFjToQda/Scj7WwkdLY37Nenw9zBpZ8ExIGY5t6+LKXVUvb7cbiRFJSIOr/jAS2PZ3W6bvUNMDZPJIFoOq2xPp0dcsTWnadvVY2bcKU2neK3hKC2ZvIh4zCJfvKDD3UuX+pm6z9SkVJNzBWnOFkYM47Z3I6+qk3lwOS9Lx5Miz04nffcguIiXj9P+vtjZW0KD3ko3/ItwtYd/Ix1pf7m7d0KdG7uSGdvhKDPFo1nJcRL2sDwVdPngHx4oOtdLM17LpmzkPV5WpYBJ8sBt8GvTK1NHpMf8FF4wdxs1KdG4YMV7hXaoNpKKXfAz7cpUk9AyeAhGdxrzYth13lwYp5GnM1t7FDq9iDZHyuuPncmHx8x3k32eNc7GvqWdwuM0J2a/Jh0Bmkg611sCBgUVF2ULtrOGx21QptT1LycIOhXhhv4fpuJikMG3VLT/NhX/Wp3gUzrUn6vTV9uFu0O9HfhXim/EYcvZ5odKwqFKYo0iNNBR8qoksjikfFgWk1tKvfcRm0LBFinzA1ZFWNOwwsQWbdMWxBhyw1uFAiO0bXlLhHOj8ASUcievCEStdp2iV39ZSoKm4NA8R/RdwrOLbbpu5xXqTCI8s0quYUIcIrx2miQkljmRe5rp5vw1niXSebXbOpQ6zNELQ7S8SlqpiXZsGksZ77Oi6v1Fn95nbQ1iTw1sxXet4DDwtxvoTpSH60KZribmVOv+yi3C5FLPz4CuYu7mabUQpU0qeuiCFiWz6jhT8B1xtOZfpVQvZAsqsgE5/LkOkZDoDscZDU3eRDU6XnequqKdWau390XeTHcbVdz6uTcGfuGUjYeOGCf5V/idNF3RDv1fHvHuj3p6y4VIHHQJAsiBM/1juZLQDVBIXBGI4YEzqDhcxKQg1vecLLhNlTPSki9vvZ0K5S2oJFko78VpJZZ2Qk+HORNMq3QzOAI/k0vVGhM1P8ubqkmiReLObwxpYg440VtyjGKgr8xzdldrbcmvcJvGk0gL9FVWS1YURhWpiXZnz1LhfLCFer+iOYJeHuKCgebGk69jdFtdCkbpJC96XoX/UqXfLK87MPZ+L/5+Y0bPlq8PcdT60wP9nw6uIpY=\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201csignature\u201d:\u201c714ae368b706be6db4073e75bd58e8feada61736edc7a07c0e59e3c9071ad2d5\u201d }","title":"3-D Secure Authentication Service Command - Request"},{"location":"bypass/#3-d-secure-authentication-service-command-response","text":"Placeholder: Provide sample Json response sent by PayFORT. For details on input parameters please visit the link 3Ds Authentication Response on MIGS Processor Example! { \u201cresponse_code\u201d: \u201c44000\u201d, \u201csignature\u201d: \u201c1f87e311965bf27cd497396420eb9c7abe5bfac14d17eb09904517ec86ee2caa\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201cver_token\u201d: \u201cgIGCg4SFhoeIiYqLjI2Oj5CRkpM=\u201d, \u201caccess_code\u201d: \u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201c3ds_eci\u201d: \u201c05\u201d, \u201cthreeds_id\u201d: \u201c153606397100001061\u201d, \u201c3ds_status\u201d: \u201cY\u201d, \u201cservice_command\u201d: \u201c3DS_AUTHENTICATION\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201c3ds_xid\u201d: \u201c6kQGHEiZDU0H4+mUWF7zELHAcqM=\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201c3ds_enrolled\u201d: \u201cY\u201d, \u201cstatus\u201d: \u201c44\u201d } 3-D Secure Authentication Response on Cybersource/ MPGS Processors Example! { \u201cresponse_code\u201d: \u201c44000\u201d, \u201csignature\u201d: \u201c1f87e311965bf27cd497396420eb9c7abe5bfac14d17eb09904517ec86ee2caa\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201cver_token\u201d: \u201cgIGCg4SFhoeIiYqLjI2Oj5CRkpM=\u201d, \u201caccess_code\u201d: \u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201c3ds_eci\u201d: \u201c05\u201d, \u201cthreeds_id\u201d: \u201c153606397100001061\u201d, \u201c3ds_status\u201d: \u201cY\u201d, \u201cservice_command\u201d: \u201c3DS_AUTHENTICATION\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201c3ds_xid\u201d: \u201c6kQGHEiZDU0H4+mUWF7zELHAcqM=\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201c3ds_enrolled\u201d: \u201cY\u201d, \u201cstatus\u201d: \u201c44\u201d }","title":"3-D Secure Authentication Service Command - Response"},{"location":"bypass/#cvv-suppression","text":"The CVV Suppression enables you to process the eCommerce transaction with PayFort and reduce the requirement of CVV to be part of the transaction request. In this feature the merchant can simplify and ease the user experience for the customer during the checkout . Not all the issuing banks participate in the CVV suppression enablement as the banks in the region check the CVV usually.","title":"CVV suppression"},{"location":"bypass/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"bypass/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"bypassparameters/","text":"Check 3-D Secure Service This service provides cardholders a decreased risk of other people being able to use their payment cards fraudulently on the Merchant\u2019s site. Include the following parameter in the Request you will send to PayFort: ATTRIBUTES Description check_3ds Alpha Optional max: 2 This parameter allows the Merchant to deactivate the 3-D Secure service per transaction. This parameter can be used with both Authorization and Purchase transactions. Possible/ expected values: NO Flex 3-D Secure Service Include the following parameter in the Request you will send to PayFort: ATTRIBUTES Description flex_value Alphanumeric Optional max: 255 This parameter reflects the custom field value you had configure in the Back-office. *Only English values are applicable. Example: Sale50 Special characters: _ / \\ - . # $ % & @ * External MPI & Expose 3-D Secure services External MPI 3-D Secure Service Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description command Alpha Mandatory max: 20 Command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Mandatory Max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + eci Alpha Optional Max: 16 Ecommerce indicator. Possible/ expected values: - ECOMMERCE - MOTO expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory Max: 19 The clear credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 4005550000000001 card_security_code Numeric Max: 4 A security code for the card. * Only AMEX accepts card security code of 4 digits. Example: 123 signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a 3ds_xid Alphanumeric Optional Max: 28 Unique transaction Identification number to identify the 3DS transaction. Example: 6kQGHEiZDU0H4+mUWF7zELHAcqM= 3ds_enrolled Alpha Optional Max: 1 Parameter that hold if the card is enrolled or not. Possible/ expected values: - Y (Yes) - N (No) 3ds_status Alpha Optional Max: 1 The status of the 3ds check just like 3-DSEnrolled but this parameter is available after a check is completed. Possible/ expected values: - Y - N - U - A 3ds_eci Numeric Optional Max: 2 The eCommerce indicator returned from the MPI. Possible/ expected values: - 05 - 06 ver_token Alphanumeric Optional Max: 28 Verification token generated by the issuer to prove that the cardholders has been authenticated. Example: gIGCg4SFhoeIiYqLjI2Oj5CRkpM= card_holder_name Alpha Optional max: 50 The card holder name. Example: John Smith Special characters: ' - . token_name Alphanumeric Optional Max: 100 The Token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ payment_option Alpha Optional Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) order_description Alphanumeric Optional Max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space customer_ip Alphanumeric Optional max: 45 It holds the customer\u2019s IP address. It\u2019s Mandatory, if the fraud service is active. We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : customer_name Alpha Optional Max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space phone_number Numeric Optional Max: 19 The customer\u2019s phone number. Example: 00962797219966 Special characters: + - ( ) Space settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Special characters: - _ . merchant_extra Alphanumeric Optional Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra1 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra2 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra3 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra4 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra5 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ return_url Alphanumeric Optional Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . External MPI 3-D Secure - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description command Alpha Mandatory max: 20 Command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Mandatory Max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + eci Alpha Optional Max: 16 Ecommerce indicator. Possible/ expected values: - ECOMMERCE - MOTO expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory Max: 19 The clear credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 4005550000000001 signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a card_holder_name Alpha Optional max: 50 The card holder name. Example: John Smith Special characters: ' - . token_name Alphanumeric Optional Max: 100 The Token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ fort_id Numeric Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 payment_option Alpha Optional Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) order_description Alphanumeric Optional Max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space customer_ip Alphanumeric Optional max: 45 It holds the customer\u2019s IP address. It\u2019s Mandatory, if the fraud service is active. We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : customer_name Alpha Optional Max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space phone_number Numeric Optional Max: 19 The customer\u2019s phone number. Example: 00962797219966 Special characters: + - ( ) Space settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Special characters: - _ . merchant_extra Alphanumeric Optional Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra1 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra2 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra3 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra4 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra5 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ return_url Alphanumeric Optional Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . response_message Alphanumeric Max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses 3ds_url Alphanumeric Max: 300 The URL where the Merchant redirects a customer whose card is 3-D Secure for authentication. Example: http://www.3dsecure.com Expose 3-D Secure Service 3-D Secure Enrollment Service Command - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: 3DS_ENROLLMENT Special characters: _ access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory Max: 19 The clear credit card\u2019s number. Example: 4005550000000001 merchant_3ds_url Alphanumeric Mandatory max: 300 The URL where the Merchant will be redirected to see the returned 3ds parameters. Example: https://www.merchant.com Special characters: - & ? = _ . : / # signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a 3-D Secure Enrollment Service Command - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 Query operations command. Possible/ expected values: 3DS_ENROLLMENT access_code Alphanumeric max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 amount Numeric Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric > Max: 19 The masked credit card\u2019s number. Example: 400555 * *0001 merchant_3ds_url Alphanumeric max: 300 The URL where the Merchant will be redirected to see the returned 3ds parameters. Example: https://www.merchant.com Special characters: - & ? = _ . : / # 3ds_enrolled Alpha Max: 1 Parameter that hold if the card is enrolled or not. Possible/ expected values: - Y (Yes) - N (No) - U (Unspecified failure) threeds_id Alphanumeric Max: 100 The 3ds operations unique reference. Example: 153606397100001061 signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a 3ds_xid Alphanumeric max: 28 Unique transaction Identification number to identify the 3DS transaction. Example: 6kQGHEiZDU0H4+mUWF7zELHAcqM= response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 44000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). 3-D Secure Authentication Service Command - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: 3DS_AUTHENTICATION Special characters: _ access_code Alphanumeric Mandatory max: 20 Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique number. *Please, use the same merchant reference you used in the \u201cgenerate report\u201d request. Example: XYZ9239-yu898 language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar third_party_body Alphanumeric Mandatory Max: 6000 Combinations of 3ds parameters from the 3ds_enrollment. Example: Check the examples below Special characters: + \\ / : . _ = ? % # & - signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a 3-D Secure Authentication Service Command - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: 3DS_AUTHENTICATION access_code Alphanumeric max: 20 Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar threeds_id Alphanumeric Max: 100 The 3ds operations unique reference. Example: 153606397100001061 3ds_xid Alphanumeric Max: 28 Unique transaction Identification number to identify the 3DS transaction. Example: 6kQGHEiZDU0H4+mUWF7zELHAcqM= 3ds_enrolled Alpha Max: 1 Parameter that hold if the card is enrolled or not. Possible/ expected values: - Y (Yes) - N (No) 3ds_status Alpha Max: 1 The status of the 3ds check just like 3-DSEnrolled but this parameter is available after a check is completed. Possible/ expected values: - Y - N - U - A 3ds_eci Numeric Max: 2 The eCommerce indicator returned from the MPI. Possible/ expected values: - 05 - 06 ver_type Alphanumeric Max: 3 The type of verification used for 3DS. Possible/ expected values: - 3DS - SPA ver_token Alphanumeric Max: 28 Verification token generated by the issuer to prove that the cardholders has been authenticated. Example: gIGCg4SFhoeIiYqLjI2Oj5CRkpM= signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 44000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ).","title":"Bypassparameters"},{"location":"bypassparameters/#check-3-d-secure-service","text":"This service provides cardholders a decreased risk of other people being able to use their payment cards fraudulently on the Merchant\u2019s site. Include the following parameter in the Request you will send to PayFort: ATTRIBUTES Description check_3ds Alpha Optional max: 2 This parameter allows the Merchant to deactivate the 3-D Secure service per transaction. This parameter can be used with both Authorization and Purchase transactions. Possible/ expected values: NO","title":"Check 3-D Secure Service"},{"location":"bypassparameters/#flex-3-d-secure-service","text":"Include the following parameter in the Request you will send to PayFort: ATTRIBUTES Description flex_value Alphanumeric Optional max: 255 This parameter reflects the custom field value you had configure in the Back-office. *Only English values are applicable. Example: Sale50 Special characters: _ / \\ - . # $ % & @ *","title":"Flex 3-D Secure Service"},{"location":"bypassparameters/#external-mpi-expose-3-d-secure-services","text":"","title":"External MPI &amp; Expose 3-D Secure services"},{"location":"bypassparameters/#external-mpi-3-d-secure-service","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description command Alpha Mandatory max: 20 Command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Mandatory Max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + eci Alpha Optional Max: 16 Ecommerce indicator. Possible/ expected values: - ECOMMERCE - MOTO expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory Max: 19 The clear credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 4005550000000001 card_security_code Numeric Max: 4 A security code for the card. * Only AMEX accepts card security code of 4 digits. Example: 123 signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a 3ds_xid Alphanumeric Optional Max: 28 Unique transaction Identification number to identify the 3DS transaction. Example: 6kQGHEiZDU0H4+mUWF7zELHAcqM= 3ds_enrolled Alpha Optional Max: 1 Parameter that hold if the card is enrolled or not. Possible/ expected values: - Y (Yes) - N (No) 3ds_status Alpha Optional Max: 1 The status of the 3ds check just like 3-DSEnrolled but this parameter is available after a check is completed. Possible/ expected values: - Y - N - U - A 3ds_eci Numeric Optional Max: 2 The eCommerce indicator returned from the MPI. Possible/ expected values: - 05 - 06 ver_token Alphanumeric Optional Max: 28 Verification token generated by the issuer to prove that the cardholders has been authenticated. Example: gIGCg4SFhoeIiYqLjI2Oj5CRkpM= card_holder_name Alpha Optional max: 50 The card holder name. Example: John Smith Special characters: ' - . token_name Alphanumeric Optional Max: 100 The Token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ payment_option Alpha Optional Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) order_description Alphanumeric Optional Max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space customer_ip Alphanumeric Optional max: 45 It holds the customer\u2019s IP address. It\u2019s Mandatory, if the fraud service is active. We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : customer_name Alpha Optional Max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space phone_number Numeric Optional Max: 19 The customer\u2019s phone number. Example: 00962797219966 Special characters: + - ( ) Space settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Special characters: - _ . merchant_extra Alphanumeric Optional Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra1 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra2 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra3 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra4 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra5 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ return_url Alphanumeric Optional Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . External MPI 3-D Secure - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description command Alpha Mandatory max: 20 Command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Mandatory Max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + eci Alpha Optional Max: 16 Ecommerce indicator. Possible/ expected values: - ECOMMERCE - MOTO expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory Max: 19 The clear credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 4005550000000001 signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a card_holder_name Alpha Optional max: 50 The card holder name. Example: John Smith Special characters: ' - . token_name Alphanumeric Optional Max: 100 The Token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ fort_id Numeric Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 payment_option Alpha Optional Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) order_description Alphanumeric Optional Max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space customer_ip Alphanumeric Optional max: 45 It holds the customer\u2019s IP address. It\u2019s Mandatory, if the fraud service is active. We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : customer_name Alpha Optional Max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space phone_number Numeric Optional Max: 19 The customer\u2019s phone number. Example: 00962797219966 Special characters: + - ( ) Space settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Special characters: - _ . merchant_extra Alphanumeric Optional Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra1 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra2 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra3 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra4 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra5 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ return_url Alphanumeric Optional Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . response_message Alphanumeric Max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses 3ds_url Alphanumeric Max: 300 The URL where the Merchant redirects a customer whose card is 3-D Secure for authentication. Example: http://www.3dsecure.com","title":"External MPI 3-D Secure Service"},{"location":"bypassparameters/#expose-3-d-secure-service","text":"3-D Secure Enrollment Service Command - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: 3DS_ENROLLMENT Special characters: _ access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory Max: 19 The clear credit card\u2019s number. Example: 4005550000000001 merchant_3ds_url Alphanumeric Mandatory max: 300 The URL where the Merchant will be redirected to see the returned 3ds parameters. Example: https://www.merchant.com Special characters: - & ? = _ . : / # signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a 3-D Secure Enrollment Service Command - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 Query operations command. Possible/ expected values: 3DS_ENROLLMENT access_code Alphanumeric max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 amount Numeric Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric > Max: 19 The masked credit card\u2019s number. Example: 400555 * *0001 merchant_3ds_url Alphanumeric max: 300 The URL where the Merchant will be redirected to see the returned 3ds parameters. Example: https://www.merchant.com Special characters: - & ? = _ . : / # 3ds_enrolled Alpha Max: 1 Parameter that hold if the card is enrolled or not. Possible/ expected values: - Y (Yes) - N (No) - U (Unspecified failure) threeds_id Alphanumeric Max: 100 The 3ds operations unique reference. Example: 153606397100001061 signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a 3ds_xid Alphanumeric max: 28 Unique transaction Identification number to identify the 3DS transaction. Example: 6kQGHEiZDU0H4+mUWF7zELHAcqM= response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 44000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). 3-D Secure Authentication Service Command - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: 3DS_AUTHENTICATION Special characters: _ access_code Alphanumeric Mandatory max: 20 Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique number. *Please, use the same merchant reference you used in the \u201cgenerate report\u201d request. Example: XYZ9239-yu898 language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar third_party_body Alphanumeric Mandatory Max: 6000 Combinations of 3ds parameters from the 3ds_enrollment. Example: Check the examples below Special characters: + \\ / : . _ = ? % # & - signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a 3-D Secure Authentication Service Command - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: 3DS_AUTHENTICATION access_code Alphanumeric max: 20 Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar threeds_id Alphanumeric Max: 100 The 3ds operations unique reference. Example: 153606397100001061 3ds_xid Alphanumeric Max: 28 Unique transaction Identification number to identify the 3DS transaction. Example: 6kQGHEiZDU0H4+mUWF7zELHAcqM= 3ds_enrolled Alpha Max: 1 Parameter that hold if the card is enrolled or not. Possible/ expected values: - Y (Yes) - N (No) 3ds_status Alpha Max: 1 The status of the 3ds check just like 3-DSEnrolled but this parameter is available after a check is completed. Possible/ expected values: - Y - N - U - A 3ds_eci Numeric Max: 2 The eCommerce indicator returned from the MPI. Possible/ expected values: - 05 - 06 ver_type Alphanumeric Max: 3 The type of verification used for 3DS. Possible/ expected values: - 3DS - SPA ver_token Alphanumeric Max: 28 Verification token generated by the issuer to prove that the cardholders has been authenticated. Example: gIGCg4SFhoeIiYqLjI2Oj5CRkpM= signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 44000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ).","title":"Expose 3-D Secure Service"},{"location":"capturepayment/","text":"Capture a payment The redirection process allows you to authorize a purchase and after a purchase has been approved you can capture a payment. This operation allows you to capture the authorized amount to your account. The capture could be partial or full depending on your requirements and request. Our two-step authorization and capture process enables you to capture payments either automatically or manually. The request Use the details below to set up your request. Endpoints Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi You can send \"merchant_reference\" and/or \"fort_id\" in the CAPTURE request. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response even the optional ones. Capture Payment Request Here are the sample codes for requests posted to PayFORT server to authorize payment and capture the payment. Check out the request parameters by visiting this link Sample Request Here are the sample request you are required to send authorizing a purchase. Php Python Ruby Java cURL error_reporting(E_ALL); ini_set('display_errors', '1'); $url = 'https://sbpaymentservices.payfort.com/FortAPI/paymentApi'; $arrData = array( 'command' => 'CAPTURE', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => 'XYZ9239-yu898', 'amount' => '10000', 'currency' => 'AED', 'language' => 'en', 'fort_id' => '149295435400084008', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description' => 'iPhone 6-S', ); $ch = curl_init( $url ); # Setup request to send json via POST. $data = json_encode($arrData); curl_setopt( $ch, CURLOPT_POSTFIELDS, $data ); curl_setopt( $ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json')); # Return response instead of printing. curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true ); # Send request. $result = curl_exec($ch); curl_close($ch); # Print response. echo \"<pre>$result</pre>\"; import urllib import urllib2 import json url = 'https://sbpaymentservices.payfort.com/FortAPI/paymentApi'; arrData = { 'command':'CAPTURE', 'access_code':'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier':'CycHZxVj', 'merchant_reference':'XYZ9239-yu898', 'amount':'10000', 'currency':'AED', 'language':'en', 'fort_id':'149295435400084008', 'signature':'7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description':'iPhone 6-S', }; values = json.dumps(arrData) data = urllib.urlencode(values) req = urllib2.Request(url, data) response = urllib2.urlopen(req) page = response.read() print page + '\\n\\n' ``` </div><div id=\"python\" class=\"tab-pane fade\"> import urllib import urllib2 import json url = 'https://sbpaymentservices.payfort.com/FortAPI/paymentApi'; arrData = { 'command':'CAPTURE', 'access_code':'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier':'CycHZxVj', 'merchant_reference':'XYZ9239-yu898', 'amount':'10000', 'currency':'AED', 'language':'en', 'fort_id':'149295435400084008', 'signature':'7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description':'iPhone 6-S', }; values = json.dumps(arrData) data = urllib.urlencode(values) req = urllib2.Request(url, data) response = urllib2.urlopen(req) page = response.read() print page + '\\n\\n' ``` require 'json' require 'net/http' require 'net/https' require 'uri' require 'openssl' arrData = { 'command' => 'CAPTURE', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => 'XYZ9239-yu898', 'amount' => '10000', 'currency' => 'AED', 'language' => 'en', 'fort_id' => '149295435400084008', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description' => 'iPhone 6-S', }; arrData = arrData.to_json uri = URI.parse(\"https://sbpaymentservices.payfort.com/FortAPI/paymentApi\") http = Net::HTTP.new(uri.host, uri.port) http.use_ssl = true http.verify_mode = OpenSSL::SSL::VERIFY_NONE request = Net::HTTP::Post.new(\"/v1.1/auth\") request.add_field('Content-Type', 'application/json') request.body = arrData response = http.request(request) String jsonRequestString = \"{\\\"command\\\" : \\\"CAPTURE\\\" , \\\"access_code\\\" : \\\"zx0IPmPy5jp1vAz8Kpg7\\\", \\\"merchant_identifier\\\" : \\\"CycHZxVj\\\", \" + \"\\\"merchant_reference\\\" : \\\"XYZ9239-yu898\\\", \\\"amount\\\" : \\\"10000\\\", \\\"currency\\\" : \\\"AED\\\",\" + \"\\\"language\\\" : \\\"en\\\", \\\"fort_id\\\" : \\\"149295435400084008\\\", \" + \"\\\"signature\\\" : \\\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\\\", \\\"order_description\\\" : \\\"iPhone 6-S\\\"}\"; // Define and Initialize HttpClient HttpClient httpClient = HttpClientBuilder.create().build(); // Intialize HttpPOST with FORT Payment services URL HttpPost request = new HttpPost(\"https://sbpaymentservices.payfort.com/FortAPI/paymentApi\"); // Setup Http POST entity with JSON String StringEntity params = new StringEntity(jsonRequestString); // Setup request type as JSON request.addHeader(\"content-type\", \"application/json\"); request.setEntity(params); // Post request to FORT HttpResponse response = httpClient.execute(request); // Read response using StringBuilder StringBuilder sb = new StringBuilder(); BufferedReader reader = new BufferedReader(new InputStreamReader( response.getEntity().getContent()), 65728); String line = null; while ((line = reader.readLine()) != null) { sb.append(line); } // Print response System.out.println(sb.toString()); curl -H \"Content-Type: application/json\" -d '{\"command\":\"CAPTURE\",\"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\",\"merchant_identifier\":\"CycHZxVj\",\"merchant_reference\":\"XYZ9239-yu898\",\"amount\":\"10000\",\"currency\":\"AED\",\"language\":\"en\",\"fort_id\":\"149295435400084008\",\"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\",\"order_description\":\"iPhone6-S\"}' https://sbpaymentservices.payfort.com/FortAPI/paymentApi Capture Payment response If you receive response code 20064 with status code 04 then your request to capture a payment has been accepted by the PayFort Server. Below is the sample response that you will receive from PayFORT in JSON format. Response Sample \u200b json {\"command\":\"CAPTURE\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239-yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"fort_id\":\"149295435400084008\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone 6-S\", \"response_message\":\"Success\", \"response_code\":\"20064\", status\":\"04\" } You can check out various transaction codes by visiting this link Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Capture Payment"},{"location":"capturepayment/#capture-a-payment","text":"The redirection process allows you to authorize a purchase and after a purchase has been approved you can capture a payment. This operation allows you to capture the authorized amount to your account. The capture could be partial or full depending on your requirements and request. Our two-step authorization and capture process enables you to capture payments either automatically or manually.","title":"Capture a payment"},{"location":"capturepayment/#the-request","text":"Use the details below to set up your request.","title":"The request"},{"location":"capturepayment/#endpoints","text":"","title":"Endpoints"},{"location":"capturepayment/#live","text":"POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Live"},{"location":"capturepayment/#sandbox","text":"POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi You can send \"merchant_reference\" and/or \"fort_id\" in the CAPTURE request. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response even the optional ones.","title":"Sandbox"},{"location":"capturepayment/#capture-payment-request","text":"Here are the sample codes for requests posted to PayFORT server to authorize payment and capture the payment. Check out the request parameters by visiting this link","title":"Capture Payment Request"},{"location":"capturepayment/#capture-payment-response","text":"If you receive response code 20064 with status code 04 then your request to capture a payment has been accepted by the PayFort Server. Below is the sample response that you will receive from PayFORT in JSON format.","title":"Capture Payment response"},{"location":"capturepayment/#response-sample","text":"\u200b json {\"command\":\"CAPTURE\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239-yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"fort_id\":\"149295435400084008\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone 6-S\", \"response_message\":\"Success\", \"response_code\":\"20064\", status\":\"04\" } You can check out various transaction codes by visiting this link","title":"Response Sample"},{"location":"capturepayment/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"capturepayment/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"cards/","text":"With PayFort you can accept card payments from all major global providers and many local payment methods Endpoints Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Supported card schemes We support the following international and domestic card schemes: International Visa Mastercard American Express Discover Diners Club JCB UnionPay Local Capture the opportunity to expand your business reach by accepting Mada cards to enhance the customer experience on your checkout page. Payfort has partnered with MADA under the supervision of SAMA in taking a strategic initiative to enable all MADA cards for online buyers to enjoy a convenient way to digitalize cash and increase the spend through their existing MADA cards through various KSA e-commerce merchants. There are around 30 million MADA debit cards being issued by 16 member banks in KSA. PAYFORT gateway also supports Sadad for Merchants residing in the Kingdom of Saudi Arabia (KSA). More and more Saudi businesses are beginning to rely on online payment processes that\u2019s why the addition of SADAD account to PAYFORT will provide businesses with the means to accept payments. At the moment Payfort supports following local payment methods: Sadad KNET Mada NAPS Oman NET MEEZA User Countries Middle East/North Africa: Saudi Arabia Clearing and settlement: Instant Processing currencies: Saudi Riyal Default settlement currency: Saudi Riyal Refunds: YES Partial refunds: YES User Countries Middle East/North Africa: Kuwait Clearing and settlement: Instant Processing currencies: KWD Default settlement currency: KWD Refunds: YES Partial refunds: YES User Countries Middle East/North Africa: Saudi Arabia Clearing and settlement: Instant Processing currencies: SAR Default settlement currency: SAR Refunds: YES Partial refunds: YES User Countries Middle East/North Africa: Qatar Clearing and settlement: Instant Processing currencies: Qatari Riyal Default settlement currency: Qatari Riyal Refunds: YES Partial refunds: YES User Countries Middle East/North Africa: Oman Clearing and settlement: Instant Processing currencies: Oman Riyal Default settlement currency: Oman Riyal Refunds: YES Partial refunds: YES User Countries Middle East/North Africa: Egypt Clearing and settlement: Instant Processing currencies: EGP Default settlement currency: EGP Refunds: YES Partial refunds: YES SADAD Start accepting payments using SADAD, the payment method in Saudi Arabia. The request Placeholder: Input Parameters to be added here for SADAD The Response Placeholder: The response sample KNET Start accepting payments using KNET, the leading payment method in Kuwait. The request Placeholder: Input Parameters to be added here for KNET The Response Placeholder: The response sample MADA Start accepting payments using Mada, the leading payment method in Saudi Arabia. The request Placeholder: Input Parameters to be added here for MADA The Response Placeholder: The response sample NAPS Start accepting payments using NAPS, the leading payment method in QATAR. The request Placeholder: Input Parameters to be added here for NAPS The Response Placeholder: The response sample OMAN NET Start accepting payments using OMAN NET, the leading payment method in OMAN. The request Placeholder: Input Parameters to be added here for OMAN The Response Placeholder: The response sample MEEZA Start accepting payments using MEEZA, the leading payment method in EGYPT. The request Placeholder: Input Parameters to be added here for OMAN The Response Placeholder: The response sample Test Your Card Integration You can checkout this link for testing your card integration. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Cards"},{"location":"cards/#endpoints","text":"Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"cards/#supported-card-schemes","text":"We support the following international and domestic card schemes:","title":"Supported card schemes"},{"location":"cards/#international","text":"Visa Mastercard American Express Discover Diners Club JCB UnionPay","title":"International"},{"location":"cards/#local","text":"Capture the opportunity to expand your business reach by accepting Mada cards to enhance the customer experience on your checkout page. Payfort has partnered with MADA under the supervision of SAMA in taking a strategic initiative to enable all MADA cards for online buyers to enjoy a convenient way to digitalize cash and increase the spend through their existing MADA cards through various KSA e-commerce merchants. There are around 30 million MADA debit cards being issued by 16 member banks in KSA. PAYFORT gateway also supports Sadad for Merchants residing in the Kingdom of Saudi Arabia (KSA). More and more Saudi businesses are beginning to rely on online payment processes that\u2019s why the addition of SADAD account to PAYFORT will provide businesses with the means to accept payments. At the moment Payfort supports following local payment methods: Sadad KNET Mada NAPS Oman NET MEEZA","title":"Local"},{"location":"cards/#sadad","text":"Start accepting payments using SADAD, the payment method in Saudi Arabia. The request Placeholder: Input Parameters to be added here for SADAD The Response Placeholder: The response sample","title":"SADAD"},{"location":"cards/#knet","text":"Start accepting payments using KNET, the leading payment method in Kuwait. The request Placeholder: Input Parameters to be added here for KNET The Response Placeholder: The response sample","title":"KNET"},{"location":"cards/#mada","text":"Start accepting payments using Mada, the leading payment method in Saudi Arabia. The request Placeholder: Input Parameters to be added here for MADA The Response Placeholder: The response sample","title":"MADA"},{"location":"cards/#naps","text":"Start accepting payments using NAPS, the leading payment method in QATAR. The request Placeholder: Input Parameters to be added here for NAPS The Response Placeholder: The response sample","title":"NAPS"},{"location":"cards/#oman-net","text":"Start accepting payments using OMAN NET, the leading payment method in OMAN. The request Placeholder: Input Parameters to be added here for OMAN The Response Placeholder: The response sample","title":"OMAN NET"},{"location":"cards/#meeza","text":"Start accepting payments using MEEZA, the leading payment method in EGYPT. The request Placeholder: Input Parameters to be added here for OMAN The Response Placeholder: The response sample","title":"MEEZA"},{"location":"cards/#test-your-card-integration","text":"You can checkout this link for testing your card integration.","title":"Test Your Card Integration"},{"location":"cards/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"cards/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"collection/","text":"","title":"Collection"},{"location":"currencyexchange/","text":"Currency Exchange Service This service allows the merchant to convert the transaction amount from one currency into another currency using live currency exchange rate. Remember - Before start implementing this service please make sure to contact support@payfort.com to activate it in your account. Currency Exchange URLs Test Environment URL: https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Production Environment URL: https://paymentservices.PayFort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Currency Exchange - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: CURRENCY_CONVERSION Special characters: _ access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj amount Numeric Mandatory max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha Mandatory max: 2 The checkout page and messages language. Possible/ expected values: en / ar converted_currency Alpha Mandatory max: 3 The ISO3 currency code of the currency you are converting the amount to. Example: AED signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Currency Exchange - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: CURRENCY_CONVERSION access_code Alphanumeric max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj amount Numeric max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: (Please refer to section messages ). response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: (Please refer to section statuses ). converted_amount Alpha max: 3 The amount after converting to another currency. Example: 100 USD = 367.298 AED converted_currency Alpha max: 3 The ISO3 currency code of the currency you are converting the amount to. Example: AED conversion_number Alphanumeric max: 20 A unique number generated by PayFort for every valid currency conversion request. Example: 1443796866848 Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-.","title":"Currency Exchange Service"},{"location":"currencyexchange/#currency-exchange-service","text":"This service allows the merchant to convert the transaction amount from one currency into another currency using live currency exchange rate. Remember - Before start implementing this service please make sure to contact support@payfort.com to activate it in your account.","title":"Currency Exchange Service"},{"location":"currencyexchange/#currency-exchange-urls","text":"Test Environment URL: https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Production Environment URL: https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Currency Exchange URLs"},{"location":"currencyexchange/#parameters-submission-type","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"currencyexchange/#currency-exchange-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: CURRENCY_CONVERSION Special characters: _ access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj amount Numeric Mandatory max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha Mandatory max: 2 The checkout page and messages language. Possible/ expected values: en / ar converted_currency Alpha Mandatory max: 3 The ISO3 currency code of the currency you are converting the amount to. Example: AED signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Currency Exchange - Request"},{"location":"currencyexchange/#currency-exchange-response","text":"The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: CURRENCY_CONVERSION access_code Alphanumeric max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj amount Numeric max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: (Please refer to section messages ). response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: (Please refer to section statuses ). converted_amount Alpha max: 3 The amount after converting to another currency. Example: 100 USD = 367.298 AED converted_currency Alpha max: 3 The ISO3 currency code of the currency you are converting the amount to. Example: AED conversion_number Alphanumeric max: 20 A unique number generated by PayFort for every valid currency conversion request. Example: 1443796866848 Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-.","title":"Currency Exchange - Response"},{"location":"declinecodes/","text":"","title":"Decline Codes"},{"location":"dummy/","text":"Prestashop Get Started Github Repo Woocommerce Get Started Github Repo Magento Get Started Github Repo Magento 2 Get Started Github Repo Cs Cart 3 Get Started Github Repo Cs Cart 4 Get Started Github Repo Open Cart Get Started Github Repo Open Cart 2 Get Started Github Repo Php Get Started","title":"Dummy Testing"},{"location":"fawry/","text":"Fawry Payment Request a Fawry payment The Request Endpoints Body parameters Fawry Payment Start accepting payments using Fawry, a favorite payment method in Egypt. To start accepting Fawry payments, please contact your customer success manager. Request a Fawry payment The Request Use the details below to set up your request. Endpoints Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Body parameters The table below describes the minimum recommended fields. You can find the full list, as well as complete request and response examples, in our API reference service_command (String,mandatory,) Maximum Length Possible/ expected values Special Characters Description 20 BILL_PRESENTMENT _ A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic request_expiry_date (alphanumeric, mandatory) Maximum Length Example Special Characters Description 25 2017-12-20T15:36:55+03:00 - + : The date when the bill expires. *The merchant will hold the item till the expiry date. If the customer didn\u2019t pay, the holding will be canceled. payment_partner (String, mandatory) Maximum Length Possible/Expected values Special Characters Description 5 FAWRY - + : A financial corporation that generate bills to the customer. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature customer_name (alpha, optional) Maximum Length Example Special Characters Description 50 John Smith _ \\ / - . ' Space The customer\u2019s name customer_email (alphanumeric, optional) Maximum Length Example Special Characters Description 254 customer@domain.com _ - . @ + The customer\u2019s email.","title":"Fawry"},{"location":"fawry/#fawry-payment","text":"Start accepting payments using Fawry, a favorite payment method in Egypt. To start accepting Fawry payments, please contact your customer success manager.","title":"Fawry Payment"},{"location":"fawry/#request-a-fawry-payment","text":"","title":"Request a Fawry payment"},{"location":"fawry/#the-request","text":"Use the details below to set up your request.","title":"The Request"},{"location":"fawry/#endpoints","text":"Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"fawry/#body-parameters","text":"The table below describes the minimum recommended fields. You can find the full list, as well as complete request and response examples, in our API reference service_command (String,mandatory,) Maximum Length Possible/ expected values Special Characters Description 20 BILL_PRESENTMENT _ A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic request_expiry_date (alphanumeric, mandatory) Maximum Length Example Special Characters Description 25 2017-12-20T15:36:55+03:00 - + : The date when the bill expires. *The merchant will hold the item till the expiry date. If the customer didn\u2019t pay, the holding will be canceled. payment_partner (String, mandatory) Maximum Length Possible/Expected values Special Characters Description 5 FAWRY - + : A financial corporation that generate bills to the customer. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature customer_name (alpha, optional) Maximum Length Example Special Characters Description 50 John Smith _ \\ / - . ' Space The customer\u2019s name customer_email (alphanumeric, optional) Maximum Length Example Special Characters Description 254 customer@domain.com _ - . @ + The customer\u2019s email.","title":"Body parameters"},{"location":"fraudbasic/","text":"PayFORT Fraud Protection Service These days it is very common to get lured into various scams and expose any application and device to the scamsters. The scamsters use various novel techniques such as phishing, etc to scam. PayFORT helps to protect against online frauds. This service protects you being lured into a scam over the Internet, and as a result minimizes chargebacks. It's light fraud check rules can be enabled on the merchant account if the merchant business is not that risky or have complex fraud rules. Its limited number of fraud rules can be permitted to monitor the merchant transactions online during the transaction processing. This service can be used in both Authorization and Purchase operations. The Fraud service must be activated by PayFort\u2019s Operations team. \\- Please note that PayFort\u2019s operations team must activate the fraud service. PayFORT fraud management consists of two layers first one is the basic fraud management service and another is ACI ReD Fraud Service . This section covers fraud management service API and basic fraud management through the back office. How it Works? The PayFORT service helps your application or site to detect customer's IP Geolocation and helps track the payment transactions. Placeholder: Explain the working process for the PayFORT fraud protection service. Integration Flow Workflow Diagram required here to explain the Integration flow as well. PayFORT Fraud prevention services Request The Request Placeholder: Provide a sample code for sending the request. Request Parameters ATTRIBUTES Description customer_ip ( Alphanumeric Mandatory max: 45) Refers to the customer\u2019s IP Geolocation. *We support IPv4 and IPv6 as shown in the example below. Example: 192.178.1.10 Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : PayFORT Fraud prevention services Response PayFORT will send back the customer_ip details in the response ATTRIBUTES Description customer_ip ( Alphanumeric ) Refers to the customer\u2019s IP Geolocation. *We support IPv4 and IPv6 as shown in the example below. Example: 192.178.1.10 Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : Fraud Management (Back Office) You can also manage fraud management service from the Back Office portal. You can follow the steps mentioned in this section to configure fraud management services On the left hand side under the services menu you will find fraud management screen Once you click on fraud management screen, a window as shown below will open. You can configure Velocity check, hotlist, combination rules. It is advisable to use default PayFORT settings unless your business requirements are different. You can also check out the video tutorial below Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Fraud Basic(Protect)"},{"location":"fraudbasic/#payfort-fraud-protection-service","text":"These days it is very common to get lured into various scams and expose any application and device to the scamsters. The scamsters use various novel techniques such as phishing, etc to scam. PayFORT helps to protect against online frauds. This service protects you being lured into a scam over the Internet, and as a result minimizes chargebacks. It's light fraud check rules can be enabled on the merchant account if the merchant business is not that risky or have complex fraud rules. Its limited number of fraud rules can be permitted to monitor the merchant transactions online during the transaction processing. This service can be used in both Authorization and Purchase operations. The Fraud service must be activated by PayFort\u2019s Operations team. \\- Please note that PayFort\u2019s operations team must activate the fraud service. PayFORT fraud management consists of two layers first one is the basic fraud management service and another is ACI ReD Fraud Service . This section covers fraud management service API and basic fraud management through the back office.","title":"PayFORT Fraud Protection Service"},{"location":"fraudbasic/#how-it-works","text":"The PayFORT service helps your application or site to detect customer's IP Geolocation and helps track the payment transactions. Placeholder: Explain the working process for the PayFORT fraud protection service.","title":"How it Works?"},{"location":"fraudbasic/#integration-flow","text":"Workflow Diagram required here to explain the Integration flow as well.","title":"Integration Flow"},{"location":"fraudbasic/#payfort-fraud-prevention-services-request","text":"The Request Placeholder: Provide a sample code for sending the request. Request Parameters ATTRIBUTES Description customer_ip ( Alphanumeric Mandatory max: 45) Refers to the customer\u2019s IP Geolocation. *We support IPv4 and IPv6 as shown in the example below. Example: 192.178.1.10 Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . :","title":"PayFORT Fraud prevention services Request"},{"location":"fraudbasic/#payfort-fraud-prevention-services-response","text":"PayFORT will send back the customer_ip details in the response ATTRIBUTES Description customer_ip ( Alphanumeric ) Refers to the customer\u2019s IP Geolocation. *We support IPv4 and IPv6 as shown in the example below. Example: 192.178.1.10 Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . :","title":"PayFORT Fraud prevention services Response"},{"location":"fraudbasic/#fraud-management-back-office","text":"You can also manage fraud management service from the Back Office portal. You can follow the steps mentioned in this section to configure fraud management services On the left hand side under the services menu you will find fraud management screen Once you click on fraud management screen, a window as shown below will open. You can configure Velocity check, hotlist, combination rules. It is advisable to use default PayFORT settings unless your business requirements are different. You can also check out the video tutorial below","title":"Fraud Management (Back Office)"},{"location":"fraudbasic/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"fraudbasic/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"glossary/","text":"Glossary of Terms Used Number 3-D Secure URL - An XML -based protocol designed to be an additional security layer for online credit and debit card transactions. A ACS - Access Control Server running on the bank side that authenticates e-commerce transactions through the 3D Secure URL. P PCI-DSS - Payment Card Industry Data Security Standard. A set of security standards which forms the compliance scheme. The compliance aims to secure credit and debit card transactions against payment frauds. R Redirection - Routing to other site (bank or financial institution) or webpage through the action on the page for authentication purpose. The action could be submit button. U URL - Uniform Resource locator. Example : https:\\www.example.com","title":"Glossary"},{"location":"glossary/#glossary-of-terms-used","text":"","title":"Glossary of Terms Used"},{"location":"glossary/#number","text":"3-D Secure URL - An XML -based protocol designed to be an additional security layer for online credit and debit card transactions.","title":"Number"},{"location":"glossary/#a","text":"ACS - Access Control Server running on the bank side that authenticates e-commerce transactions through the 3D Secure URL.","title":"A"},{"location":"glossary/#p","text":"PCI-DSS - Payment Card Industry Data Security Standard. A set of security standards which forms the compliance scheme. The compliance aims to secure credit and debit card transactions against payment frauds.","title":"P"},{"location":"glossary/#r","text":"Redirection - Routing to other site (bank or financial institution) or webpage through the action on the page for authentication purpose. The action could be submit button.","title":"R"},{"location":"glossary/#u","text":"URL - Uniform Resource locator. Example : https:\\www.example.com","title":"U"},{"location":"incommon/","text":"In Common Services Query Operations A type of query that can be requested through our system, which includes the \u201cCheck Status\u201d query. Check Status Check Status allows the Merchant to check the status of a specific order and the status of the latest operation performed on that order. Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Check Status - Request (Please take a look at the Check Status Request Example on the right side of the page.) Check Status Request Example String jsonRequestString = \"{\\\"query_command\\\" : \\\"CHECK_STATUS\\\" \\\"access_code\\\" : \\\"zx0IPmPy5jp1vAz8Kpg7\\\", \\\"merchant_identifier\\\" : \\\"CycHZxVj\\\",\" + \"\\\"merchant_reference\\\" : \\\"XYZ9239-yu898\\\", \\\"language\\\" : \\\"en\\\", \" + \"\\\"signature\\\" : \\\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\\\"}\"; // Define and Initialize HttpClient HttpClient httpClient = HttpClientBuilder.create().build(); // Intialize HttpPOST with FORT Payment services URL HttpPost request = new HttpPost(\"https://sbpaymentservices.payfort.com/FortAPI/paymentApi\"); // Setup Http POST entity with JSON String StringEntity params = new StringEntity(jsonRequestString); // Setup request type as JSON request.addHeader(\"content-type\", \"application/json\"); request.setEntity(params); // Post request to FORT HttpResponse response = httpClient.execute(request); // Read response using StringBuilder StringBuilder sb = new StringBuilder(); BufferedReader reader = new BufferedReader(new InputStreamReader( response.getEntity().getContent()), 65728); String line = null; while ((line = reader.readLine()) != null) { sb.append(line); } // Print response System.out.println(sb.toString()); Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description query_command Alpha Mandatory max: 50 The query operations command. Possible/ expected values: CHECK_STATUS Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a fort_id Numeric Optional Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 return_third_party_response_codes Alpha Optional Max: 3 This parameter allows you to return the 3rd party response codes in the transaction\u2019s response. Possible/ expected values: - YES - NO You can send \u201cmerchant_reference\u201d and/ or \u201cfort_id\u201d in the CHECK_STATUS request. Check Status - Response (Please take a look at the Check Status Example Response on the right side of the page.) Check Status Response Example {\"query_command\":\"CHECK_STATUS\",\"access_code\":\"s31bpM1ebfNnwqo\",\"merchant_identifier\":\"FD1Ptq\",\"merchant_reference\":\"141127176\",\"language\":\"en\",\"signature\":\"90f7092923c9eea8b0df6d509453a1791a36e2cd4a80eaef366e235b169a40e0\",\"fort_id\":\"21722423333\",\"response_message\":\"Success\",\"response_code\":\"12000\",\"status\":\"12\",\"transaction_status\":\"12\",\"transaction_code\":\"12000\",\"transaction_message\":\"Success\"} The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 The query operations command. Possible/ expected values: CHECK_STATUS access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a fort_id Numeric Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 response_message Alphanumeric Max: 150 Message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses transaction_status Numeric Max: 2 The status of the last operation performed on a specific order. Possible/ expected values: Please refer to section statuses transaction_code Numeric Max: 5 The message code returned for the last operation performed on a specific order. Possible/ expected values: Please refer to section messages transaction_message Alphanumeric Max: 150 The message returned for the last operation performed on a specific order. Example: Success refunded_amount Numeric Max: 10 The total refunded amount for the order. Example: 10000 captured_amount Numeric Max: 10 The total captured amount for the order. Example: 10000 authorized_amount Numeric Max: 10 The total authorized amount for the order. Example: 10000 authorization_code Alphanumeric Max: 100 Authorization Code returned from the 3rd party. Example: 017201 processor_response_code Alphanumeric Max: 100 Response code returns from the Processor. Example: APPROVED acquirer_response_code Alphanumeric Max: 10 Response code returns from the Acquirer. Example: 00 Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-. Services Activation Services are activated for our Merchants by our back-office team. Once you open your Merchant account and click \u201cPayment Stack\u201d under the Services tab. The services provided by PayFort are: Fraud Prevention. 3-D Secure. Installments. Tokenization. Batch service. Remember - If you wish to activate extra services for your Merchant account, you need to contact PayFort\u2019s Back-office team. For detailed information, please download our Merchant Integration Guide and read the \u201cServices Activation\u201d section to guide you through this process. Signature The Signature is a parameter that holds the digital signature value calculated by the SHA algorithm. The digital signature is used to authenticate the sender and receiver of the message and allows the receiver to verify the integrity of the message. Message Digest Name Description SHA Type The Secure Hash Algorithm is a family of cryptographic hash functions published by the National Institute of Standards as a US Federal information processing standard (FIPS) including: SHA-0, SHA-2, and SHA-3. Values: SHA-256, SHA 512, and SHA-128 (not recommended). SHA Request Phrase This value is used when the Merchant generates the request signature. Values: Dynamic value defined by the Merchant. SHA Response Phrase This value is used by our system to generate the response signature for the Merchant\u2019s Request. Values: Dynamic value defined by the Merchant. Signature Pattern The below steps describe the signature pattern: Sort all PayFort requests parameters (both mandatory and optional) in an ascending alphabetical order based on the parameters names. Concatenate the parameter name with the value separated by \u2019=\u2019 (param_name=param_value). Concatenate all the parameters directly without any separator. (param_name1=param_value1param_name2=param_value2). Add the Merchant\u2019s Passphrase at the beginning and end of the parameters string. (REQUESTPHRASEparam_name1=param_value1param_name2=param_value2RE QUESTPHRASE). Use the SHA function to generate the SHA value of the resulted string depending on the type of SHA selected by the Merchant. Create Signature Value Map<String, Object>requestMap = new HashedMap(); requestMap.put(\"command\", \"PURCHASE\"); requestMap.put(\"merchant_reference\", \"Test010\"); requestMap.put(\"amount\", \"1000\"); requestMap.put(\"access_code\", \"SILgpo7pWbmzuURp2qri\"); requestMap.put(\"merchant_identifier\", \"MxvOupuG\"); requestMap.put(\"currency\", \"USD\"); requestMap.put(\"language\", \"en\"); requestMap.put(\"customer_email\", \"test@gmail.com\"); //order by key requestMap = requestMap.entrySet().stream().sorted(Map.Entry.comparingByKey()) .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (oldValue, newValue) -> oldValue, LinkedHashMap::new)); String requestString = \"PASS\"; for(Entry<String, Object> entry: requestMap.entrySet()) requestString += entry.getKey() + \"=\" + entry.getValue(); requestString+= \"PASS\"; MessageDigest digest = MessageDigest.getInstance(\"SHA-256\"); byte[] hashed = digest.digest(requestString.getBytes(StandardCharsets.UTF_8)); String signature = javax.xml.bind.DatatypeConverter.printHexBinary(hashed); In this section, you can find examples on how to create the signature value for request and response messages. Please note that all values mentioned in the examples are fictitious. The following is an example of the Request Parameters: signature = b88db48baaa600c3fadac502c75a832e3470029f command = PURCHASE merchant_reference = Test010 amount = 1000 access_code = SILgpo7pWbmzuURp2qri merchant_identifier = MxvOupuG currency = USD language = en customer_email = test@gmail.com Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS. SHA-Type: SHA-256. After sorting the parameters and completing step 4 of the Signature Pattern , the result will be the following concatenated string: PASSaccess_code=SILgpo7pWbmzuURp2qriamount=1000command=PURCHASEcurrenc y=USDcustomer_email=test@gmail.comlanguage=enmerchant_identifier=MxvOupuGmerch ant_reference=Test010PASS After applying step 5 of the Signature Pattern , the result will be as follows: Signature = 94C38AFC7BDAE0114FC8C740EDF12416F22998241CE4B4EA70D5521233A2C882 The following is an example for the Merchant Page 2.0 request signature calculations: Remember - The calculations for the Merchant Page 2.0 require you to calculate the signature without including the following parameters in the signature even if these parameters included in the request of Merchant Page 2.0: card_security_code, card_number, expiry_date, card_holder_name, remember_me. Assume you have the below parameters included in the request of Merchant Page 2.0: service_command = TOKENIZATION language = en merchant_identifier = MxvOupuG access_code = SILgpo7pWbmzuURp2qri merchant_reference = MyReference0001 card_security_code = 123 card_number = 4005550000000001 expiry_date = 2105 remember_me = YES card_holder_name = John Smith Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS. SHA-Type: SHA-256. The string to hash should be prepared for the above request is the following step 4 of the Signature Pattern : PASSaccess_code=SILgpo7pWbmzuURp2qrilanguage=enmerchant_identifier=MxvOupuG merchant_reference=MyReference0001service_command=TOKENIZATIONPASS After applying step 5 of the Signature Pattern , the result will be as follows: signature = 7EE560CCD621DA61BFC772F2F1B5849BABDA768F5EE36D4DE67EFA88403E4B99 The following is an example for the Reporting API request signature calculations: Assume you have the below parameters included in the request of Reporting API: \u2022 query_command = GENERATE_REPORT \u2022 access_code = zx0IPmPy5jp1vAz8Kpg7 \u2022 merchant_identifier = CycHZxVj \u2022 merchant_reference = XYZ9239-yu898 \u2022 columns = [order_description, customer_ip, eci, geolocation_ip, merchant_reference, card_holder_name, currency, amount, payment_option, fort_id, customer_email, customer_name, operation] \u2022 filters = [{key=currency, value=USD}, {key=payment_option, value= VISA}] \u2022 from_date = 2017-08-03T00:00:01+03:00 \u2022 to_date = 2017-08-03T23:59:59+03:00 \u2022 response_format = JSON \u2022 language = en Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS. SHA-Type: SHA-256. The string to hash should be prepared for the above request is the following step 4 of the Signature Pattern : Remember: * In the columns parameter; you should: \\1. Open brackets. \\2. Put a \u201ccomma\u201d then a \u201cspace\u201d between the columns value. Example: columns=[ order_description, customer_ip, eci, geolocation_ip, merchant_reference] * In the filters parameter; you should: \\1. Open brackets. \\2. Then open a curly brackets {}. \\3. Write the \u201ckey\u201d. \\4. Put a \u201ccomma\u201d then a \u201cspace. \\5. Write the \u201cvalue\u201d of the key. Example: filters=[{key=currency, value=USD}, {key=payment_option, value= VISA}] PASSaccess_code=zx0IPmPy5jp1vAz8Kpg7columns=[order_description, customer_ip, eci, geolocation_ip, merchant_reference, card_holder_name, currency, amount, payment_option, fort_id, customer_email, customer_name]filters=[{key=currency, value=USD}, {key=payment_option, value=VISA}]from_date=2017-08-03T00:00:01+03:00language=enmerchant_identifier=CycHZxVjmerchant_reference=XYZ9239-yu898query_command=GENERATE_REPORTresponse_format=JSONto_date=2017-08-03T23:59:59+03:00PASS After applying step 5 of the Signature Pattern , the result will be as follows: Signature = 6750d396772be7df79347306324b1ad20320b31522583346e79b2ae8a5bc8970 PayFort Gateway includes the signature in the Response so you can check the integrity of the received data. You do this by calculating the secure hash using the above method, then comparing your calculation with the value you received from PayFort Gateway. If the values match, then you can be assured that we received the data you sent, and you received the data we sent. Try It Yourself Map<String, Object>requestMap = new HashedMap(); requestMap.put(\"command\", \"PURCHASE\"); requestMap.put(\"merchant_reference\", \"Test010\"); requestMap.put(\"amount\", \"1000\"); requestMap.put(\"access_code\", \"SILgpo7pWbmzuURp2qri\"); requestMap.put(\"merchant_identifier\", \"MxvOupuG\"); requestMap.put(\"currency\", \"USD\"); requestMap.put(\"language\", \"en\"); requestMap.put(\"customer_email\", \"test@gmail.com\"); //order by key requestMap = requestMap.entrySet().stream().sorted(Map.Entry.comparingByKey()) .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (oldValue, newValue) -> oldValue, LinkedHashMap::new)); String requestString = \"PASS\"; for(Entry<String, Object> entry: requestMap.entrySet()) requestString += entry.getKey() + \"=\" + entry.getValue(); requestString+= \"PASS\"; MessageDigest digest = MessageDigest.getInstance(\"SHA-256\"); byte[] hashed = digest.digest(requestString.getBytes(StandardCharsets.UTF_8)); String signature = javax.xml.bind.DatatypeConverter.printHexBinary(hashed); In this section, you can create the concatenated string to calculate signature value for request and response messages. Please note that you need to replace \u201cPASS\u201d phrase with yours. Choose input type: JSONKey/Value Was this helpful? Yes No FORT XML Response Builder Through this section you can discover one of the FORT services that enables you to receive the FORT response in XML format. Structure VALUE VALUE VALUE VALUE VALUE VALUE VALUE VALUE The XML response builder results specifications are: 1. The root node name is \u2018response\u2019. 2. The FORT_PARAMETER of type \u201cList\u201d has a special tag name format; where the parent node tag name format is: 3. The list child nodes tag name\u2019s is the name of the parameter name itself. Sample Code <response><response_code>54000</response_code><from_date>2017-01-19T12:20:00+02:00</from_date><data_list> <data> <card_number>455701******8902</card_number> <expiry_date>2105</expiry_date> <token_name>466E93413AB648DEE053320A10AC5986</token_name> <card_brand>VISA</card_brand> <card_bin>455701</card_bin> <token_status>ACTIVE</token_status> <creation_date>2017-01-20T08:25:37+13:00</creation_date> </data> <data> <card_number>400555******0001</card_number> <expiry_date>1705</expiry_date> <token_name>tkn001</token_name> <card_brand>VISA</card_brand> <card_bin>455701</card_bin> <token_status>ACTIVE</token_status> <creation_date>2016-05-13T14:34:09+13:00</creation_date> </data></data_list><signature>4b6b1f0219169b0dc77f7ceac83b930cf71995ab7a4fcc435a</signature><merchant_identifier>uZOJfKqb</merchant_identifier><access_code>AwvucffCjzibl0eZYTB3</access_code><language>en</language><response_format>XML</response_format><response_message>Success</response_message><to_date>2017-01-19T12:30:00+02:00</to_date><query_command>GET_TOKENS</query_command><data_count>1</data_count><status>54</status></response>","title":"In Common Service"},{"location":"incommon/#in-common-services","text":"","title":"In Common Services"},{"location":"incommon/#query-operations","text":"A type of query that can be requested through our system, which includes the \u201cCheck Status\u201d query.","title":"Query Operations"},{"location":"incommon/#check-status","text":"Check Status allows the Merchant to check the status of a specific order and the status of the latest operation performed on that order.","title":"Check Status"},{"location":"incommon/#endpoints","text":"Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"incommon/#parameters-submission-type","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"incommon/#check-status-request","text":"(Please take a look at the Check Status Request Example on the right side of the page.) Check Status Request Example String jsonRequestString = \"{\\\"query_command\\\" : \\\"CHECK_STATUS\\\" \\\"access_code\\\" : \\\"zx0IPmPy5jp1vAz8Kpg7\\\", \\\"merchant_identifier\\\" : \\\"CycHZxVj\\\",\" + \"\\\"merchant_reference\\\" : \\\"XYZ9239-yu898\\\", \\\"language\\\" : \\\"en\\\", \" + \"\\\"signature\\\" : \\\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\\\"}\"; // Define and Initialize HttpClient HttpClient httpClient = HttpClientBuilder.create().build(); // Intialize HttpPOST with FORT Payment services URL HttpPost request = new HttpPost(\"https://sbpaymentservices.payfort.com/FortAPI/paymentApi\"); // Setup Http POST entity with JSON String StringEntity params = new StringEntity(jsonRequestString); // Setup request type as JSON request.addHeader(\"content-type\", \"application/json\"); request.setEntity(params); // Post request to FORT HttpResponse response = httpClient.execute(request); // Read response using StringBuilder StringBuilder sb = new StringBuilder(); BufferedReader reader = new BufferedReader(new InputStreamReader( response.getEntity().getContent()), 65728); String line = null; while ((line = reader.readLine()) != null) { sb.append(line); } // Print response System.out.println(sb.toString()); Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description query_command Alpha Mandatory max: 50 The query operations command. Possible/ expected values: CHECK_STATUS Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a fort_id Numeric Optional Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 return_third_party_response_codes Alpha Optional Max: 3 This parameter allows you to return the 3rd party response codes in the transaction\u2019s response. Possible/ expected values: - YES - NO You can send \u201cmerchant_reference\u201d and/ or \u201cfort_id\u201d in the CHECK_STATUS request.","title":"Check Status - Request"},{"location":"incommon/#check-status-response","text":"(Please take a look at the Check Status Example Response on the right side of the page.) Check Status Response Example {\"query_command\":\"CHECK_STATUS\",\"access_code\":\"s31bpM1ebfNnwqo\",\"merchant_identifier\":\"FD1Ptq\",\"merchant_reference\":\"141127176\",\"language\":\"en\",\"signature\":\"90f7092923c9eea8b0df6d509453a1791a36e2cd4a80eaef366e235b169a40e0\",\"fort_id\":\"21722423333\",\"response_message\":\"Success\",\"response_code\":\"12000\",\"status\":\"12\",\"transaction_status\":\"12\",\"transaction_code\":\"12000\",\"transaction_message\":\"Success\"} The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 The query operations command. Possible/ expected values: CHECK_STATUS access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a fort_id Numeric Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 response_message Alphanumeric Max: 150 Message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses transaction_status Numeric Max: 2 The status of the last operation performed on a specific order. Possible/ expected values: Please refer to section statuses transaction_code Numeric Max: 5 The message code returned for the last operation performed on a specific order. Possible/ expected values: Please refer to section messages transaction_message Alphanumeric Max: 150 The message returned for the last operation performed on a specific order. Example: Success refunded_amount Numeric Max: 10 The total refunded amount for the order. Example: 10000 captured_amount Numeric Max: 10 The total captured amount for the order. Example: 10000 authorized_amount Numeric Max: 10 The total authorized amount for the order. Example: 10000 authorization_code Alphanumeric Max: 100 Authorization Code returned from the 3rd party. Example: 017201 processor_response_code Alphanumeric Max: 100 Response code returns from the Processor. Example: APPROVED acquirer_response_code Alphanumeric Max: 10 Response code returns from the Acquirer. Example: 00 Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-.","title":"Check Status - Response"},{"location":"incommon/#services-activation","text":"Services are activated for our Merchants by our back-office team. Once you open your Merchant account and click \u201cPayment Stack\u201d under the Services tab. The services provided by PayFort are: Fraud Prevention. 3-D Secure. Installments. Tokenization. Batch service. Remember - If you wish to activate extra services for your Merchant account, you need to contact PayFort\u2019s Back-office team. For detailed information, please download our Merchant Integration Guide and read the \u201cServices Activation\u201d section to guide you through this process.","title":"Services Activation"},{"location":"incommon/#signature","text":"The Signature is a parameter that holds the digital signature value calculated by the SHA algorithm. The digital signature is used to authenticate the sender and receiver of the message and allows the receiver to verify the integrity of the message.","title":"Signature"},{"location":"incommon/#message-digest","text":"Name Description SHA Type The Secure Hash Algorithm is a family of cryptographic hash functions published by the National Institute of Standards as a US Federal information processing standard (FIPS) including: SHA-0, SHA-2, and SHA-3. Values: SHA-256, SHA 512, and SHA-128 (not recommended). SHA Request Phrase This value is used when the Merchant generates the request signature. Values: Dynamic value defined by the Merchant. SHA Response Phrase This value is used by our system to generate the response signature for the Merchant\u2019s Request. Values: Dynamic value defined by the Merchant.","title":"Message Digest"},{"location":"incommon/#signature-pattern","text":"The below steps describe the signature pattern: Sort all PayFort requests parameters (both mandatory and optional) in an ascending alphabetical order based on the parameters names. Concatenate the parameter name with the value separated by \u2019=\u2019 (param_name=param_value). Concatenate all the parameters directly without any separator. (param_name1=param_value1param_name2=param_value2). Add the Merchant\u2019s Passphrase at the beginning and end of the parameters string. (REQUESTPHRASEparam_name1=param_value1param_name2=param_value2RE QUESTPHRASE). Use the SHA function to generate the SHA value of the resulted string depending on the type of SHA selected by the Merchant.","title":"Signature Pattern"},{"location":"incommon/#create-signature-value","text":"Map<String, Object>requestMap = new HashedMap(); requestMap.put(\"command\", \"PURCHASE\"); requestMap.put(\"merchant_reference\", \"Test010\"); requestMap.put(\"amount\", \"1000\"); requestMap.put(\"access_code\", \"SILgpo7pWbmzuURp2qri\"); requestMap.put(\"merchant_identifier\", \"MxvOupuG\"); requestMap.put(\"currency\", \"USD\"); requestMap.put(\"language\", \"en\"); requestMap.put(\"customer_email\", \"test@gmail.com\"); //order by key requestMap = requestMap.entrySet().stream().sorted(Map.Entry.comparingByKey()) .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (oldValue, newValue) -> oldValue, LinkedHashMap::new)); String requestString = \"PASS\"; for(Entry<String, Object> entry: requestMap.entrySet()) requestString += entry.getKey() + \"=\" + entry.getValue(); requestString+= \"PASS\"; MessageDigest digest = MessageDigest.getInstance(\"SHA-256\"); byte[] hashed = digest.digest(requestString.getBytes(StandardCharsets.UTF_8)); String signature = javax.xml.bind.DatatypeConverter.printHexBinary(hashed); In this section, you can find examples on how to create the signature value for request and response messages. Please note that all values mentioned in the examples are fictitious. The following is an example of the Request Parameters: signature = b88db48baaa600c3fadac502c75a832e3470029f command = PURCHASE merchant_reference = Test010 amount = 1000 access_code = SILgpo7pWbmzuURp2qri merchant_identifier = MxvOupuG currency = USD language = en customer_email = test@gmail.com Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS. SHA-Type: SHA-256. After sorting the parameters and completing step 4 of the Signature Pattern , the result will be the following concatenated string: PASSaccess_code=SILgpo7pWbmzuURp2qriamount=1000command=PURCHASEcurrenc y=USDcustomer_email=test@gmail.comlanguage=enmerchant_identifier=MxvOupuGmerch ant_reference=Test010PASS After applying step 5 of the Signature Pattern , the result will be as follows: Signature = 94C38AFC7BDAE0114FC8C740EDF12416F22998241CE4B4EA70D5521233A2C882 The following is an example for the Merchant Page 2.0 request signature calculations: Remember - The calculations for the Merchant Page 2.0 require you to calculate the signature without including the following parameters in the signature even if these parameters included in the request of Merchant Page 2.0: card_security_code, card_number, expiry_date, card_holder_name, remember_me. Assume you have the below parameters included in the request of Merchant Page 2.0: service_command = TOKENIZATION language = en merchant_identifier = MxvOupuG access_code = SILgpo7pWbmzuURp2qri merchant_reference = MyReference0001 card_security_code = 123 card_number = 4005550000000001 expiry_date = 2105 remember_me = YES card_holder_name = John Smith Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS. SHA-Type: SHA-256. The string to hash should be prepared for the above request is the following step 4 of the Signature Pattern : PASSaccess_code=SILgpo7pWbmzuURp2qrilanguage=enmerchant_identifier=MxvOupuG merchant_reference=MyReference0001service_command=TOKENIZATIONPASS After applying step 5 of the Signature Pattern , the result will be as follows: signature = 7EE560CCD621DA61BFC772F2F1B5849BABDA768F5EE36D4DE67EFA88403E4B99 The following is an example for the Reporting API request signature calculations: Assume you have the below parameters included in the request of Reporting API: \u2022 query_command = GENERATE_REPORT \u2022 access_code = zx0IPmPy5jp1vAz8Kpg7 \u2022 merchant_identifier = CycHZxVj \u2022 merchant_reference = XYZ9239-yu898 \u2022 columns = [order_description, customer_ip, eci, geolocation_ip, merchant_reference, card_holder_name, currency, amount, payment_option, fort_id, customer_email, customer_name, operation] \u2022 filters = [{key=currency, value=USD}, {key=payment_option, value= VISA}] \u2022 from_date = 2017-08-03T00:00:01+03:00 \u2022 to_date = 2017-08-03T23:59:59+03:00 \u2022 response_format = JSON \u2022 language = en Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS. SHA-Type: SHA-256. The string to hash should be prepared for the above request is the following step 4 of the Signature Pattern : Remember: * In the columns parameter; you should: \\1. Open brackets. \\2. Put a \u201ccomma\u201d then a \u201cspace\u201d between the columns value. Example: columns=[ order_description, customer_ip, eci, geolocation_ip, merchant_reference] * In the filters parameter; you should: \\1. Open brackets. \\2. Then open a curly brackets {}. \\3. Write the \u201ckey\u201d. \\4. Put a \u201ccomma\u201d then a \u201cspace. \\5. Write the \u201cvalue\u201d of the key. Example: filters=[{key=currency, value=USD}, {key=payment_option, value= VISA}] PASSaccess_code=zx0IPmPy5jp1vAz8Kpg7columns=[order_description, customer_ip, eci, geolocation_ip, merchant_reference, card_holder_name, currency, amount, payment_option, fort_id, customer_email, customer_name]filters=[{key=currency, value=USD}, {key=payment_option, value=VISA}]from_date=2017-08-03T00:00:01+03:00language=enmerchant_identifier=CycHZxVjmerchant_reference=XYZ9239-yu898query_command=GENERATE_REPORTresponse_format=JSONto_date=2017-08-03T23:59:59+03:00PASS After applying step 5 of the Signature Pattern , the result will be as follows: Signature = 6750d396772be7df79347306324b1ad20320b31522583346e79b2ae8a5bc8970 PayFort Gateway includes the signature in the Response so you can check the integrity of the received data. You do this by calculating the secure hash using the above method, then comparing your calculation with the value you received from PayFort Gateway. If the values match, then you can be assured that we received the data you sent, and you received the data we sent.","title":"Create Signature Value"},{"location":"incommon/#try-it-yourself","text":"Map<String, Object>requestMap = new HashedMap(); requestMap.put(\"command\", \"PURCHASE\"); requestMap.put(\"merchant_reference\", \"Test010\"); requestMap.put(\"amount\", \"1000\"); requestMap.put(\"access_code\", \"SILgpo7pWbmzuURp2qri\"); requestMap.put(\"merchant_identifier\", \"MxvOupuG\"); requestMap.put(\"currency\", \"USD\"); requestMap.put(\"language\", \"en\"); requestMap.put(\"customer_email\", \"test@gmail.com\"); //order by key requestMap = requestMap.entrySet().stream().sorted(Map.Entry.comparingByKey()) .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (oldValue, newValue) -> oldValue, LinkedHashMap::new)); String requestString = \"PASS\"; for(Entry<String, Object> entry: requestMap.entrySet()) requestString += entry.getKey() + \"=\" + entry.getValue(); requestString+= \"PASS\"; MessageDigest digest = MessageDigest.getInstance(\"SHA-256\"); byte[] hashed = digest.digest(requestString.getBytes(StandardCharsets.UTF_8)); String signature = javax.xml.bind.DatatypeConverter.printHexBinary(hashed); In this section, you can create the concatenated string to calculate signature value for request and response messages. Please note that you need to replace \u201cPASS\u201d phrase with yours. Choose input type: JSONKey/Value Was this helpful? Yes No","title":"Try It Yourself"},{"location":"incommon/#fort-xml-response-builder","text":"Through this section you can discover one of the FORT services that enables you to receive the FORT response in XML format.","title":"FORT XML Response Builder"},{"location":"incommon/#structure","text":"VALUE VALUE VALUE VALUE VALUE VALUE VALUE VALUE The XML response builder results specifications are: 1. The root node name is \u2018response\u2019. 2. The FORT_PARAMETER of type \u201cList\u201d has a special tag name format; where the parent node tag name format is: 3. The list child nodes tag name\u2019s is the name of the parameter name itself.","title":"Structure"},{"location":"incommon/#sample-code","text":"<response><response_code>54000</response_code><from_date>2017-01-19T12:20:00+02:00</from_date><data_list> <data> <card_number>455701******8902</card_number> <expiry_date>2105</expiry_date> <token_name>466E93413AB648DEE053320A10AC5986</token_name> <card_brand>VISA</card_brand> <card_bin>455701</card_bin> <token_status>ACTIVE</token_status> <creation_date>2017-01-20T08:25:37+13:00</creation_date> </data> <data> <card_number>400555******0001</card_number> <expiry_date>1705</expiry_date> <token_name>tkn001</token_name> <card_brand>VISA</card_brand> <card_bin>455701</card_bin> <token_status>ACTIVE</token_status> <creation_date>2016-05-13T14:34:09+13:00</creation_date> </data></data_list><signature>4b6b1f0219169b0dc77f7ceac83b930cf71995ab7a4fcc435a</signature><merchant_identifier>uZOJfKqb</merchant_identifier><access_code>AwvucffCjzibl0eZYTB3</access_code><language>en</language><response_format>XML</response_format><response_message>Success</response_message><to_date>2017-01-19T12:30:00+02:00</to_date><query_command>GET_TOKENS</query_command><data_count>1</data_count><status>54</status></response>","title":"Sample Code"},{"location":"index-1/","text":"Get Started With PayFORT If you are starting out a new ecommerce or any other merchant site then you need a robust payment system that can capture not only customer's payment details but also helps you with various financial transactions needs of your customers such as recurring payments, financing purchase by the customer, one time payment etc. PayFORT helps you to build a robust payment system for your merchant site. With the help of PayFORT you can collect payment information conveniently and securely. It offers your customer the choice to pay in multiple currencies. Your customers can also select from available payment methods such as 3D secure, Apple Pay, Visa Checkout or MasterPass. You can get started with a PayFORT test account by signing up using this link If you want to integrate payment systems with your site then you can sign up for a live account by visiting this link Endpoints An endpoint is one end of a communication channel and your merchant site will communicate with the PayFORT resources using Endpoints. For PayFORT APIs , an endpoint includes a URL of PayFORT server or service. Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage Give It a Try Use one of our test cards and corresponding CVV to try iFrames out for yourself. You can use any expiry date (`mm/yy`), as long as it's in the future. PayFORT offers you two approaches for integrations with your merchant site as mentioned below: Merchant Page Integration There are two ways to integrate Merchant pages Merchant Page 1 Merchant Page 2 What is iFrame for Web? You can setup payment form and start accepting payments within few minutes with the help of iFrame. PayFORT provides easy to use iFrame which can be easily integrated with your payment form. It takes the look and feel of your merchant site and accepts payments from major credit cards including MADA, VISA, Mastercard, etc. You develop your site in any technology of your choice and integrate the iFrame in your html based checkout page. The PayFORT iframe takes the look and feel as that of your website. Figure 1 - Using PayFORT iFrame for web How it Works? Your checkout page will display an integrated PayFORT iFrame to your Customer that has the same look and feel as that of your website. Customer fills his/her payment details in the checkout page. PayFORT server receives the payment details and validates the same. PayFORT then sends a token to your checkout page to complete the transaction. You have the option to redirect the Customer directly to the checkout page. For more details on Tokens and Tokenization process visit the Link Integration Flow Figure 2 : Integration Flow using iFrame Here is the description of the PayFORT iFrame Integration workflow : The customer begins the checkout process on your website. The payment page with integrated iFrame is displayed. The Customer then enters the card\u2019s details on the payment page. PayFORT checks the card details. PayFORT creates a token for the Customer transaction and sends it to the payment page. The Payment page then sends a JSON request along with the token to PayFORT. In case your page receives from PayFORT server a 3-D Secure URL 3ds_url , and response indicating that a 3ds check is required then: Your payment page redirects the Customer to the ACS to check his card enrollment. The Customer enters authentication data on the ACS platform. The ACS performs authentication of the Customer\u2019s data and sends the authentication results to PayFORT. PayFORT completes the operation based on the 3-D Secure response and returns the response to your payment page. PayFORT sends the payment results to your site. In case of 3ds secure check, PayFort returns status 20: On hold and message 064: 3-D Secure check requested message.For example, PayFort is waiting for your payment page to authenticate the Customer. If you include the token_name parameter in the request and this Token already has a successful Authorization, then the card number (masked) and expiry date will be displayed in their allocated fields. If the Token is sent by you, it will be generated with the same name as sent by your page. Payment processing page, payment form and payment details form all refer to payment page on your site where customer will enter card details. For more details on Tokens and Tokenization process visit the Link Integrate iFrames to Payment Page If you are planning to use PayFORT iFrames then you can use the endpoints Endpoints for testing and and also for going live. You can use programming language of your choice or what your site uses and can use the iFrame in your html based check out page. Before you start Make sure you have your access_code . Refer to Figure 3 . You can find it in the backoffice , under Integration Settings > Security Settings > Access Code . If you don't have an account with us yet, you can create a test account by visiting the Link . You can also get started with an active account by visiting this link . Once you signup you will get the access to the Backoffice. You can check out more about navigating through backoffice by visiting this link Figure 3 : Access Code Generation The Payment Page Template available in the backoffice provides you the feature to create a payment processing page using PayFort iFrame. Refer to the Figure 4 Figure 4 : Use Payment Settings to create a payment form Sample iFrame code snippet The following sample code snippet is the start of the payment process and allows you to tokenize a customer's sensitive card information using iFrames. <html> </head> <body> <iframe style=\"border:5px dotted red\" name=\"myframe\" src = \"\" width=\"400\" height=\"600\"> </iframe> <form action=\"https://sbcheckout.payfort.com/FortAPI/paymentPage\" method=\"post\" id=\"\" target=\"myframe\"> <INPUT type=\"hidden\" NAME=\"service_command\" value=\"TOKENIZATION\"> <INPUT type=\"hidden\" NAME=\"language\" value=\" \"> <INPUT type=\"hidden\" NAME=\"merchant_identifier\" value=\"\"> <INPUT type=\"hidden\" NAME=\"access_code\" value=\"\"> <INPUT type=\"hidden\" NAME=\"signature\" value=\"\"> <INPUT type=\"hidden\" NAME=\"return_url\" value=\"\"> <INPUT type=\"hidden\" NAME=\"merchant_reference\" value=\"\"> <input value=\"Send\" type=\"submit\" id=\"form1\"> </form> </body> </html> The above code snippet is an HTML based form that will post a request to PayFORT server. The request parameters are also added in the input tag of the code. However, If you are not familiar with HTML tags and forms then you can checkout this site The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment The form consists of iframe tag which specifies the style, name of the style (you can give any name to your style), source code location, width and height of the iframe. All these are customizable values which you can provide. The form action tag consists of the endpoints . This will come handy whenever submit action is performed on the page. Once the form is submitted the parameters provided in the form would be sent to the PayFORT server and Endpoints will serve as communication link between your page and PayFORT server. Here is the description of the input parameters: The very first input parameter is the service command Tokenization. This service command will provide the server with a valid command that it should perform once it receives the request. The second input parameter denotes the language. There are two options which you can use. The languages supported by our platform are en/ar . You can provide either english(en) or arabic(ar) in the input parameter value. The third input parameter is merchant identifier and the value of the same can be check in the [backoffice](backoffice.md) The fourth input parameter is the access code and again its value can be found in backoffice. The fifth input parameter is the signature which is a SHA based and can be generated in the backoffice. The sixth input parameter is the return url which the url of the page where you would like to receive the response of the PayFORT server or the response to your request The seventh input parameter is the merchant reference which is nothing but unique order number You need to provide the values of all the input parameters in the value field before your payment page can send request to the PayFORT server Finally the laster input parameter would be a submit parameter which would submit the form and the request would be forwarded to the PayFORT server For more details on Tokens and Tokenization process visit the link Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam. PayFORT Payment Features With PayFORT you need not redirect your customers to third party website for payment and they will be able to pay on the payment page of your website. You are no longer required to get your website PCI-Compliant. Since PayFORT is PCI-DSS compliant it means your business transactions will be PCI-Compliant automatically. It offers payment solutions for various shopping cart applications including your own in house shopping cart application. \u200b Figure 1 \u200b Shopping cart applications supported by PayFort Using PayFORT iFrame PayFORT iFrame * helps you to create a customizable payment form. It gives the customer freedom to provide their payment details on your site's checkout page. Once the details are entered PayFORT generates a secure single use token through tokenization process. This token can be used to request a payment without the need to store any customer's payment information in your site. PayFORT processes the transaction and returns the results back to the your site through invisible redirection. check out iframe for web here Using Custom Payment Form You can also design and develop your own custom form for collecting the card details. The card details are sent directly to PayFORT and substituted with Token. You can then use this Token to complete the transaction. custom payment form Get Started With Testing If you have developed your payment page then you can proceed with creation of a testing account by visiting link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Get Started With PayFORT"},{"location":"index-1/#get-started-with-payfort","text":"If you are starting out a new ecommerce or any other merchant site then you need a robust payment system that can capture not only customer's payment details but also helps you with various financial transactions needs of your customers such as recurring payments, financing purchase by the customer, one time payment etc. PayFORT helps you to build a robust payment system for your merchant site. With the help of PayFORT you can collect payment information conveniently and securely. It offers your customer the choice to pay in multiple currencies. Your customers can also select from available payment methods such as 3D secure, Apple Pay, Visa Checkout or MasterPass. You can get started with a PayFORT test account by signing up using this link If you want to integrate payment systems with your site then you can sign up for a live account by visiting this link","title":"Get Started With PayFORT"},{"location":"index-1/#payfort-payment-features","text":"With PayFORT you need not redirect your customers to third party website for payment and they will be able to pay on the payment page of your website. You are no longer required to get your website PCI-Compliant. Since PayFORT is PCI-DSS compliant it means your business transactions will be PCI-Compliant automatically. It offers payment solutions for various shopping cart applications including your own in house shopping cart application. \u200b Figure 1 \u200b Shopping cart applications supported by PayFort","title":"PayFORT Payment Features"},{"location":"index-1/#using-payfort-iframe","text":"PayFORT iFrame * helps you to create a customizable payment form. It gives the customer freedom to provide their payment details on your site's checkout page. Once the details are entered PayFORT generates a secure single use token through tokenization process. This token can be used to request a payment without the need to store any customer's payment information in your site. PayFORT processes the transaction and returns the results back to the your site through invisible redirection. check out iframe for web here","title":"Using PayFORT iFrame"},{"location":"index-1/#using-custom-payment-form","text":"You can also design and develop your own custom form for collecting the card details. The card details are sent directly to PayFORT and substituted with Token. You can then use this Token to complete the transaction. custom payment form","title":"Using Custom Payment Form"},{"location":"index-1/#get-started-with-testing","text":"If you have developed your payment page then you can proceed with creation of a testing account by visiting link","title":"Get Started With Testing"},{"location":"index-1/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"inovicegenerationbackoffice/","text":"Invoice generation (BackOffice) You can also generate invoice through the PayFORT BackOffice portal. Please follow the steps to generate invoice through Login to your PayFORT back office account. From the side menu click on invoices and then on Generate invoices. A new invoice form would open as shown below Create new invoice similar to the sample shown here Success message will be displayed with the information you just entered and a button to copy the invoice link to send. Here is the sample invoice generate at the back office When invoice has been paid you will get the screen as shown here You can also generate and download reports of all the invoices from Invoice Management as shown here \u200b Please visit the following video tutorial to further understand the process. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Invoice Generation(BackOffice)"},{"location":"inovicegenerationbackoffice/#invoice-generation-backoffice","text":"You can also generate invoice through the PayFORT BackOffice portal. Please follow the steps to generate invoice through Login to your PayFORT back office account. From the side menu click on invoices and then on Generate invoices. A new invoice form would open as shown below Create new invoice similar to the sample shown here Success message will be displayed with the information you just entered and a button to copy the invoice link to send. Here is the sample invoice generate at the back office When invoice has been paid you will get the screen as shown here You can also generate and download reports of all the invoices from Invoice Management as shown here \u200b Please visit the following video tutorial to further understand the process.","title":"Invoice generation (BackOffice)"},{"location":"inovicegenerationbackoffice/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"inovicegenerationbackoffice/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"installments/","text":"Installments Installments helps your customer to pay for any product or services at your site in easy equitable monthly installments (EMI). If your customers don't have enough cash for payment of products or services offered by your site, then PayFORT in partnership with several banks and credit cards facilitates installment services for your customer requirements. However, you will be paid the full amount immediately. PayFORT is offering the services at present in UAE Egypt KSA only. Supported Schemes List of Banks enrolled for installment services Emirates NBD ADCB Mashreq Dubai First CBD Mawarid Finance NCB SABB Bank AlJazira Saudi Hollandi bank Riyadh bank CIB Barclays How it works? Placeholder: Provide Integration flow/process flow diagram. Despite the involvement of multiple parties (merchant, bank and customer), the installment process is simple and can be implemented in seconds. At Checkout customer selects his bank, installment plans and enters his credit card details to complete the purchase. Customer is not required to call his bank to convert the transaction into Installments. PayFORT will work with banks to convert the transaction into installments. Customer then receives an sms or an email from the bank confirming the conversion of the transaction into EMI. Installments Redirection Now most of the transactions can be converted into Installments so in this section all the transactions of Redirections can be converted into Installments. Installments Redirection Service - Request You have to include the following parameters in the Purchase - Request Parameters which you will send to PayFort: ATTRIBUTES Description installments Alpha Optional max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE Placeholder: Please provide sample code for Installments Redirection service - requirements Installments Redirection Service - Response Placeholder : Provide sample JSON response The following parameters will be returned in PayFort\u2019s JSON Response in addition to the Purchase - Response Parameters : ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE number_of_installments Numeric max: 2 The number of installments the customer has selected in the payment page. Example: 3 Installments Merchant Page (Iframe) If you are integrating Merchant Page (iFrame feature) then you can easily redesign your merchant page to easily send installment request from the merchant page itself as shown in this section. Installments Merchant page Service - Request Placeholder: Provide sample code for request Include the following parameters in the Merchant page - Request Parameters you will send to PayFort: ATTRIBUTES Description installments Alpha Mandatory max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD customer_country_code Alpha Optional Max: 3 The Customer\u2019s country code. ISO 3 digit country code. Example: JOR Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Installments Merchant page Service - Response Placeholder: Please provide sample JSON response. The following parameters will be returned in PayFort\u2019s Response in addition to the Merchant Page - Response Parameters ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE amount Numeric Max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD customer_country_code Alpha Max: 3 The Customer\u2019s country code. ISO 3-digit country code. Example: JOR number_of_installments Numeric Max: 2 The number of installments the customer has selected in payment page. Example: 3 plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Installments Purchase Service - Request Placeholder: Sample code for merchant page operations request For transactions being carried out under operations you have to Include the following parameters in the Operation - Request Parameters while sending to PayFort: ATTRIBUTES Description installments Alpha Mandatory max: 10 Used to specify the type of the Installments service. Possible/ expected values: YES plan_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE Installments Purchase Service - Response Placeholder: Provide sample JSON response sent from the PayFORT server. The following parameters will be returned in PayFort\u2019s Response in addition to the Operation - Response Parameters : ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: YES plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE number_of_installments Numeric Max: 2 The number of installments the customer has selected in payment page. Example: 3 Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Installments Hosted Checkout Get Installments Plans API By using Hosted Checkout you will be able to fetch various installment plan details for your various products and services as well as various issuers configured in your account for the installment service. You can use the following endpoints to setup hosted checkout service. Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Get Installments Plans API - Request Placeholder: Provide the sample code for the request Include the following parameters in the Request you will send to PayFort: For input parameters please visit the section Get Installments Plans API - Request under the link Please note that you can\u2019t send these parameters (amount/ currency) separately; you should send them together or not sending them at all. If you send the amount and the currency in get plans API, you will receive AmountPerMonth parameter calculated from our side, and no need to use the formulas returned to complete the amount calculations. Get Installments Plans API - Response Placeholder: Provide sample JSON response The following parameters will be returned in PayFort\u2019s Response: For more details on the parameters please visit the section Get Installments Plans API - Response in the link Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Issuer Detail You can use the following attributes to know the details of the installment services issuers. Placeholder: Provide sample code for issuer details This parameter is a sub parameter of the installment_detail parameter, please refer the section Issuer Detail in the link for the children parameters of the issuer_detail What does each of the formula parameters mean: (amount +(amount *effective rate/100))/period Amount: The transaction amount. Effective rate: The fee_amount retrieved in the response inside the next plan_detail section Period: number_of_installment retrieved in the response inside the next plan_detail section Plan Details If you want to fetch details of various installment plans you can use the attributes in this section and send in your request to the PayFORT server. Placeholder: provide sample code for plan details. This parameter is a sub parameter of the issuer_detail parameter, please refer the section Plan Detail in the link for the children parameters of the plan_detail : Bins Details This section will help you to capture the details of the credit card that customer will use for availing the installment service. You have to use the attributes in your request to fetch the details of the credit card. Placeholder: provide sample code for bins details. This parameter is a sub parameter of the issuer_detail parameter, please refer the section Bin Detail in the link for the children parameters of the bins : Get Installments Plans API formulas This section helps you to calculate the installment formula that would be displayed to your customers when they checkout. Following are the key formulas applicable for calculating the installments. Percentage Fees: Installments interest rate in percent (%) charged to the customer by the bank. Rate Flat: - Non Islamic: ((amount + ((amount * (fees / 100)) * months))) / months (amount + (amount* (fees / 100))) / months - Islamic: (((months * (fees / 100)) + 1) * amount) / months Rate Reducing: PMT (excel function) Fixed Fees: Installments fees in fixed amount charged to the customer by the bank. (amount + fees) / months Get Installments Plans API - Response Response Sample The following is sample of a response of an Get Installments Plans API request: { \u201cresponse_code\u201d: \u201c62000\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201csignature\u201d: \u201c9b02960d319318256efbc17cf57dbc1f7e7fd046e20e49215d0bed32a065c3ae\u201d, \u201cmerchant_identifier\u201d: \u201cbxgOIxIz\u201d, \u201caccess_code\u201d: \u201cRu8n1ciSJXWm8WFHLKsR\u201d, \u201cquery_command\u201d: \u201cGET_INSTALLMENTS_PLANS\u201d, \u201cissuer_code\u201d: \u201cfHkigRtu\u201d, \u201cinstallment_detail\u201d: { \u201cissuer_detail\u201d: [ { \u201cissuer_code\u201d: \u201cfHkigRtu\u201d, \u201cissuer_name_ar\u201d: \u201c\u0628\u0646\u0643 \u0627\u0644\u0627\u0645\u0627\u0631\u0627\u062a \u062f\u0628\u064a \u0627\u0644\u0648\u0637\u0646\u064a\u201d, \u201cissuer_name_en\u201d: \u201cEmirates NBD Egypt\u201d, \u201cterms_and_condition_ar\u201d: \u201chttp://www.emiratesnbd.com.eg/egypt-en/index.cfm/retail-banking/cards/special-offers/\u201d, \u201cterms_and_condition_en\u201d: \u201chttp://www.emiratesnbd.com.eg/egypt-en/index.cfm/retail-banking/cards/special-offers/\u201d, \u201ccountry_code\u201d: \u201cEGY\u201d, \u201cissuer_logo_ar\u201d: \u201chttps://stgstatic.payfort.com/frontend/files/logos/issuer/logo_ar_7.jpeg\u201d, \u201cissuer_logo_en\u201d: \u201chttps://stgstatic.payfort.com/frontend/files/logos/issuer/logo_en_7.jpg\u201d, \u201cbanking_system\u201d: \u201cNon Islamic\u201d, \u201cformula\u201d: \u201c((amount + ((amount * (effective rate/100)) * period))) / period\u201d, \u201cplan_details\u201d: [ { \u201cplan_code\u201d: \u201czAS4XyG2\u201d, \u201ccurrency_code\u201d: \u201cUSD\u201d, \u201cnumber_of_installment\u201d: 33, \u201cfees_type\u201d: \u201cPercentage\u201d, \u201cfees_amount\u201d: 300, \u201cprocessing_fees_type\u201d: null, \u201cprocessing_fees_amount\u201d: null, \u201crate_type\u201d: \u201cFlat\u201d, \u201cplan_merchant_type\u201d: \u201cNon Partner\u201d, \u201cplan_type\u201d: \u201cCross-Border\u201d, \u201cfee_display_value\u201d: 400, \u201cminimum_amount\u201d: 300, \u201cmaximum_amount\u201d: 33333300, \u201camountPerMonth\u201d: \u201c3.00\u201d } ], \u201cbins\u201d: [ { \u201cbin\u201d: \u201c427838\u201d, \u201ccountry_code\u201d: \u201cEGY\u201d, \u201ccurrency_code\u201d: \u201cEGP\u201d, \u201ccard_brand_code\u201d: \u201cVISA\u201d }, { \u201cbin\u201d: \u201c522025\u201d, \u201ccountry_code\u201d: \u201cEGY\u201d, \u201ccurrency_code\u201d: \u201cEGP\u201d, \u201ccard_brand_code\u201d: \u201cMaster Card\u201d }, { \u201cbin\u201d: \u201c543173\u201d, \u201ccountry_code\u201d: \u201cEGY\u201d, \u201ccurrency_code\u201d: \u201cEGP\u201d, \u201ccard_brand_code\u201d: \u201cMaster Card\u201d }, ], \u201cconfirmation_message_ar\u201d: null, \u201cdisclaimer_message_ar\u201d: null, \u201cprocessing_fees_message_ar\u201d: null, \u201cconfirmation_message_en\u201d: null, \u201cdisclaimer_message_en\u201d: null, \u201cprocessing_fees_message_en\u201d: null } ] }, \u201cstatus\u201d: \u201c62\u201d } Merchant Page 2.0 Operations Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Installment Service For Merchant Page 2.0 Operations - Request You can use the endpoints to integrate and send request for Merchant Page 2.0 operations. Placeholder: Provide sample code for merchant page 2.0 operations for installment service. Please visit the section Installment Service for Merchant Page 2.0 Operations - Request under the link for input parameters to be sent in the request. Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Installment Service For Merchant Page 2.0 Operations - Response Placeholder: Provide sample JSON response for merchant page 2.0 operations for installments. For more details on response parameters please visit the section Installment Service for merchant page 2.0 operations- response in the link Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-. Installments Hosted for Trusted Channel If you are a trusted channel partner or already a PCI compliant partner you can use the attributes provided in this section to integrate your installment service. For more details on the trusted channel partners please visit this link Installments Hosted for Trusted \u2013 Request Placeholder: Please provide sample code for trusted channel partner request for installment. First, you need to send a [Get Instalments Plans API](https://docs.payfort.com/docs/api/build/index.html?shell#get-installments-plans-api) request; to get the instalments details. Include the [input parameters](installmentsparameters.md) under the section Installments Hosted for Trusted - Request in addition to the [Trusted Channel \u2013 Request](trustedchannelparameters.md) Parameters you will send to PayFort: Installments Hosted for Trusted \u2013 Response Placeholder : Provide sample JSON response for Hosted for trusted channel For details on parameters of the response visit the section Installments Hosted for Trusted- Response in the link Installments Merchant Page - Style Sheet This is a list with all customizable CSS classes for Installments Merchant Page. You can use these css classes to style and design your installments merchant page. The installments-container class - responsible for the total width of the form container and the background. The receipt-container class - responsible for the receipt section you can customize / hide it by changing the CSS values The full-width class - responsible for the plans and switching the view from dropdown to a table. The credit-card-container class - responsible for the credit card form`s shape look. The error class - responsible for the error messages. The half1, half2 class - used to merge the date and CVV fields into one block or each one on block if needed. The bank class - is responsible for the bank agreement section. The floatl class - is the container of each single input field. The Pay class - responsible for the submit button. The Visa/ MasterCard classes - used to change the color of the Visa/ MasterCard colors. - You can always create multiple theme files that will enable you to switch freely and easily between them when necessary. - \u201cTheme\u201d files can be uploaded from the back-office using the Payment Page template screen. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Installments"},{"location":"installments/#installments","text":"Installments helps your customer to pay for any product or services at your site in easy equitable monthly installments (EMI). If your customers don't have enough cash for payment of products or services offered by your site, then PayFORT in partnership with several banks and credit cards facilitates installment services for your customer requirements. However, you will be paid the full amount immediately. PayFORT is offering the services at present in UAE Egypt KSA only.","title":"Installments"},{"location":"installments/#supported-schemes","text":"List of Banks enrolled for installment services Emirates NBD ADCB Mashreq Dubai First CBD Mawarid Finance NCB SABB Bank AlJazira Saudi Hollandi bank Riyadh bank CIB Barclays","title":"Supported Schemes"},{"location":"installments/#how-it-works","text":"Placeholder: Provide Integration flow/process flow diagram. Despite the involvement of multiple parties (merchant, bank and customer), the installment process is simple and can be implemented in seconds. At Checkout customer selects his bank, installment plans and enters his credit card details to complete the purchase. Customer is not required to call his bank to convert the transaction into Installments. PayFORT will work with banks to convert the transaction into installments. Customer then receives an sms or an email from the bank confirming the conversion of the transaction into EMI.","title":"How it works?"},{"location":"installments/#installments-redirection","text":"Now most of the transactions can be converted into Installments so in this section all the transactions of Redirections can be converted into Installments.","title":"Installments Redirection"},{"location":"installments/#installments-redirection-service-request","text":"You have to include the following parameters in the Purchase - Request Parameters which you will send to PayFort: ATTRIBUTES Description installments Alpha Optional max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE Placeholder: Please provide sample code for Installments Redirection service - requirements","title":"Installments Redirection Service - Request"},{"location":"installments/#installments-redirection-service-response","text":"Placeholder : Provide sample JSON response The following parameters will be returned in PayFort\u2019s JSON Response in addition to the Purchase - Response Parameters : ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE number_of_installments Numeric max: 2 The number of installments the customer has selected in the payment page. Example: 3","title":"Installments Redirection Service - Response"},{"location":"installments/#installments-merchant-page-iframe","text":"If you are integrating Merchant Page (iFrame feature) then you can easily redesign your merchant page to easily send installment request from the merchant page itself as shown in this section.","title":"Installments Merchant Page (Iframe)"},{"location":"installments/#installments-merchant-page-service-request","text":"Placeholder: Provide sample code for request Include the following parameters in the Merchant page - Request Parameters you will send to PayFort: ATTRIBUTES Description installments Alpha Mandatory max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE amount Numeric Mandatory Max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD customer_country_code Alpha Optional Max: 3 The Customer\u2019s country code. ISO 3 digit country code. Example: JOR Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Installments Merchant page Service - Request"},{"location":"installments/#installments-merchant-page-service-response","text":"Placeholder: Please provide sample JSON response. The following parameters will be returned in PayFort\u2019s Response in addition to the Merchant Page - Response Parameters ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: STANDALONE amount Numeric Max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD customer_country_code Alpha Max: 3 The Customer\u2019s country code. ISO 3-digit country code. Example: JOR number_of_installments Numeric Max: 2 The number of installments the customer has selected in payment page. Example: 3 plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Installments Merchant page Service - Response"},{"location":"installments/#installments-purchase-service-request","text":"Placeholder: Sample code for merchant page operations request For transactions being carried out under operations you have to Include the following parameters in the Operation - Request Parameters while sending to PayFort: ATTRIBUTES Description installments Alpha Mandatory max: 10 Used to specify the type of the Installments service. Possible/ expected values: YES plan_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Mandatory Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE","title":"Installments Purchase Service - Request"},{"location":"installments/#installments-purchase-service-response","text":"Placeholder: Provide sample JSON response sent from the PayFORT server. The following parameters will be returned in PayFort\u2019s Response in addition to the Operation - Response Parameters : ATTRIBUTES Description installments Alpha max: 10 Used to specify the type of the Installments service. Possible/ expected values: YES plan_code Alphanumeric Max: 8 A code that refers to the \u201cinstallments plan\u201d the customer selected from the merchant page. Example: NNNN89JJ issuer_code Alphanumeric Max: 8 A code that refers to the \u201ccard issuer\u201d the customer selected from the merchant page. Example: 12HP34SE number_of_installments Numeric Max: 2 The number of installments the customer has selected in payment page. Example: 3 Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Installments Purchase Service - Response"},{"location":"installments/#installments-hosted-checkout","text":"","title":"Installments Hosted Checkout"},{"location":"installments/#get-installments-plans-api","text":"By using Hosted Checkout you will be able to fetch various installment plan details for your various products and services as well as various issuers configured in your account for the installment service. You can use the following endpoints to setup hosted checkout service.","title":"Get Installments Plans API"},{"location":"installments/#endpoints","text":"Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"installments/#parameters-submission-type","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"installments/#get-installments-plans-api-request","text":"Placeholder: Provide the sample code for the request Include the following parameters in the Request you will send to PayFort: For input parameters please visit the section Get Installments Plans API - Request under the link Please note that you can\u2019t send these parameters (amount/ currency) separately; you should send them together or not sending them at all. If you send the amount and the currency in get plans API, you will receive AmountPerMonth parameter calculated from our side, and no need to use the formulas returned to complete the amount calculations.","title":"Get Installments Plans API - Request"},{"location":"installments/#get-installments-plans-api-response","text":"Placeholder: Provide sample JSON response The following parameters will be returned in PayFort\u2019s Response: For more details on the parameters please visit the section Get Installments Plans API - Response in the link Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Get Installments Plans API - Response"},{"location":"installments/#issuer-detail","text":"You can use the following attributes to know the details of the installment services issuers. Placeholder: Provide sample code for issuer details This parameter is a sub parameter of the installment_detail parameter, please refer the section Issuer Detail in the link for the children parameters of the issuer_detail What does each of the formula parameters mean: (amount +(amount *effective rate/100))/period Amount: The transaction amount. Effective rate: The fee_amount retrieved in the response inside the next plan_detail section Period: number_of_installment retrieved in the response inside the next plan_detail section","title":"Issuer Detail"},{"location":"installments/#plan-details","text":"If you want to fetch details of various installment plans you can use the attributes in this section and send in your request to the PayFORT server. Placeholder: provide sample code for plan details. This parameter is a sub parameter of the issuer_detail parameter, please refer the section Plan Detail in the link for the children parameters of the plan_detail :","title":"Plan Details"},{"location":"installments/#bins-details","text":"This section will help you to capture the details of the credit card that customer will use for availing the installment service. You have to use the attributes in your request to fetch the details of the credit card. Placeholder: provide sample code for bins details. This parameter is a sub parameter of the issuer_detail parameter, please refer the section Bin Detail in the link for the children parameters of the bins :","title":"Bins Details"},{"location":"installments/#get-installments-plans-api-formulas","text":"This section helps you to calculate the installment formula that would be displayed to your customers when they checkout. Following are the key formulas applicable for calculating the installments. Percentage Fees: Installments interest rate in percent (%) charged to the customer by the bank. Rate Flat: - Non Islamic: ((amount + ((amount * (fees / 100)) * months))) / months (amount + (amount* (fees / 100))) / months - Islamic: (((months * (fees / 100)) + 1) * amount) / months Rate Reducing: PMT (excel function) Fixed Fees: Installments fees in fixed amount charged to the customer by the bank. (amount + fees) / months","title":"Get Installments Plans API formulas"},{"location":"installments/#get-installments-plans-api-response_1","text":"Response Sample The following is sample of a response of an Get Installments Plans API request: { \u201cresponse_code\u201d: \u201c62000\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201csignature\u201d: \u201c9b02960d319318256efbc17cf57dbc1f7e7fd046e20e49215d0bed32a065c3ae\u201d, \u201cmerchant_identifier\u201d: \u201cbxgOIxIz\u201d, \u201caccess_code\u201d: \u201cRu8n1ciSJXWm8WFHLKsR\u201d, \u201cquery_command\u201d: \u201cGET_INSTALLMENTS_PLANS\u201d, \u201cissuer_code\u201d: \u201cfHkigRtu\u201d, \u201cinstallment_detail\u201d: { \u201cissuer_detail\u201d: [ { \u201cissuer_code\u201d: \u201cfHkigRtu\u201d, \u201cissuer_name_ar\u201d: \u201c\u0628\u0646\u0643 \u0627\u0644\u0627\u0645\u0627\u0631\u0627\u062a \u062f\u0628\u064a \u0627\u0644\u0648\u0637\u0646\u064a\u201d, \u201cissuer_name_en\u201d: \u201cEmirates NBD Egypt\u201d, \u201cterms_and_condition_ar\u201d: \u201chttp://www.emiratesnbd.com.eg/egypt-en/index.cfm/retail-banking/cards/special-offers/\u201d, \u201cterms_and_condition_en\u201d: \u201chttp://www.emiratesnbd.com.eg/egypt-en/index.cfm/retail-banking/cards/special-offers/\u201d, \u201ccountry_code\u201d: \u201cEGY\u201d, \u201cissuer_logo_ar\u201d: \u201chttps://stgstatic.payfort.com/frontend/files/logos/issuer/logo_ar_7.jpeg\u201d, \u201cissuer_logo_en\u201d: \u201chttps://stgstatic.payfort.com/frontend/files/logos/issuer/logo_en_7.jpg\u201d, \u201cbanking_system\u201d: \u201cNon Islamic\u201d, \u201cformula\u201d: \u201c((amount + ((amount * (effective rate/100)) * period))) / period\u201d, \u201cplan_details\u201d: [ { \u201cplan_code\u201d: \u201czAS4XyG2\u201d, \u201ccurrency_code\u201d: \u201cUSD\u201d, \u201cnumber_of_installment\u201d: 33, \u201cfees_type\u201d: \u201cPercentage\u201d, \u201cfees_amount\u201d: 300, \u201cprocessing_fees_type\u201d: null, \u201cprocessing_fees_amount\u201d: null, \u201crate_type\u201d: \u201cFlat\u201d, \u201cplan_merchant_type\u201d: \u201cNon Partner\u201d, \u201cplan_type\u201d: \u201cCross-Border\u201d, \u201cfee_display_value\u201d: 400, \u201cminimum_amount\u201d: 300, \u201cmaximum_amount\u201d: 33333300, \u201camountPerMonth\u201d: \u201c3.00\u201d } ], \u201cbins\u201d: [ { \u201cbin\u201d: \u201c427838\u201d, \u201ccountry_code\u201d: \u201cEGY\u201d, \u201ccurrency_code\u201d: \u201cEGP\u201d, \u201ccard_brand_code\u201d: \u201cVISA\u201d }, { \u201cbin\u201d: \u201c522025\u201d, \u201ccountry_code\u201d: \u201cEGY\u201d, \u201ccurrency_code\u201d: \u201cEGP\u201d, \u201ccard_brand_code\u201d: \u201cMaster Card\u201d }, { \u201cbin\u201d: \u201c543173\u201d, \u201ccountry_code\u201d: \u201cEGY\u201d, \u201ccurrency_code\u201d: \u201cEGP\u201d, \u201ccard_brand_code\u201d: \u201cMaster Card\u201d }, ], \u201cconfirmation_message_ar\u201d: null, \u201cdisclaimer_message_ar\u201d: null, \u201cprocessing_fees_message_ar\u201d: null, \u201cconfirmation_message_en\u201d: null, \u201cdisclaimer_message_en\u201d: null, \u201cprocessing_fees_message_en\u201d: null } ] }, \u201cstatus\u201d: \u201c62\u201d }","title":"Get Installments Plans API - Response"},{"location":"installments/#merchant-page-20-operations","text":"","title":"Merchant Page 2.0 Operations"},{"location":"installments/#endpoints_1","text":"Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"installments/#parameters-submission-type_1","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"installments/#installment-service-for-merchant-page-20-operations-request","text":"You can use the endpoints to integrate and send request for Merchant Page 2.0 operations. Placeholder: Provide sample code for merchant page 2.0 operations for installment service. Please visit the section Installment Service for Merchant Page 2.0 Operations - Request under the link for input parameters to be sent in the request. Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Installment Service For Merchant Page 2.0 Operations - Request"},{"location":"installments/#installment-service-for-merchant-page-20-operations-response","text":"Placeholder: Provide sample JSON response for merchant page 2.0 operations for installments. For more details on response parameters please visit the section Installment Service for merchant page 2.0 operations- response in the link Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-.","title":"Installment Service For Merchant Page 2.0 Operations - Response"},{"location":"installments/#installments-hosted-for-trusted-channel","text":"If you are a trusted channel partner or already a PCI compliant partner you can use the attributes provided in this section to integrate your installment service. For more details on the trusted channel partners please visit this link","title":"Installments Hosted for Trusted Channel"},{"location":"installments/#installments-hosted-for-trusted-request","text":"Placeholder: Please provide sample code for trusted channel partner request for installment. First, you need to send a [Get Instalments Plans API](https://docs.payfort.com/docs/api/build/index.html?shell#get-installments-plans-api) request; to get the instalments details. Include the [input parameters](installmentsparameters.md) under the section Installments Hosted for Trusted - Request in addition to the [Trusted Channel \u2013 Request](trustedchannelparameters.md) Parameters you will send to PayFort:","title":"Installments Hosted for Trusted \u2013 Request"},{"location":"installments/#installments-hosted-for-trusted-response","text":"Placeholder : Provide sample JSON response for Hosted for trusted channel For details on parameters of the response visit the section Installments Hosted for Trusted- Response in the link","title":"Installments Hosted for Trusted \u2013 Response"},{"location":"installments/#installments-merchant-page-style-sheet","text":"This is a list with all customizable CSS classes for Installments Merchant Page. You can use these css classes to style and design your installments merchant page. The installments-container class - responsible for the total width of the form container and the background. The receipt-container class - responsible for the receipt section you can customize / hide it by changing the CSS values The full-width class - responsible for the plans and switching the view from dropdown to a table. The credit-card-container class - responsible for the credit card form`s shape look. The error class - responsible for the error messages. The half1, half2 class - used to merge the date and CVV fields into one block or each one on block if needed. The bank class - is responsible for the bank agreement section. The floatl class - is the container of each single input field. The Pay class - responsible for the submit button. The Visa/ MasterCard classes - used to change the color of the Visa/ MasterCard colors. - You can always create multiple theme files that will enable you to switch freely and easily between them when necessary. - \u201cTheme\u201d files can be uploaded from the back-office using the Payment Page template screen.","title":"Installments Merchant Page - Style Sheet"},{"location":"installments/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"installments/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"invoicing/","text":"One to One(invoicing) Service PayFORT offers you two ways to generate invoice. You can generate invoice and payment link either through back office or through API calls. For more details on invoice generation through back office please visit the link The invoice and payment links can be generated using the API provided by the PayFORT. The Customer will be able to use this link to pay his invoices using any of the payment options that are configured for you. You can generate invoice for individual customer or you can generate invoice in batches to be sent to multiple customers. For more details on Batch invoice generation please visit the link Endpoints Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi How it works? Placeholder: Explain the working procedure of one to one invoicing service. Placeholder: Explain and add Integration Flow Diagram Parameters Submission Type REST POST request using JSON. Invoicing Service - Request Placeholder: Sample code in php/java/python/ruby/curl for invoice and payment link generation. You can check out the input parameters by visiting this link Supported Schemes Placeholder: Details for supported schemes to be added here. Go to Full API Check out our full API by visiting this link To learn more about Tokens and Tokenization process visit this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"One to One(invoicing)"},{"location":"invoicing/#one-to-oneinvoicing-service","text":"PayFORT offers you two ways to generate invoice. You can generate invoice and payment link either through back office or through API calls. For more details on invoice generation through back office please visit the link The invoice and payment links can be generated using the API provided by the PayFORT. The Customer will be able to use this link to pay his invoices using any of the payment options that are configured for you. You can generate invoice for individual customer or you can generate invoice in batches to be sent to multiple customers. For more details on Batch invoice generation please visit the link","title":"One to One(invoicing) Service"},{"location":"invoicing/#endpoints","text":"Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"invoicing/#how-it-works","text":"Placeholder: Explain the working procedure of one to one invoicing service. Placeholder: Explain and add Integration Flow Diagram","title":"How it works?"},{"location":"invoicing/#parameters-submission-type","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"invoicing/#invoicing-service-request","text":"Placeholder: Sample code in php/java/python/ruby/curl for invoice and payment link generation. You can check out the input parameters by visiting this link","title":"Invoicing Service - Request"},{"location":"invoicing/#supported-schemes","text":"Placeholder: Details for supported schemes to be added here.","title":"Supported Schemes"},{"location":"invoicing/#go-to-full-api","text":"Check out our full API by visiting this link To learn more about Tokens and Tokenization process visit this link","title":"Go to Full API"},{"location":"invoicing/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"invoicingparameters/","text":"Invoicing (One to One) Request and Response Parameters service_command Alpha Mandatory max: 20 Command. Possible/ expected values: PAYMENT_LINK Special characters: _ access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . amount Numeric Mandatory max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 100 USD=1.00 USD currency Alpha Mandatory max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha Mandatory max: 2 The invoice and the received messages language. Possible/ expected values: en / ar customer_email Alphanumeric Mandatory max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + request_expiry_date Alphanumeric Mandatory max: 25 The invoice link expiry date. Example: 2017-12-20T15:36:55+03:00 Special characters: + : - notification_type Alpha Mandatory max: 20 The way the Customer wants to use to get his notification. The Merchant can choose more than one way. * If the Customer chooses NONE with \u201cEMAIL\u201d or \u201cSMS\u201d, then the NONE will be taken as notification type. Possible/ expected values: - SMS - EMAIL - NONE Special characters: , signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a link_command Alphanumeric Optional max: 15 Link operation to be executed. Possible/ expected values: AUTHORIZATION/ PURCHASE payment_link_id Alphanumeric Optional max: 20 The ID of the generated Invoice payment link. Example: 148708392700020346 Special characters: - _ . payment_option Alpha Optional max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) order_description Alphanumeric Optional max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space customer_name Alpha Optional max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space customer_phone Numeric Optional max: 19 The Customer mobile number. It\u2019s mandatory when selecting SMS as notification type. Example: 00962797219966 return_url Alphanumeric Optional max: 400 The URL of the Merchant\u2019s page to be redirected to when the order is processed. Example: http://www.merchant.com Special characters:$ ! = ? # & _ - / : . If the Customer chooses NONE with \u201cEMAIL\u201d or \u201cSMS\u201d, then the NONE will be taken as notification type. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Invoicing Service - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: PAYMENT_LINK access_code Alphanumeric max: 20 Access code. Possible/ expected Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique order number. Example: XYZ2939-yu898 amount Numeric max: 10 The transaction\u2019s amount. Example: 100 USD=1.00 USD currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha max: 2 The invoice and received messages language. Possible/ expected values: en / ar customer_email Alphanumeric max: 254 The customer\u2019s email. Example: customer@domain.com request_expiry_date Alphanumeric max: 25 The invoice link expiry date. Example: 2017-12-20T15:36:55+03:00 notification_type Alpha max: 20 The way the Customer wants to use to get his notification. The Merchant can choose more than one way. *If the Customer chooses NONE with \u201cEMAIL\u201d or \u201cSMS\u201d, then the NONE will be taken as notification type. Possible/ expected values: - SMS - EMAIL - NONE signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a link_command Alphanumeric max: 15 Link operation to be executed. Possible/ expected values: AUTHORIZATION/ PURCHASE payment_link_id Alphanumeric max: 20 The ID of the generated Invoice payment link. Example: 148708392700020346 payment_link Alphanumeric max: 150 The generated invoice link notified to the Customer by one of the notification types, used to complete the payment process. Example: https://checkout.payfort.com/dfc3d762 payment_option Alpha max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) order_description Alphanumeric max: 150 It holds the description of the order. Example: iPhone 6-S customer_name Alpha max: 40 The customer\u2019s name. Example: John Smith response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code is made up of five digits, the first 2 digits refer to the request status , and the last 3 digits refer to the request messages . Example: 20064 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: statuses customer_phone Numeric max: 19 The Customer mobile number. Example: 00962797219966 return_url Alphanumeric max: 400 The URL of the Merchant\u2019s page to be redirected to when the order is processed. Example: http://www.merchant.com Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. After completing the checkout process through the payment link; the following list of parameters will be returned under the \u201cDirect Transaction Feedback\u201d: To find your \u201cDirect Transaction Feedback\u201d from the back office; follow these steps: Integration Settings \u2192 Technical Settings \u2192 Redirection Channel \u2192 you will find your \u201cDirect Transaction Feedback\u201d. ATTRIBUTES Description command Alpha Max: 20 A command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 amount Numeric Max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Max: 254 The customer\u2019s email. Example: customer1@domain.com signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a payment_link_id Alphanumeric max: 20 The ID of the generated Invoice payment link. Example: 148708392700020346 token_name Alphanumeric max: 100 The Token received from the Tokenization process. Example: Op9Vmp fort_id Numeric Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 payment_option Alpha Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) sadad_olp Alphanumeric Max: 12 SADAD Online Payment ID Alias. The merchant sends this value if the OLP ID is collected on the merchant checkout. Example: SABBP2P_UAT2 eci Alpha Max: 16 The E-commerce indicator. Possible/ expected values: - ECOMMERCE - MOTO order_description Alphanumeric Max: 150 It holds the description of the order. Example: iPhone 6-S customer_ip Alphanumeric max: 45 It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf customer_name Alpha Max: 40 The customer\u2019s name. Example: John Smith merchant_extra Alphanumeric Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra1 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra2 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra3 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra4 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra5 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith authorization_code Alphanumeric Max: 100 The authorization code returned from the 3rd party. Example: P1000000000000372136 response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses card_holder_name Alpha Max: 50 The card holder name. Example: John Smith expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Max: 19 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 remember_me Alpha Max: 2 This parameter provides you with an indication to whether to save this token for the user based on the user selection. Possible/ expected values: NO phone_number Alphanumeric max: 19 The customer\u2019s phone number. Example: 00962797219966 settlement_reference Alphanumeric max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Go to Full API Check out our full API by visiting this link To learn more about Tokens and Tokenization process visit this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Invoicing Parameters"},{"location":"invoicingparameters/#invoicing-one-to-one-request-and-response-parameters","text":"service_command Alpha Mandatory max: 20 Command. Possible/ expected values: PAYMENT_LINK Special characters: _ access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . amount Numeric Mandatory max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 100 USD=1.00 USD currency Alpha Mandatory max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha Mandatory max: 2 The invoice and the received messages language. Possible/ expected values: en / ar customer_email Alphanumeric Mandatory max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + request_expiry_date Alphanumeric Mandatory max: 25 The invoice link expiry date. Example: 2017-12-20T15:36:55+03:00 Special characters: + : - notification_type Alpha Mandatory max: 20 The way the Customer wants to use to get his notification. The Merchant can choose more than one way. * If the Customer chooses NONE with \u201cEMAIL\u201d or \u201cSMS\u201d, then the NONE will be taken as notification type. Possible/ expected values: - SMS - EMAIL - NONE Special characters: , signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a link_command Alphanumeric Optional max: 15 Link operation to be executed. Possible/ expected values: AUTHORIZATION/ PURCHASE payment_link_id Alphanumeric Optional max: 20 The ID of the generated Invoice payment link. Example: 148708392700020346 Special characters: - _ . payment_option Alpha Optional max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) order_description Alphanumeric Optional max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space customer_name Alpha Optional max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space customer_phone Numeric Optional max: 19 The Customer mobile number. It\u2019s mandatory when selecting SMS as notification type. Example: 00962797219966 return_url Alphanumeric Optional max: 400 The URL of the Merchant\u2019s page to be redirected to when the order is processed. Example: http://www.merchant.com Special characters:$ ! = ? # & _ - / : . If the Customer chooses NONE with \u201cEMAIL\u201d or \u201cSMS\u201d, then the NONE will be taken as notification type. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Invoicing (One to One) Request and Response Parameters"},{"location":"invoicingparameters/#invoicing-service-response","text":"The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: PAYMENT_LINK access_code Alphanumeric max: 20 Access code. Possible/ expected Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique order number. Example: XYZ2939-yu898 amount Numeric max: 10 The transaction\u2019s amount. Example: 100 USD=1.00 USD currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha max: 2 The invoice and received messages language. Possible/ expected values: en / ar customer_email Alphanumeric max: 254 The customer\u2019s email. Example: customer@domain.com request_expiry_date Alphanumeric max: 25 The invoice link expiry date. Example: 2017-12-20T15:36:55+03:00 notification_type Alpha max: 20 The way the Customer wants to use to get his notification. The Merchant can choose more than one way. *If the Customer chooses NONE with \u201cEMAIL\u201d or \u201cSMS\u201d, then the NONE will be taken as notification type. Possible/ expected values: - SMS - EMAIL - NONE signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a link_command Alphanumeric max: 15 Link operation to be executed. Possible/ expected values: AUTHORIZATION/ PURCHASE payment_link_id Alphanumeric max: 20 The ID of the generated Invoice payment link. Example: 148708392700020346 payment_link Alphanumeric max: 150 The generated invoice link notified to the Customer by one of the notification types, used to complete the payment process. Example: https://checkout.payfort.com/dfc3d762 payment_option Alpha max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) order_description Alphanumeric max: 150 It holds the description of the order. Example: iPhone 6-S customer_name Alpha max: 40 The customer\u2019s name. Example: John Smith response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code is made up of five digits, the first 2 digits refer to the request status , and the last 3 digits refer to the request messages . Example: 20064 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: statuses customer_phone Numeric max: 19 The Customer mobile number. Example: 00962797219966 return_url Alphanumeric max: 400 The URL of the Merchant\u2019s page to be redirected to when the order is processed. Example: http://www.merchant.com Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. After completing the checkout process through the payment link; the following list of parameters will be returned under the \u201cDirect Transaction Feedback\u201d: To find your \u201cDirect Transaction Feedback\u201d from the back office; follow these steps: Integration Settings \u2192 Technical Settings \u2192 Redirection Channel \u2192 you will find your \u201cDirect Transaction Feedback\u201d. ATTRIBUTES Description command Alpha Max: 20 A command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 amount Numeric Max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar customer_email Alphanumeric Max: 254 The customer\u2019s email. Example: customer1@domain.com signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a payment_link_id Alphanumeric max: 20 The ID of the generated Invoice payment link. Example: 148708392700020346 token_name Alphanumeric max: 100 The Token received from the Tokenization process. Example: Op9Vmp fort_id Numeric Max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 payment_option Alpha Max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) sadad_olp Alphanumeric Max: 12 SADAD Online Payment ID Alias. The merchant sends this value if the OLP ID is collected on the merchant checkout. Example: SABBP2P_UAT2 eci Alpha Max: 16 The E-commerce indicator. Possible/ expected values: - ECOMMERCE - MOTO order_description Alphanumeric Max: 150 It holds the description of the order. Example: iPhone 6-S customer_ip Alphanumeric max: 45 It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf customer_name Alpha Max: 40 The customer\u2019s name. Example: John Smith merchant_extra Alphanumeric Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra1 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra2 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra3 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra4 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra5 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith authorization_code Alphanumeric Max: 100 The authorization code returned from the 3rd party. Example: P1000000000000372136 response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses card_holder_name Alpha Max: 50 The card holder name. Example: John Smith expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Max: 19 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 remember_me Alpha Max: 2 This parameter provides you with an indication to whether to save this token for the user based on the user selection. Possible/ expected values: NO phone_number Alphanumeric max: 19 The customer\u2019s phone number. Example: 00962797219966 settlement_reference Alphanumeric max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898","title":"Invoicing Service - Response"},{"location":"invoicingparameters/#go-to-full-api","text":"Check out our full API by visiting this link To learn more about Tokens and Tokenization process visit this link","title":"Go to Full API"},{"location":"invoicingparameters/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"iossdk/","text":"image source : medium.com Integrate iOS SDK The PayFort iOS SDK makes it faster and easy to build a perfect payment experience in your iOS app. PayFort offers powerful and customizable UI screens and elements that can be used out-of-the-box to collect your users\u2019 payment details. We also expose the low-level APIs that power those UIs so that you can build fully custom experiences. About the Software Supported Platforms PayFort iOS SDK is supported on all the apple devices running iOS 8 and above. Localization The FORT Mobile SDK supports both English and Arabic languages. Screen Orientation Portrait is the only orientation supported within the FORT Mobile SDK. Supported Payment Methods Through the first version of the FORT Mobile SDK, the Merchant has the ability to process a CREDIT CARD transactions only. Supported Payment Options The supported credit card payment options are VISA , MASTERCARD , American Express (AMEX) , MADA and MEEZA . Mobile SDK integration workflow image source : medium.com placeholder for Integration flow description and Integration flow diagram. Project Setup Include the PayFORT iOS SDK to your Xcode Project The following steps describe how to setup an Xcode project for iOS development environment using the FORT iOS SDK. The prerequisites are the apple machine. You can chose to write the program either in Objective-C or in Swift programming which is the latest programming by the apple development community. The below steps describes the project setup for both objective-c and swift programming. Placeholder: please provide pics for every step described in this section. Download the sdk from this link and extract it. Drag the PayFortSDK.framework & PayFortSDK.bundle to Frameworks in Project Navigator. Create a new group Frameworks if it does not exist: Choose Create groups for any added folders. Make Sure to select Copy files if needed. Set -ObjC in the Other Linker Flags in the Target \u2192 Build Settings Tab. For Swift Projects add the following code In your Bridge-Header.h: #import <PayFortSDK/PayFortSDK.h> Ensure the option 'Link With Standard Libraries' is set to Yes or just drag the PayFortSDK to Embedded Binaries in the general tab in the project settings. In Xcode, click your project\u2019s .plist file and select Open As \u2192 Source Code. Insert the following XML snippet into the body of your file just before the final: </dict>element <key>NSAppTransportSecurity</key> <dict> <key>NSAllowsArbitraryLoads</key><true/> </dict> To ensure that the application is not disconnected go to background make sure to add this code:Objective C (void)applicationDidEnterBackground:(UIApplication *)application { __block UIBackgroundTaskIdentifier backgroundTask; backgroundTask = [application beginBackgroundTaskWithExpirationHandler: ^ { [application endBackgroundTask:backgroundTask]; backgroundTask = UIBackgroundTaskInvalid; }]; Swift func applicationDidEnterBackground(_ application: UIApplication) { var bgTask: UIBackgroundTaskIdentifier = 0 bgTask = application.beginBackgroundTask(expirationHandler: { application.endBackgroundTask(bgTask) bgTask = UIBackgroundTaskInvalid }) } Installation of PayFORT SDK When you register for Payfort, you will receive separate keys for testing and production environment. Placeholder: please provide pics for every step described in this section. Import the PayFort Library. #import <PayFortSDK/PayFortSDK.h> Initialize PayFortController with targeted environment, You set the target environment by setting one the two ENUM KPayFortEnviromentSandBox or KPayFortEnviromentProduction . Objective C PayFortController *payFort = [[PayFortControlleralloc]initWithEnviroment:KPayFortEnviromentSandBox]; Swift let payFort = PayFortController.init(enviroment: KPayFortEnviromentSandBox) Set Dictionary contain all keys and values for SDK. Objective C NSMutableDictionary *request = [[NSMutableDictionary alloc]init]; [request setValue:@\u201c10000\u201d forKey:@\u201camount\u201d]; [request setValue:@\u201cAUTHORIZATION\u201d forKey:@\u201ccommand\u201d]; [request setValue:@\u201cUSD\u201d forKey:@\u201ccurrency\u201d]; [request setValue:@ \u201cemail@domain.com\u201d forKey:@\u201ccustomer_email\u201d]; [request setValue:@\u201cen\u201d forKey:@\u201clanguage\u201d]; [request setValue:@\u201c112233682686\u201d forKey:@\u201cmerchant_reference\u201d]; [request setValue:`SDK TOKEN GOES HERE` forKey:@\u201csdk_token\u201d]; [request setValue:@\u201c\u201d forKey:@\u201cpayment_option\u201d]; [request setValue:@\u201cgr66zzwW9\u201d forKey:@\u201ctoken_name\"]; Swift let request = NSMutableDictionary.init() request.setValue(\u201c1000\u201d, forKey: \u201camount\u201d) request.setValue(\u201cAUTHORIZATION\u201d, forKey: \u201ccommand\u201d) request.setValue(\u201cUSD\u201d, forKey: \u201ccurrency\u201d) request.setValue(\u201cemail@domain.com\u201d, forKey: \u201ccustomer_email\u201d) request.setValue(\u201cen\u201d, forKey: \u201clanguage\u201d) request.setValue(\u201c112233682686\u201d, forKey: \u201cmerchant_reference\u201d) request.setValue(\u201ctoken\u201d , forKey: \u201csdk_token\u201d) Call PayFort and Response callback Objective C [payFort callPayFortWithRequest:request currentViewController:self Success:^(NSDictionary *requestDic, NSDictionary *responeDic) { NSLog(@\u201cSuccess\u201d); NSLog(@\u201cresponeDic=%@\u201d,responeDic); } Canceled:^(NSDictionary *requestDic, NSDictionary *responeDic) { NSLog(@\u201cCanceled\u201d); NSLog(@\u201cresponeDic=%@\u201d,responeDic); } Faild:^(NSDictionary *requestDic, NSDictionary *responeDic, NSString *message) { NSLog(@\u201cFaild\u201d); NSLog(@\u201cresponeDic=%@\u201d,responeDic); }]; Swift PayFort.callPayFort(withRequest: request, currentViewController: self, success: { (requestDic, responeDic) in print(\u201csuccess\u201d) }, canceled: { (requestDic, responeDic) in print(\u201ccanceled\u201d) }, faild: { (requestDic, responeDic, message) in print(\u201cfaild\u201d) }) SDK - Response Once you send your SDK request to PayFORT you will receive a response which will be a dictionary which displays the request parameters being sent in addition to the status, response message and response code. The response(along with message success, failed or cancelled) will be already in the registered call back handler. The response can be viewed in the log as shown below for both objective C and swift programming: Objective C [payFort callPayFortWithRequest:request currentViewController:self Success:^(NSDictionary *requestDic, NSDictionary *responeDic) { NSLog(@\u201cSuccess\u201d); NSLog(@\u201crequestDic=%@\u201d,requestDic); NSLog(@\u201cresponeDic=%@\u201d,responeDic); } Canceled:^(NSDictionary *requestDic, NSDictionary *responeDic) { NSLog(@\u201cCanceled\u201d); NSLog(@\u201crequestDic=%@\u201d,requestDic); NSLog(@\u201cresponeDic=%@\u201d,responeDic); } Faild:^(NSDictionary *requestDic, NSDictionary *responeDic, NSString *message) { NSLog(@\u201cFaild\u201d); NSLog(@\u201crequestDic=%@\u201d,requestDic); NSLog(@\u201cresponeDic=%@\u201d,responeDic); NSLog(@\u201cmessage=%@\u201d,message); }]; Swift PayFort.callPayFort(withRequest: request, currentViewController: self, success: { (requestDic, responeDic) in print(\u201csuccess\u201d) print(\u201cresponeDic=(responeDic)\u201d) print(\u201cresponeDic=(responeDic)\u201d) }, canceled: { (requestDic, responeDic) in print(\u201ccanceled\u201d) print(\u201crequestDic=(requestDic)\u201d) print(\u201cresponeDic=(responeDic)\u201d) }, faild: { (requestDic, responeDic, message) in print(\u201cfaild\u201d) print(\u201crequestDic=(requestDic)\u201d) print(\u201cresponeDic=(responeDic)\u201d) print(\u201cmessage=(message)\u201d) }) If you do not want to investigate logs for response message you have the option to show response in the view directly in an elegant manner by displaying the response results as success or failed. You can check the sample code in objective c and swift programming to display the response message as shown below: Objective C PayFort.IsShowResponsePage = YES; Swift PayFort.IsShowResponsePage = true; Hidden PayFort loading There is an option to hide loading view when SDK initializes the connection request. You can disable the loading view by setting HideLoading option to yes or true as shown in the sample code. If you are using Objective C then you have to set it to yes and if you are using swift you have to set it to true. Please refer to below piece of code. Objective C PayFort.HideLoading = YES; Swift PayFort.HideLoading = true; Custom Payment Designing The payment view is what your customer will see when they open your merchant app on their cellphone and payment view will help them to make payment through your application. You can create your own custom UI theme for the payment view by the following ways: Create your nibFile .xib and set the name of Arabic xib same name with English one with suffix -ar. Link the xib with PayFortView and bind all the IBOutlets in interface section as shown in the code example below IBOutlet UILabel *titleLbl; IBOutlet UIButton *BackBtn; IBOutlet UILabel *PriceLbl; IBOutlet JVFloatLabeledTextField *CardNameTxt; IBOutlet JVFloatLabeledTextField *CardNumberTxt; IBOutlet JVFloatLabeledTextField *CVCNumberTxt; IBOutlet JVFloatLabeledTextField *ExpDateTxt; IBOutlet UILabel *cardNumberErrorlbl; IBOutlet UILabel *cVCNumberErrorlbl; IBOutlet UILabel *expDateErrorlbl; IBOutlet UISwitch *savedCardSwitch; IBOutlet UIButton *paymentBtn; IBOutlet UILabel *saveCardLbl; IBOutlet UIImageView *imageCard; Placeholder: please provide UI flow diagram alongwith iphone screenshot for the same. Assign new created xib file to PayFort Controller. [payFort setPayFortCustomViewNib:@\u201cPayFortView2\u201d]; If you call Arabic view and the Arabic view does not exist then the application will crash. Don\u2019t forget to set the custom view field in the identity inspector. PayFORT iOS SDK Operations Once you have done the project setup and installation, you will be performing the Operations for authorization and purchase done through mobile application. These operations helps your mobile application to process Authorization and Purchase operations. You will be sending the request parameters in your code which will be sent to the PayFORT server and your application will receive response from the PayFORT server. Placeholder for operations' ios sample code. Placeholder for sample response from the PayFORT server. You can check out the request and response parameters by visiting this link . Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Integrate iOS SDK"},{"location":"iossdk/#integrate-ios-sdk","text":"The PayFort iOS SDK makes it faster and easy to build a perfect payment experience in your iOS app. PayFort offers powerful and customizable UI screens and elements that can be used out-of-the-box to collect your users\u2019 payment details. We also expose the low-level APIs that power those UIs so that you can build fully custom experiences.","title":"Integrate iOS SDK"},{"location":"iossdk/#about-the-software","text":"","title":"About the Software"},{"location":"iossdk/#supported-platforms","text":"PayFort iOS SDK is supported on all the apple devices running iOS 8 and above.","title":"Supported Platforms"},{"location":"iossdk/#localization","text":"The FORT Mobile SDK supports both English and Arabic languages.","title":"Localization"},{"location":"iossdk/#screen-orientation","text":"Portrait is the only orientation supported within the FORT Mobile SDK.","title":"Screen Orientation"},{"location":"iossdk/#supported-payment-methods","text":"Through the first version of the FORT Mobile SDK, the Merchant has the ability to process a CREDIT CARD transactions only.","title":"Supported Payment Methods"},{"location":"iossdk/#supported-payment-options","text":"The supported credit card payment options are VISA , MASTERCARD , American Express (AMEX) , MADA and MEEZA .","title":"Supported Payment Options"},{"location":"iossdk/#mobile-sdk-integration-workflow","text":"image source : medium.com placeholder for Integration flow description and Integration flow diagram.","title":"Mobile SDK integration workflow"},{"location":"iossdk/#project-setup","text":"Include the PayFORT iOS SDK to your Xcode Project The following steps describe how to setup an Xcode project for iOS development environment using the FORT iOS SDK. The prerequisites are the apple machine. You can chose to write the program either in Objective-C or in Swift programming which is the latest programming by the apple development community. The below steps describes the project setup for both objective-c and swift programming. Placeholder: please provide pics for every step described in this section. Download the sdk from this link and extract it. Drag the PayFortSDK.framework & PayFortSDK.bundle to Frameworks in Project Navigator. Create a new group Frameworks if it does not exist: Choose Create groups for any added folders. Make Sure to select Copy files if needed. Set -ObjC in the Other Linker Flags in the Target \u2192 Build Settings Tab. For Swift Projects add the following code In your Bridge-Header.h: #import <PayFortSDK/PayFortSDK.h> Ensure the option 'Link With Standard Libraries' is set to Yes or just drag the PayFortSDK to Embedded Binaries in the general tab in the project settings. In Xcode, click your project\u2019s .plist file and select Open As \u2192 Source Code. Insert the following XML snippet into the body of your file just before the final: </dict>element <key>NSAppTransportSecurity</key> <dict> <key>NSAllowsArbitraryLoads</key><true/> </dict> To ensure that the application is not disconnected go to background make sure to add this code:Objective C (void)applicationDidEnterBackground:(UIApplication *)application { __block UIBackgroundTaskIdentifier backgroundTask; backgroundTask = [application beginBackgroundTaskWithExpirationHandler: ^ { [application endBackgroundTask:backgroundTask]; backgroundTask = UIBackgroundTaskInvalid; }]; Swift func applicationDidEnterBackground(_ application: UIApplication) { var bgTask: UIBackgroundTaskIdentifier = 0 bgTask = application.beginBackgroundTask(expirationHandler: { application.endBackgroundTask(bgTask) bgTask = UIBackgroundTaskInvalid }) }","title":"Project Setup"},{"location":"iossdk/#installation-of-payfort-sdk","text":"When you register for Payfort, you will receive separate keys for testing and production environment. Placeholder: please provide pics for every step described in this section. Import the PayFort Library. #import <PayFortSDK/PayFortSDK.h> Initialize PayFortController with targeted environment, You set the target environment by setting one the two ENUM KPayFortEnviromentSandBox or KPayFortEnviromentProduction . Objective C PayFortController *payFort = [[PayFortControlleralloc]initWithEnviroment:KPayFortEnviromentSandBox]; Swift let payFort = PayFortController.init(enviroment: KPayFortEnviromentSandBox) Set Dictionary contain all keys and values for SDK. Objective C NSMutableDictionary *request = [[NSMutableDictionary alloc]init]; [request setValue:@\u201c10000\u201d forKey:@\u201camount\u201d]; [request setValue:@\u201cAUTHORIZATION\u201d forKey:@\u201ccommand\u201d]; [request setValue:@\u201cUSD\u201d forKey:@\u201ccurrency\u201d]; [request setValue:@ \u201cemail@domain.com\u201d forKey:@\u201ccustomer_email\u201d]; [request setValue:@\u201cen\u201d forKey:@\u201clanguage\u201d]; [request setValue:@\u201c112233682686\u201d forKey:@\u201cmerchant_reference\u201d]; [request setValue:`SDK TOKEN GOES HERE` forKey:@\u201csdk_token\u201d]; [request setValue:@\u201c\u201d forKey:@\u201cpayment_option\u201d]; [request setValue:@\u201cgr66zzwW9\u201d forKey:@\u201ctoken_name\"]; Swift let request = NSMutableDictionary.init() request.setValue(\u201c1000\u201d, forKey: \u201camount\u201d) request.setValue(\u201cAUTHORIZATION\u201d, forKey: \u201ccommand\u201d) request.setValue(\u201cUSD\u201d, forKey: \u201ccurrency\u201d) request.setValue(\u201cemail@domain.com\u201d, forKey: \u201ccustomer_email\u201d) request.setValue(\u201cen\u201d, forKey: \u201clanguage\u201d) request.setValue(\u201c112233682686\u201d, forKey: \u201cmerchant_reference\u201d) request.setValue(\u201ctoken\u201d , forKey: \u201csdk_token\u201d) Call PayFort and Response callback Objective C [payFort callPayFortWithRequest:request currentViewController:self Success:^(NSDictionary *requestDic, NSDictionary *responeDic) { NSLog(@\u201cSuccess\u201d); NSLog(@\u201cresponeDic=%@\u201d,responeDic); } Canceled:^(NSDictionary *requestDic, NSDictionary *responeDic) { NSLog(@\u201cCanceled\u201d); NSLog(@\u201cresponeDic=%@\u201d,responeDic); } Faild:^(NSDictionary *requestDic, NSDictionary *responeDic, NSString *message) { NSLog(@\u201cFaild\u201d); NSLog(@\u201cresponeDic=%@\u201d,responeDic); }]; Swift PayFort.callPayFort(withRequest: request, currentViewController: self, success: { (requestDic, responeDic) in print(\u201csuccess\u201d) }, canceled: { (requestDic, responeDic) in print(\u201ccanceled\u201d) }, faild: { (requestDic, responeDic, message) in print(\u201cfaild\u201d) })","title":"Installation of PayFORT SDK"},{"location":"iossdk/#sdk-response","text":"Once you send your SDK request to PayFORT you will receive a response which will be a dictionary which displays the request parameters being sent in addition to the status, response message and response code. The response(along with message success, failed or cancelled) will be already in the registered call back handler. The response can be viewed in the log as shown below for both objective C and swift programming: Objective C [payFort callPayFortWithRequest:request currentViewController:self Success:^(NSDictionary *requestDic, NSDictionary *responeDic) { NSLog(@\u201cSuccess\u201d); NSLog(@\u201crequestDic=%@\u201d,requestDic); NSLog(@\u201cresponeDic=%@\u201d,responeDic); } Canceled:^(NSDictionary *requestDic, NSDictionary *responeDic) { NSLog(@\u201cCanceled\u201d); NSLog(@\u201crequestDic=%@\u201d,requestDic); NSLog(@\u201cresponeDic=%@\u201d,responeDic); } Faild:^(NSDictionary *requestDic, NSDictionary *responeDic, NSString *message) { NSLog(@\u201cFaild\u201d); NSLog(@\u201crequestDic=%@\u201d,requestDic); NSLog(@\u201cresponeDic=%@\u201d,responeDic); NSLog(@\u201cmessage=%@\u201d,message); }]; Swift PayFort.callPayFort(withRequest: request, currentViewController: self, success: { (requestDic, responeDic) in print(\u201csuccess\u201d) print(\u201cresponeDic=(responeDic)\u201d) print(\u201cresponeDic=(responeDic)\u201d) }, canceled: { (requestDic, responeDic) in print(\u201ccanceled\u201d) print(\u201crequestDic=(requestDic)\u201d) print(\u201cresponeDic=(responeDic)\u201d) }, faild: { (requestDic, responeDic, message) in print(\u201cfaild\u201d) print(\u201crequestDic=(requestDic)\u201d) print(\u201cresponeDic=(responeDic)\u201d) print(\u201cmessage=(message)\u201d) }) If you do not want to investigate logs for response message you have the option to show response in the view directly in an elegant manner by displaying the response results as success or failed. You can check the sample code in objective c and swift programming to display the response message as shown below: Objective C PayFort.IsShowResponsePage = YES; Swift PayFort.IsShowResponsePage = true;","title":"SDK - Response"},{"location":"iossdk/#hidden-payfort-loading","text":"There is an option to hide loading view when SDK initializes the connection request. You can disable the loading view by setting HideLoading option to yes or true as shown in the sample code. If you are using Objective C then you have to set it to yes and if you are using swift you have to set it to true. Please refer to below piece of code. Objective C PayFort.HideLoading = YES; Swift PayFort.HideLoading = true;","title":"Hidden PayFort loading"},{"location":"iossdk/#custom-payment-designing","text":"The payment view is what your customer will see when they open your merchant app on their cellphone and payment view will help them to make payment through your application. You can create your own custom UI theme for the payment view by the following ways: Create your nibFile .xib and set the name of Arabic xib same name with English one with suffix -ar. Link the xib with PayFortView and bind all the IBOutlets in interface section as shown in the code example below IBOutlet UILabel *titleLbl; IBOutlet UIButton *BackBtn; IBOutlet UILabel *PriceLbl; IBOutlet JVFloatLabeledTextField *CardNameTxt; IBOutlet JVFloatLabeledTextField *CardNumberTxt; IBOutlet JVFloatLabeledTextField *CVCNumberTxt; IBOutlet JVFloatLabeledTextField *ExpDateTxt; IBOutlet UILabel *cardNumberErrorlbl; IBOutlet UILabel *cVCNumberErrorlbl; IBOutlet UILabel *expDateErrorlbl; IBOutlet UISwitch *savedCardSwitch; IBOutlet UIButton *paymentBtn; IBOutlet UILabel *saveCardLbl; IBOutlet UIImageView *imageCard; Placeholder: please provide UI flow diagram alongwith iphone screenshot for the same. Assign new created xib file to PayFort Controller. [payFort setPayFortCustomViewNib:@\u201cPayFortView2\u201d]; If you call Arabic view and the Arabic view does not exist then the application will crash. Don\u2019t forget to set the custom view field in the identity inspector.","title":"Custom Payment Designing"},{"location":"iossdk/#payfort-ios-sdk-operations","text":"Once you have done the project setup and installation, you will be performing the Operations for authorization and purchase done through mobile application. These operations helps your mobile application to process Authorization and Purchase operations. You will be sending the request parameters in your code which will be sent to the PayFORT server and your application will receive response from the PayFORT server. Placeholder for operations' ios sample code. Placeholder for sample response from the PayFORT server. You can check out the request and response parameters by visiting this link .","title":"PayFORT iOS SDK Operations"},{"location":"iossdk/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"iossdk/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"iossdkoperations/","text":"iOS SDK Operations command (String, mandatory) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric, mandatory) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. sdk_token (alphanumeric, mandatory) Maximum Length Example Description 100 Dwp78q3 An SDK Token to enable using the FORT Mobile SDK. payment_option (String, optional) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String, optional) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric, optional) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String, optional) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric, optional) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha, optional) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric, optional) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. SDK Operations response command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. customer_email (alphanumeric) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. fort_id (alphanumeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. sdk_token (alphanumeric) Maximum Length Example Description 100 Dwp78q3 An SDK Token to enable using the FORT Mobile SDK. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. authorization_code (alphanumeric) Maximum Length Example Description 100 P1000000000000372136 The authorization code returned from the 3rd party. order_description (Alphanumeric) Maximum Length Example Special Characters Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. response_message (Alphanumeric) Maximum Length Possible/Expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . customer_ip (Alphanumeric) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 16 400555 * 0001 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. status (numeric) Maximum Length Possible/Expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. merchant_extra (alphanumeric) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. phone_number (numeric) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"iOS SDK Parameters"},{"location":"iossdkoperations/#ios-sdk-operations","text":"command (String, mandatory) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric, mandatory) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. sdk_token (alphanumeric, mandatory) Maximum Length Example Description 100 Dwp78q3 An SDK Token to enable using the FORT Mobile SDK. payment_option (String, optional) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String, optional) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric, optional) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String, optional) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric, optional) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha, optional) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric, optional) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"iOS SDK Operations"},{"location":"iossdkoperations/#sdk-operations-response","text":"command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. customer_email (alphanumeric) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. fort_id (alphanumeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. sdk_token (alphanumeric) Maximum Length Example Description 100 Dwp78q3 An SDK Token to enable using the FORT Mobile SDK. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. authorization_code (alphanumeric) Maximum Length Example Description 100 P1000000000000372136 The authorization code returned from the 3rd party. order_description (Alphanumeric) Maximum Length Example Special Characters Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. response_message (Alphanumeric) Maximum Length Possible/Expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . customer_ip (Alphanumeric) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 16 400555 * 0001 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. status (numeric) Maximum Length Possible/Expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. merchant_extra (alphanumeric) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. phone_number (numeric) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"SDK Operations response"},{"location":"lendservice/","text":"PayFort has partnered with ValU in Egypt to offer consumer financing services. Now your customer's can purchase on short-term financing and repay the amount over a specific installment plan at an interest rate offered by ValU. Its simple and secure financing platform. How it works? Customer verification Your site sends request to verify whether the customer is a ValU registered customer or not. The customer's phone number is verified against the ValU registered user database. Based on the customer's phone number ValU's system validates whether customer is registered on its platform or not. OTP Generation If your customer is already registered on the ValU' platform then on the checkout page the customer will provide the phone number. The ValU will generate OTP code and send it to the customer via SMS. Verify OTP Once the customer fills the OTP in the checkout page it is verified. Purchase Once OTP is verified the customer can proceed to purchase the selected items. Your site should be integrated with ValU consumer finance Your customer should be registered with ValU's platform in order to have this benefit of installments Endpoints Use the below Endpoints for testing your integration and going live. Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Parameter Submission Type For All Request Submission REST POST request using JSON is sent for OTP generation request submission. Customer Verification The very first step in the ValU integration is the customer verification. Customer Verification Request Sample Here is the sample JSON based customer verification request that you need to send to PayFort { \"service_command\":\"CUSTOMER_VERIFY\", \"merchant_reference\":\"XYZ9239-yu898\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"language\":\"en\", \"payment_option\":\"VALU\", \"phone_number\":\"00008557694\", \"signature\":\"54efbd76bd644e9ef237c39137bf5d2304dc1bfdf6f6302065b448f2456a07a7\" } Customer Verification Response Sample Here is the sample of JSON based customer verification response that you will receive from PayFort { \"response_code\":\"90000\", \"response_message\":\"Success\", \"service_command\":\"CUSTOMER_VERIFY\", \"signature\":\"27c1303138f8718e56f311d1b3d823b5a644e6bcd4fac43d5454955b13b5b337\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ2939-yu898\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"payment_option\":\"VALU\", \"language\":\"en\", \"phone_number\":\"00008557694\", \"status\":\"90\" } OTP Generation For the customer already registered on the ValU platform, they need to provide their phone number on your site's check out page. After phone number is added, OTP would be generated by the ValU platform and the same would be provided to your customer through SMS. Use the Endpoints provided on this page to test your OTP generation process and also to go live. OTP Generation Request Sample Here is the sample JSON based OTP generation request sample. Request sent to PayFort must also include the product parameters as shown here. { \"merchant_reference\":\"XYZ9239-yu898\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"signature\":\"fb1a8978eff0df5700007f3a0ca7964f61eb4b3c17de0a43029851b84687699d\", \"service_command\":\"OTP_GENERATE\", \"language\":\"en\", \"payment_option\":\"VALU\", \"phone_number\":\"00008557694\", \"merchant_order_id\":\"Valu123\", \"amount\":\"10000\", \"currency\":\"EGP\", \"products\":[ { \"product_name\":\"iphone\", \"product_price\":\"10000\", \"product_category\":\"phone\" } ] } OTP Generation Response Sample Here is the sample JSON based OTP generation response sample { \"transaction_id\":\"240719641384\", \"amount\":\"10000\", \"currency\":\"EGP\", \"response_code\":\"88000\", \"merchant_order_id\":\"Valu123\", \"signature\":\"2304c9a011630db5286712903e7877a53aa96aa7cfe2151fd7c6cc350ec38c12\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"payment_option\":\"VALU\", \"language\":\"en\", \"response_message\":\"Success\", \"service_command\":\"OTP_GENERATE\", \"merchant_reference\":\"XYZ2939-yu898\", \"total_down_payment\":\"1200\", \"phone_number\":\"00008557694\", \"otp_status\":\"1\", \"tenure\":\"6-9-12-15-18\", \"status\":\"88\" } OTP Verification Once the customer receives OTP through SMS, they will provide the same on your site's checkout page. This OTP is then verified against the ValU server Use the Endpoints provided on this page to test your OTP verification process and also to go live. OTP Verification Request Sample Inorder to send OTP verification request you can refer to the sample as shown below { \"signature\":\"d5c9c93166c34efbf72c71c9f780ce7bc336f68f9d35d63dba014175fd44af58\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239-yu898\", \"merchant_order_id\":\"Valu123\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"language\":\"en\", \"amount\":\"1000\", \"currency\":\"EGP\", \"payment_option\":\"VALU\", \"service_command\":\"OTP_VERIFY\", \"total_downpayment\":1200, \"otp\":\"123456\", \"phone_number\":\"00008557694\" } OTP Verification Response Sample The sample response sent by PayFort will also contain tenure of the EMI. Here is the tenure sample Tenure Sample \"tenure\":{ \"TENURE_VM\":[ { \"EMI\":\"2118\", \"TENURE\":\"3\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"1105\", \"TENURE\":\"6\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"768\", \"TENURE\":\"9\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"600\", \"TENURE\":\"12\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"500\", \"TENURE\":\"15\", \"InterestRate\":\"1.76\" }, ] }, Here is the sample JSON response sent from PayFORT server. { \"amount\":\"10000\", \"currency\":\"EGP\", \"response_code\":\"92182\", \"merchant_order_id\":\"Valu123\", \"signature\":\"4bfc2476c6e42b6c1fc9539dbf5092bbc8a2493820816800f98f110c4453b5cd\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"payment_option\":\"VALU\", \"language\":\"en\", \"total_downpayment\":\"0\", \"service_command\":\"OTP_VERIFY\", \"response_message\":\"OTP verification success\", \"merchant_reference\":\"XYZ2939-yu898\", \"phone_number\":\"00008557694\", \"otp_status\":\"1\", \"tenure\":{ \"TENURE_VM\":[ { \"EMI\":\"2118\", \"TENURE\":\"3\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"1105\", \"TENURE\":\"6\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"768\", \"TENURE\":\"9\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"600\", \"TENURE\":\"12\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"500\", \"TENURE\":\"15\", \"InterestRate\":\"1.76\" }, ] }, \"status\":\"92\" } Purchase Once the OTP has been verified the customer can purchase the selected product. Your site will forward the purchase request to PayFort. Use the Endpoints provided on this page to test your Purchase process and also to go live. Purchase Request Sample Here is the JSON sample of purchase request sent to PayFort. { \"merchant_reference\":\"XYZ9239-yu898\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"signature\":\"b574e362cc08d7504d8277e71400132f06064ee1537cd570717569b583dec0b5\", \"command\":\"PURCHASE\", \"language\":\"en\", \"payment_option\":\"VALU\", \"phone_number\":\"00008557694\", \"amount\":\"10000\", \"currency\":\"EGP\", \"customer_email\":\"customer@domain.com\", \"customer_code\":\"12348557694\", \"merchant_order_id\":\"Valu123\", \"transaction_id\":\"050819724899\", \"otp\":\"123456\", \"tenure\":\"6\", \"total_down_payment\":\"1200\", \"purchase_description\":\"Test\" } Purchase Response Sample Here is the response sample sent from PayFort { \"amount\":\"10000\", \"response_code\":\"14000\", \"signature\":\"afac5bd50250743cbd87ce208b1aabcae1080b9060bdb7212cf2c36e201cd6d0\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"payment_option\":\"VALU\", \"customer_ip\":\"192.178.1.10\", \"language\":\"en\", \"eci\":\"ECOMMERCE\", \"fort_id\":\"149295435400084008\", \"command\":\"PURCHASE\", \"response_message\":\"Success\", \"merchant_reference\":\"XYZ2939-yu898\", \"customer_email\":\"customer@domain.com\", \"currency\":\"EGP\", \"phone_number\":\"00008557694\", \"status\":\"14\" } Signature SHA algorithm generates a digital signature which is used to authenticate the sender and receiver of the message. It allows the receiver to verify the Integrity of the message. In this case your site acts as sender while PayFort server acts as a receiver thus by passing the signature parameter it is ensured that high level of security is in place when the message is sent and received. It also ensures that all the messages sent are encrypted using the signature. Below table describes the signature details Signature Description Name Values Description SHA Type * SHA-256 * SHA-512 The Secure Hash Algorithm is a family of cryptographic hash functions published by the National Institute of Standards and Technology (NIST) as a U.S. Federal Information Processing Standard (FIPS), including: SHA-0, SHA-1, SHA-2, SHA-3. SHA Request Phrase Dynamic value defined by the Merchant This value is used when the Merchant generates the request signature. SHA Response Phrase Dynamic value defined by the Merchant This value is used by our system to generate the response signature for the Merchant's Request. Signature Pattern The below steps describe the signature pattern: Sort all PayFort requests parameters (both mandatory and optional) in an ascending alphabetical order based on the parameters names. Concatenate the parameter name with the value separated by '=' (param_name=param_value). Concatenate all the parameters directly without any separator. (param_name1=param_value1param_name2=param_value2). Add the Merchant's Passphrase at the beginning and end of the parameters string. (REQUESTPHRASEparam_name1=param_value1param_name2=param_value2REQUESTP HRASE). Use the SHA function to generate the SHA value of the resulted string depending on the type of SHA selected by the Merchant. The following is an example for the Customer Verification - Request signature calculations : Assume you have the below parameters included in the request of customer verification: service_command = CUSTOMER_VERIFY merchant_identifier = CycHZxVj merchant_reference = XYZ9239-yu898 access_code = zx0IPmPy5jp1vAz8Kpg7 language = en payment_option = VALU phone_number = 00008557694 Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS SHA-Type: SHA-256 The string to hash should be prepared for the above request is the following \u201cstep 4 of the Signature Pattern\u201d: PASSaccess_code=zx0IPmPy5jp1vAz8Kpg7language=enmerchant_identifier=CycHZxVjmerchant_reference=X YZ9239- yu898payment_option=VALUphone_number=00008557694service_command=CUSTOMER_VERIFYPASS After applying step 5 of the Signature pattern, the result will be as follows: Signature = f0c49b9dae92b3da04d82689f698189ac65f62596280cd253cb24130ce5a1ed6 The following is an example for the OTP Generation \u2013 Request signature calculations: Assume you have the below parameters included in the request of generate OTP: service_command = OTP_GENERATE access_code = zx0IPmPy5jp1vAz8Kpg7 merchant_identifier = CycHZxVj merchant_reference = XYZ9239-yu898 payment_option = VALU phone_number = 00008557694 merchant_order_id = Valu123 amount = 10000 currency = EGP products = [ { \"product_name\":\"iphone\", \"product_price\":\"10000\", \"product_category\":\"phone\" } ] Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS SHA-Type: SHA-256 The string to hash should be prepared for the above request is the following \u201cstep 4 of the Signature Pattern\u201d: To calculate the products parameter in the signature: products = [ {\"product_name\":\"iphone\", \"product_price\":\"10000\", \"product_category\":\"phone\" } ] It should look like as shown below: products=[{product_name=iphone, product_price=10000, product_category=phone}] PASSaccess_code=zx0IPmPy5jp1vAz8Kpg7amount=10000currency=EGPlanguage=enmerchant_identifier=Cy cHZxVjmerchant_order_id=Valu123merchant_reference=XYZ9239- yu898payment_option=VALUphone_number=00008557694products=[{product_name=iphone, product_price=10000, product_category=phone}]service_command=OTP_GENERATEPASS After applying step 5 of the Signature pattern, the result will be as follows: Signature = c9a58adbe7fa5311b79a6362f28aa3e02c10cde5a37f10456e1caa6bd06a6951 Transaction\u2019s Response Codes Please visit the link to check the transaction codes and messages related to ValU service. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Lend"},{"location":"lendservice/#how-it-works","text":"Customer verification Your site sends request to verify whether the customer is a ValU registered customer or not. The customer's phone number is verified against the ValU registered user database. Based on the customer's phone number ValU's system validates whether customer is registered on its platform or not. OTP Generation If your customer is already registered on the ValU' platform then on the checkout page the customer will provide the phone number. The ValU will generate OTP code and send it to the customer via SMS. Verify OTP Once the customer fills the OTP in the checkout page it is verified. Purchase Once OTP is verified the customer can proceed to purchase the selected items. Your site should be integrated with ValU consumer finance Your customer should be registered with ValU's platform in order to have this benefit of installments","title":"How it works?"},{"location":"lendservice/#endpoints","text":"Use the below Endpoints for testing your integration and going live. Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Parameter Submission Type For All Request Submission REST POST request using JSON is sent for OTP generation request submission.","title":"Endpoints"},{"location":"lendservice/#customer-verification","text":"The very first step in the ValU integration is the customer verification. Customer Verification Request Sample Here is the sample JSON based customer verification request that you need to send to PayFort { \"service_command\":\"CUSTOMER_VERIFY\", \"merchant_reference\":\"XYZ9239-yu898\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"language\":\"en\", \"payment_option\":\"VALU\", \"phone_number\":\"00008557694\", \"signature\":\"54efbd76bd644e9ef237c39137bf5d2304dc1bfdf6f6302065b448f2456a07a7\" } Customer Verification Response Sample Here is the sample of JSON based customer verification response that you will receive from PayFort { \"response_code\":\"90000\", \"response_message\":\"Success\", \"service_command\":\"CUSTOMER_VERIFY\", \"signature\":\"27c1303138f8718e56f311d1b3d823b5a644e6bcd4fac43d5454955b13b5b337\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ2939-yu898\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"payment_option\":\"VALU\", \"language\":\"en\", \"phone_number\":\"00008557694\", \"status\":\"90\" }","title":"Customer Verification"},{"location":"lendservice/#otp-generation","text":"For the customer already registered on the ValU platform, they need to provide their phone number on your site's check out page. After phone number is added, OTP would be generated by the ValU platform and the same would be provided to your customer through SMS. Use the Endpoints provided on this page to test your OTP generation process and also to go live. OTP Generation Request Sample Here is the sample JSON based OTP generation request sample. Request sent to PayFort must also include the product parameters as shown here. { \"merchant_reference\":\"XYZ9239-yu898\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"signature\":\"fb1a8978eff0df5700007f3a0ca7964f61eb4b3c17de0a43029851b84687699d\", \"service_command\":\"OTP_GENERATE\", \"language\":\"en\", \"payment_option\":\"VALU\", \"phone_number\":\"00008557694\", \"merchant_order_id\":\"Valu123\", \"amount\":\"10000\", \"currency\":\"EGP\", \"products\":[ { \"product_name\":\"iphone\", \"product_price\":\"10000\", \"product_category\":\"phone\" } ] } OTP Generation Response Sample Here is the sample JSON based OTP generation response sample { \"transaction_id\":\"240719641384\", \"amount\":\"10000\", \"currency\":\"EGP\", \"response_code\":\"88000\", \"merchant_order_id\":\"Valu123\", \"signature\":\"2304c9a011630db5286712903e7877a53aa96aa7cfe2151fd7c6cc350ec38c12\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"payment_option\":\"VALU\", \"language\":\"en\", \"response_message\":\"Success\", \"service_command\":\"OTP_GENERATE\", \"merchant_reference\":\"XYZ2939-yu898\", \"total_down_payment\":\"1200\", \"phone_number\":\"00008557694\", \"otp_status\":\"1\", \"tenure\":\"6-9-12-15-18\", \"status\":\"88\" }","title":"OTP Generation"},{"location":"lendservice/#otp-verification","text":"Once the customer receives OTP through SMS, they will provide the same on your site's checkout page. This OTP is then verified against the ValU server Use the Endpoints provided on this page to test your OTP verification process and also to go live. OTP Verification Request Sample Inorder to send OTP verification request you can refer to the sample as shown below { \"signature\":\"d5c9c93166c34efbf72c71c9f780ce7bc336f68f9d35d63dba014175fd44af58\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239-yu898\", \"merchant_order_id\":\"Valu123\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"language\":\"en\", \"amount\":\"1000\", \"currency\":\"EGP\", \"payment_option\":\"VALU\", \"service_command\":\"OTP_VERIFY\", \"total_downpayment\":1200, \"otp\":\"123456\", \"phone_number\":\"00008557694\" } OTP Verification Response Sample The sample response sent by PayFort will also contain tenure of the EMI. Here is the tenure sample Tenure Sample \"tenure\":{ \"TENURE_VM\":[ { \"EMI\":\"2118\", \"TENURE\":\"3\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"1105\", \"TENURE\":\"6\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"768\", \"TENURE\":\"9\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"600\", \"TENURE\":\"12\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"500\", \"TENURE\":\"15\", \"InterestRate\":\"1.76\" }, ] }, Here is the sample JSON response sent from PayFORT server. { \"amount\":\"10000\", \"currency\":\"EGP\", \"response_code\":\"92182\", \"merchant_order_id\":\"Valu123\", \"signature\":\"4bfc2476c6e42b6c1fc9539dbf5092bbc8a2493820816800f98f110c4453b5cd\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"payment_option\":\"VALU\", \"language\":\"en\", \"total_downpayment\":\"0\", \"service_command\":\"OTP_VERIFY\", \"response_message\":\"OTP verification success\", \"merchant_reference\":\"XYZ2939-yu898\", \"phone_number\":\"00008557694\", \"otp_status\":\"1\", \"tenure\":{ \"TENURE_VM\":[ { \"EMI\":\"2118\", \"TENURE\":\"3\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"1105\", \"TENURE\":\"6\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"768\", \"TENURE\":\"9\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"600\", \"TENURE\":\"12\", \"InterestRate\":\"1.76\" }, { \"EMI\":\"500\", \"TENURE\":\"15\", \"InterestRate\":\"1.76\" }, ] }, \"status\":\"92\" }","title":"OTP Verification"},{"location":"lendservice/#purchase","text":"Once the OTP has been verified the customer can purchase the selected product. Your site will forward the purchase request to PayFort. Use the Endpoints provided on this page to test your Purchase process and also to go live. Purchase Request Sample Here is the JSON sample of purchase request sent to PayFort. { \"merchant_reference\":\"XYZ9239-yu898\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"signature\":\"b574e362cc08d7504d8277e71400132f06064ee1537cd570717569b583dec0b5\", \"command\":\"PURCHASE\", \"language\":\"en\", \"payment_option\":\"VALU\", \"phone_number\":\"00008557694\", \"amount\":\"10000\", \"currency\":\"EGP\", \"customer_email\":\"customer@domain.com\", \"customer_code\":\"12348557694\", \"merchant_order_id\":\"Valu123\", \"transaction_id\":\"050819724899\", \"otp\":\"123456\", \"tenure\":\"6\", \"total_down_payment\":\"1200\", \"purchase_description\":\"Test\" } Purchase Response Sample Here is the response sample sent from PayFort { \"amount\":\"10000\", \"response_code\":\"14000\", \"signature\":\"afac5bd50250743cbd87ce208b1aabcae1080b9060bdb7212cf2c36e201cd6d0\", \"merchant_identifier\":\"CycHZxVj\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"payment_option\":\"VALU\", \"customer_ip\":\"192.178.1.10\", \"language\":\"en\", \"eci\":\"ECOMMERCE\", \"fort_id\":\"149295435400084008\", \"command\":\"PURCHASE\", \"response_message\":\"Success\", \"merchant_reference\":\"XYZ2939-yu898\", \"customer_email\":\"customer@domain.com\", \"currency\":\"EGP\", \"phone_number\":\"00008557694\", \"status\":\"14\" }","title":"Purchase"},{"location":"lendservice/#signature","text":"SHA algorithm generates a digital signature which is used to authenticate the sender and receiver of the message. It allows the receiver to verify the Integrity of the message. In this case your site acts as sender while PayFort server acts as a receiver thus by passing the signature parameter it is ensured that high level of security is in place when the message is sent and received. It also ensures that all the messages sent are encrypted using the signature. Below table describes the signature details Signature Description Name Values Description SHA Type * SHA-256 * SHA-512 The Secure Hash Algorithm is a family of cryptographic hash functions published by the National Institute of Standards and Technology (NIST) as a U.S. Federal Information Processing Standard (FIPS), including: SHA-0, SHA-1, SHA-2, SHA-3. SHA Request Phrase Dynamic value defined by the Merchant This value is used when the Merchant generates the request signature. SHA Response Phrase Dynamic value defined by the Merchant This value is used by our system to generate the response signature for the Merchant's Request. Signature Pattern The below steps describe the signature pattern: Sort all PayFort requests parameters (both mandatory and optional) in an ascending alphabetical order based on the parameters names. Concatenate the parameter name with the value separated by '=' (param_name=param_value). Concatenate all the parameters directly without any separator. (param_name1=param_value1param_name2=param_value2). Add the Merchant's Passphrase at the beginning and end of the parameters string. (REQUESTPHRASEparam_name1=param_value1param_name2=param_value2REQUESTP HRASE). Use the SHA function to generate the SHA value of the resulted string depending on the type of SHA selected by the Merchant. The following is an example for the Customer Verification - Request signature calculations : Assume you have the below parameters included in the request of customer verification: service_command = CUSTOMER_VERIFY merchant_identifier = CycHZxVj merchant_reference = XYZ9239-yu898 access_code = zx0IPmPy5jp1vAz8Kpg7 language = en payment_option = VALU phone_number = 00008557694 Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS SHA-Type: SHA-256 The string to hash should be prepared for the above request is the following \u201cstep 4 of the Signature Pattern\u201d: PASSaccess_code=zx0IPmPy5jp1vAz8Kpg7language=enmerchant_identifier=CycHZxVjmerchant_reference=X YZ9239- yu898payment_option=VALUphone_number=00008557694service_command=CUSTOMER_VERIFYPASS After applying step 5 of the Signature pattern, the result will be as follows: Signature = f0c49b9dae92b3da04d82689f698189ac65f62596280cd253cb24130ce5a1ed6 The following is an example for the OTP Generation \u2013 Request signature calculations: Assume you have the below parameters included in the request of generate OTP: service_command = OTP_GENERATE access_code = zx0IPmPy5jp1vAz8Kpg7 merchant_identifier = CycHZxVj merchant_reference = XYZ9239-yu898 payment_option = VALU phone_number = 00008557694 merchant_order_id = Valu123 amount = 10000 currency = EGP products = [ { \"product_name\":\"iphone\", \"product_price\":\"10000\", \"product_category\":\"phone\" } ] Below are the Merchant signature settings from the back-office: SHA Request Phrase: PASS SHA-Type: SHA-256 The string to hash should be prepared for the above request is the following \u201cstep 4 of the Signature Pattern\u201d: To calculate the products parameter in the signature: products = [ {\"product_name\":\"iphone\", \"product_price\":\"10000\", \"product_category\":\"phone\" } ] It should look like as shown below: products=[{product_name=iphone, product_price=10000, product_category=phone}] PASSaccess_code=zx0IPmPy5jp1vAz8Kpg7amount=10000currency=EGPlanguage=enmerchant_identifier=Cy cHZxVjmerchant_order_id=Valu123merchant_reference=XYZ9239- yu898payment_option=VALUphone_number=00008557694products=[{product_name=iphone, product_price=10000, product_category=phone}]service_command=OTP_GENERATEPASS After applying step 5 of the Signature pattern, the result will be as follows: Signature = c9a58adbe7fa5311b79a6362f28aa3e02c10cde5a37f10456e1caa6bd06a6951 Transaction\u2019s Response Codes Please visit the link to check the transaction codes and messages related to ValU service.","title":"Signature"},{"location":"lendservice/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"lendservice/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"maintenance/","text":"Maintenance Operations can be performed only on the authorized amount. Once the redirection process has been successfully completed and the amount has been authorized then the maintenace operation is carried out. Capture Payment Once the purchase has been authorized in the redirection process, you can capture the payment. Visit Capture Payment section for more details. Capture a Payment Void Authorization If a payment has been authorized, the same can be voided through void authorization. Visit Void Authorization section for more details. Void an Authorization Refund Payment If the payment has been captured the same can be refunded using the refund payment process. Visit Refund Payment section for more details. Refund a Payment Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"What is Maintenance?"},{"location":"maintenance/#capture-payment","text":"Once the purchase has been authorized in the redirection process, you can capture the payment. Visit Capture Payment section for more details. Capture a Payment","title":"Capture Payment"},{"location":"maintenance/#void-authorization","text":"If a payment has been authorized, the same can be voided through void authorization. Visit Void Authorization section for more details. Void an Authorization","title":"Void Authorization"},{"location":"maintenance/#refund-payment","text":"If the payment has been captured the same can be refunded using the refund payment process. Visit Refund Payment section for more details. Refund a Payment","title":"Refund Payment"},{"location":"maintenance/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"maintenance/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"maintenanceparameters/","text":"Maintenance Operations Parameters Capture Payment Request Parameters command (String, mandatory) Maximum Length Possible/ expected values Description 20 CAPTURE A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. fort_id (numeric, optional) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. You can send \u201cmerchant_reference\u201d and/ or \u201cfort_id\u201d in the CAPTURE request. Capture Payment Response command (String) Maximum Length Possible/ expected values Description 20 CAPTURE A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. fort_id (numeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. response_message (alphanumeric) Maximum Length Possible/ expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/ expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Please refer to section Transactions Response Codes for more details about operation\u2019s statuses Void Payment Request Parameters command (String, mandatory) Maximum Length Possible/ expected values Description 20 VOID_AUTHORIZATION A command for payFORT server to understand. fort_id (numeric, optional) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. You can send \u201cmerchant_reference\u201d and/ or \u201cfort_id\u201d in the VOID_AUTHORIZATION request. Void Payment Response command (String) Maximum Length Possible/ expected values Description 20 VOID_AUTHORIZATION A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. fort_id (numeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. response_message (alphanumeric) Maximum Length Possible/ expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/ expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Please refer to section Transactions Response Codes for more details about operation\u2019s statuses Refund Payment Request Parameters command (String, mandatory) Maximum Length Possible/ expected values Description 20 REFUND A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. fort_id (numeric, optional) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. maintenance_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 200 customer123 - _ . The Refund\u2019s unique order number. * You will be able to retry on the refund request using the same maintenance reference if the refund transaction was declined. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. You can send \u201cmerchant_reference\u201d and/ or \u201cfort_id\u201d in the REFUND request. Refund Payment Response command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. maintenance_reference (alphanumeric) Maximum Length Example Description 200 customer123 The Refund\u2019s unique order number. * You will be able to retry on the refund request using the same maintenance reference if the refund transaction was declined. fort_id (numeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. response_message (alphanumeric) Maximum Length Possible/ expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/ expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Please refer to section Transactions Response Codes for more details about operation\u2019s statuses","title":"Maintenance Parameters"},{"location":"maintenanceparameters/#maintenance-operations-parameters","text":"","title":"Maintenance Operations Parameters"},{"location":"maintenanceparameters/#capture-payment-request-parameters","text":"command (String, mandatory) Maximum Length Possible/ expected values Description 20 CAPTURE A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. fort_id (numeric, optional) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. You can send \u201cmerchant_reference\u201d and/ or \u201cfort_id\u201d in the CAPTURE request.","title":"Capture Payment  Request Parameters"},{"location":"maintenanceparameters/#capture-payment-response","text":"command (String) Maximum Length Possible/ expected values Description 20 CAPTURE A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. fort_id (numeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. response_message (alphanumeric) Maximum Length Possible/ expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/ expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Please refer to section Transactions Response Codes for more details about operation\u2019s statuses","title":"Capture Payment Response"},{"location":"maintenanceparameters/#void-payment-request-parameters","text":"command (String, mandatory) Maximum Length Possible/ expected values Description 20 VOID_AUTHORIZATION A command for payFORT server to understand. fort_id (numeric, optional) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. You can send \u201cmerchant_reference\u201d and/ or \u201cfort_id\u201d in the VOID_AUTHORIZATION request.","title":"Void Payment  Request Parameters"},{"location":"maintenanceparameters/#void-payment-response","text":"command (String) Maximum Length Possible/ expected values Description 20 VOID_AUTHORIZATION A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. fort_id (numeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. response_message (alphanumeric) Maximum Length Possible/ expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/ expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Please refer to section Transactions Response Codes for more details about operation\u2019s statuses","title":"Void Payment Response"},{"location":"maintenanceparameters/#refund-payment-request-parameters","text":"command (String, mandatory) Maximum Length Possible/ expected values Description 20 REFUND A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. fort_id (numeric, optional) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. maintenance_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 200 customer123 - _ . The Refund\u2019s unique order number. * You will be able to retry on the refund request using the same maintenance reference if the refund transaction was declined. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. You can send \u201cmerchant_reference\u201d and/ or \u201cfort_id\u201d in the REFUND request.","title":"Refund Payment Request Parameters"},{"location":"maintenanceparameters/#refund-payment-response","text":"command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. maintenance_reference (alphanumeric) Maximum Length Example Description 200 customer123 The Refund\u2019s unique order number. * You will be able to retry on the refund request using the same maintenance reference if the refund transaction was declined. fort_id (numeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. response_message (alphanumeric) Maximum Length Possible/ expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/ expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Please refer to section Transactions Response Codes for more details about operation\u2019s statuses","title":"Refund Payment Response"},{"location":"merchantpage1/","text":"What is Merchant Page Integration? You can setup payment form and start accepting payments with the help of PayFORT Merchant Page. Merchant Page Integration uses PayFORT iFrame which can be easily integrated with your payment form. It takes the look and feel of your merchant site and accepts payments from major credit cards including MADA, VISA, Mastercard, etc. You develop your site in any technology of your choice and integrate the iFrame in your html based checkout page. Figure 1 - Using PayFORT iFrame for web How it Works? Your checkout page will display an integrated PayFORT iFrame to your Customer that has the same look and feel as that of your website. Customer fills his/her payment details in the checkout page. PayFORT server receives the payment details and validates the same. PayFORT then sends a confirmation to your checkout page to complete the transaction. You have the option to redirect the Customer directly to the checkout page. Integration Flow Figure 2 : Integration Flow using iFrame Here is the description of the PayFORT iFrame Integration workflow : The customer begins the checkout process on your website. The payment page with integrated iFrame is displayed to the customer on the your site. The Customer then enters the card\u2019s details on the payment page. PayFORT checks the card details. PayFORT creates a token for the Customer transaction and sends it to the payment page. The Payment page then sends a JSON request along with the token to PayFORT. In case your page receives from PayFORT server a 3-D Secure URL 3ds_url , and response indicating that a 3ds check is required then: Your payment page redirects the Customer to the ACS to check his card enrollment. The Customer enters authentication data on the ACS platform. The ACS performs authentication of the Customer\u2019s data and sends the authentication results to PayFORT. PayFORT completes the operation based on the 3-D Secure response and returns the response to your payment page. PayFORT sends the payment results to your site. In case of 3ds secure check, PayFort returns status 20: On hold and message 064: 3-D Secure check requested message.For example, PayFort is waiting for your payment page to authenticate the Customer. If you include the token_name parameter in the request and this Token already has a successful Authorization, then the card number (masked) and expiry date will be displayed in their allocated fields. If the Token is sent by you, it will be generated with the same name as sent by your page. Payment processing page, payment form and payment details form all refer to payment page on your site where customer will enter card details. How to add the Tokenization service on the Merchant Page channel? The Tokenization service is applicable to be integrated through the Merchant Page Channel through the below steps: 1. The Customer processes the first PURCHASE/ AUTHORIZATION payment successfully. 2. The Merchant will receive a token_name in the response. This token_name should be considered as a permanent token name, and it can be used in the future customer\u2019s payments by submitting the token_name in the next PURCHASE/ AUTHORIZATION payment with card_security_code parameter. 3. No need to open the Merchant Page to fill all the card details again in the next checkouts. If the Customer wants to update/ delete his card, you should check Update Token section. For more details on Tokens and Tokenization process visit the link Difference Between Merchant Page and Redirection Merchant Page Integration allows you to design a checkout page using PayFORT iframe where you can capture and verify the details of customer's credit card. The complete process involves displaying a checkout page to the customer where they will enter their credit card details and the details would be verified by the PayFORT servers and a token would be sent back to the merchant site which can be further used for carrying out check out process. Redirection involves authorizing a customer purchase. In this case amount for the purchase is hold for a particular period of time until it is captured or voided. If no action is taken by the merchant site then by default the amount is voided and refunded back to the card. For more details on redirection please visit the link Give It a Try Use one of our test cards and corresponding CVV to try iFrames out for yourself. You can use any expiry date ( mm/yy ), as long as it's in the future. Supported Credit Cards: Visa Master Card AMEX Credit Cards Not Supported: Diners Club JCB Endpoints An endpoint is one end of a communication channel and your merchant site will communicate with the PayFORT resources using Endpoints. For PayFORT APIs , an endpoint includes a URL of PayFORT server or service. Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage Integrate iFrames to Payment Page If you are planning to use PayFORT iFrames then you can use the endpoints for testing and and also for going live. You can use programming language of your choice or what your site uses and can use the iFrame in your html based check out page. Before you start You need to signup for a test account or a live account with PayFORT. Once you signup you will get the access to the Backoffice. Make sure you have your access_code . Refer to Figure 3 . You can find it in the backoffice , under Integration Settings > Security Settings > Access Code . You can check out more about navigating through backoffice by visiting this link . Figure 3 : Access Code Generation The Payment Page Template available in the backoffice provides you the feature to create a payment processing page using PayFort iFrame. Refer to the Figure 4 Figure 4 : Use Payment Settings to create a payment form Sample iFrame code snippet The following sample code snippet is the start of the payment process and allows you to tokenize a customer's sensitive card information using iFrames. <iframe style=\"border:5px dotted red\" name=\"myframe\" src = \"\" width=\"400\" height=\"600\"> </iframe> <form action=\"https://sbcheckout.payfort.com/FortAPI/paymentPage\" method=\"post\" id=\"\" target=\"myframe\"> <INPUT type=\"hidden\" NAME=\"service_command\" value=\"TOKENIZATION\"> The above sample code is an HTML based form that will post a request to PayFORT server. The request parameters are also added in the input tag of the code. However, If you are not familiar with HTML tags and forms then you can checkout this site . The form consists of iframe tag which specifies the style, name of the style (you can give any name to your style), source code location, width and height of the iframe. All these are customizable values which you can provide. The form action tag consists of the endpoints . This will come handy whenever submit action is performed on the page. Once the form is submitted the parameters provided in the form would be sent to the PayFORT server and Endpoints will serve as communication link between your page and PayFORT server. Request Parameters The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment Please refer to the section Merchant Page Parameters for request parameters. Response Parameters The PayFORT server will return the response in JSON format. Here is the sample response along with the parameters returned by PayFORT server. [{ \"service_command\": \"TOKENIZATION\", \"access_code\": \"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\": \"CycHZxVj\", \"merchant_reference\": \"XYZ9239-yu898\", \"language\": \"en\", \"signature\": \"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"token_name\": \"Op9Vmp\", \"expiry_date\": \"2105\", \"card_number\": \"400555*****0001\", \"response_message\": \"012\", \"response_code\": \"11012\", \"status\": \"11\", \"card_bin\": \"478773\", \"return_url\": \"http://www.merchant.com\" }] Please refer to the section Merchant Page Parameters for reponse parameters. Payment Page Customization When you begin designing your own custom payment page you will also need to style your custom payment page so that it is in line with the look and feel of your website. Inorder to style your custom payment page you will require CSS files and within those files you need use the css classes. If you are new to HTML and CSS don't worry you can visit this link to learn about HTML/CSS. This is a list with all customizable CSS classes on the basic payment page: The Wrapper class It is responsible for the total width of the form container and the background. The Container class It is responsible for the form\u2019s shape and width. The Popover class It is responsible for the error messages. The Half-container class It is used to merge the date and CVV fields into one block if needed. The Input class It is the container of each single input field. The Pay class It is responsible for the submit button. The Visa/ MasterCard classes It is used to change the color of the Visa/ MasterCard colors. You can always create multiple theme files that will enable you to switch freely and easily between them when necessary.Theme files offer you the flexibility to change the look and feel of your page. Theme files can be uploaded from the back-office using the Payment Page template screen. Go to Full API Check out our full API by visiting this link For more details on Tokens and Tokenization process visit the link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Merchant Page 1"},{"location":"merchantpage1/#what-is-merchant-page-integration","text":"You can setup payment form and start accepting payments with the help of PayFORT Merchant Page. Merchant Page Integration uses PayFORT iFrame which can be easily integrated with your payment form. It takes the look and feel of your merchant site and accepts payments from major credit cards including MADA, VISA, Mastercard, etc. You develop your site in any technology of your choice and integrate the iFrame in your html based checkout page. Figure 1 - Using PayFORT iFrame for web","title":"What is Merchant Page Integration?"},{"location":"merchantpage1/#how-it-works","text":"Your checkout page will display an integrated PayFORT iFrame to your Customer that has the same look and feel as that of your website. Customer fills his/her payment details in the checkout page. PayFORT server receives the payment details and validates the same. PayFORT then sends a confirmation to your checkout page to complete the transaction. You have the option to redirect the Customer directly to the checkout page.","title":"How it Works?"},{"location":"merchantpage1/#integration-flow","text":"Figure 2 : Integration Flow using iFrame Here is the description of the PayFORT iFrame Integration workflow : The customer begins the checkout process on your website. The payment page with integrated iFrame is displayed to the customer on the your site. The Customer then enters the card\u2019s details on the payment page. PayFORT checks the card details. PayFORT creates a token for the Customer transaction and sends it to the payment page. The Payment page then sends a JSON request along with the token to PayFORT. In case your page receives from PayFORT server a 3-D Secure URL 3ds_url , and response indicating that a 3ds check is required then: Your payment page redirects the Customer to the ACS to check his card enrollment. The Customer enters authentication data on the ACS platform. The ACS performs authentication of the Customer\u2019s data and sends the authentication results to PayFORT. PayFORT completes the operation based on the 3-D Secure response and returns the response to your payment page. PayFORT sends the payment results to your site. In case of 3ds secure check, PayFort returns status 20: On hold and message 064: 3-D Secure check requested message.For example, PayFort is waiting for your payment page to authenticate the Customer. If you include the token_name parameter in the request and this Token already has a successful Authorization, then the card number (masked) and expiry date will be displayed in their allocated fields. If the Token is sent by you, it will be generated with the same name as sent by your page. Payment processing page, payment form and payment details form all refer to payment page on your site where customer will enter card details.","title":"Integration Flow"},{"location":"merchantpage1/#how-to-add-the-tokenization-service-on-the-merchant-page-channel","text":"The Tokenization service is applicable to be integrated through the Merchant Page Channel through the below steps: 1. The Customer processes the first PURCHASE/ AUTHORIZATION payment successfully. 2. The Merchant will receive a token_name in the response. This token_name should be considered as a permanent token name, and it can be used in the future customer\u2019s payments by submitting the token_name in the next PURCHASE/ AUTHORIZATION payment with card_security_code parameter. 3. No need to open the Merchant Page to fill all the card details again in the next checkouts. If the Customer wants to update/ delete his card, you should check Update Token section. For more details on Tokens and Tokenization process visit the link","title":"How to add the Tokenization service on the Merchant Page channel?"},{"location":"merchantpage1/#difference-between-merchant-page-and-redirection","text":"Merchant Page Integration allows you to design a checkout page using PayFORT iframe where you can capture and verify the details of customer's credit card. The complete process involves displaying a checkout page to the customer where they will enter their credit card details and the details would be verified by the PayFORT servers and a token would be sent back to the merchant site which can be further used for carrying out check out process. Redirection involves authorizing a customer purchase. In this case amount for the purchase is hold for a particular period of time until it is captured or voided. If no action is taken by the merchant site then by default the amount is voided and refunded back to the card. For more details on redirection please visit the link","title":"Difference Between Merchant Page and Redirection"},{"location":"merchantpage1/#give-it-a-try","text":"Use one of our test cards and corresponding CVV to try iFrames out for yourself. You can use any expiry date ( mm/yy ), as long as it's in the future. Supported Credit Cards: Visa Master Card AMEX Credit Cards Not Supported: Diners Club JCB","title":"Give It a Try"},{"location":"merchantpage1/#endpoints","text":"An endpoint is one end of a communication channel and your merchant site will communicate with the PayFORT resources using Endpoints. For PayFORT APIs , an endpoint includes a URL of PayFORT server or service. Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage","title":"Endpoints"},{"location":"merchantpage1/#integrate-iframes-to-payment-page","text":"If you are planning to use PayFORT iFrames then you can use the endpoints for testing and and also for going live. You can use programming language of your choice or what your site uses and can use the iFrame in your html based check out page. Before you start You need to signup for a test account or a live account with PayFORT. Once you signup you will get the access to the Backoffice. Make sure you have your access_code . Refer to Figure 3 . You can find it in the backoffice , under Integration Settings > Security Settings > Access Code . You can check out more about navigating through backoffice by visiting this link . Figure 3 : Access Code Generation The Payment Page Template available in the backoffice provides you the feature to create a payment processing page using PayFort iFrame. Refer to the Figure 4 Figure 4 : Use Payment Settings to create a payment form Sample iFrame code snippet The following sample code snippet is the start of the payment process and allows you to tokenize a customer's sensitive card information using iFrames. <iframe style=\"border:5px dotted red\" name=\"myframe\" src = \"\" width=\"400\" height=\"600\"> </iframe> <form action=\"https://sbcheckout.payfort.com/FortAPI/paymentPage\" method=\"post\" id=\"\" target=\"myframe\"> <INPUT type=\"hidden\" NAME=\"service_command\" value=\"TOKENIZATION\"> The above sample code is an HTML based form that will post a request to PayFORT server. The request parameters are also added in the input tag of the code. However, If you are not familiar with HTML tags and forms then you can checkout this site . The form consists of iframe tag which specifies the style, name of the style (you can give any name to your style), source code location, width and height of the iframe. All these are customizable values which you can provide. The form action tag consists of the endpoints . This will come handy whenever submit action is performed on the page. Once the form is submitted the parameters provided in the form would be sent to the PayFORT server and Endpoints will serve as communication link between your page and PayFORT server.","title":"Integrate iFrames to Payment Page"},{"location":"merchantpage1/#request-parameters","text":"The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment Please refer to the section Merchant Page Parameters for request parameters.","title":"Request Parameters"},{"location":"merchantpage1/#response-parameters","text":"The PayFORT server will return the response in JSON format. Here is the sample response along with the parameters returned by PayFORT server. [{ \"service_command\": \"TOKENIZATION\", \"access_code\": \"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\": \"CycHZxVj\", \"merchant_reference\": \"XYZ9239-yu898\", \"language\": \"en\", \"signature\": \"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"token_name\": \"Op9Vmp\", \"expiry_date\": \"2105\", \"card_number\": \"400555*****0001\", \"response_message\": \"012\", \"response_code\": \"11012\", \"status\": \"11\", \"card_bin\": \"478773\", \"return_url\": \"http://www.merchant.com\" }] Please refer to the section Merchant Page Parameters for reponse parameters.","title":"Response Parameters"},{"location":"merchantpage1/#payment-page-customization","text":"When you begin designing your own custom payment page you will also need to style your custom payment page so that it is in line with the look and feel of your website. Inorder to style your custom payment page you will require CSS files and within those files you need use the css classes. If you are new to HTML and CSS don't worry you can visit this link to learn about HTML/CSS. This is a list with all customizable CSS classes on the basic payment page: The Wrapper class It is responsible for the total width of the form container and the background. The Container class It is responsible for the form\u2019s shape and width. The Popover class It is responsible for the error messages. The Half-container class It is used to merge the date and CVV fields into one block if needed. The Input class It is the container of each single input field. The Pay class It is responsible for the submit button. The Visa/ MasterCard classes It is used to change the color of the Visa/ MasterCard colors. You can always create multiple theme files that will enable you to switch freely and easily between them when necessary.Theme files offer you the flexibility to change the look and feel of your page. Theme files can be uploaded from the back-office using the Payment Page template screen.","title":"Payment Page Customization"},{"location":"merchantpage1/#go-to-full-api","text":"Check out our full API by visiting this link For more details on Tokens and Tokenization process visit the link","title":"Go to Full API"},{"location":"merchantpage1/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"merchantpage2/","text":"What is Merchant Page 2 integration? You can also build your own custom payment form without using default payment template provided by PayFoRT and collect customer's payment details and send it to PayFORT server for further processing. Figure 1 How it works? You develop your own custom payment details form that collects the card details (credit card number, expiry date, CVV). Customer fills his/her payment details in the custom payment checkout page. PayFORT server receives the payment details and validates the same. PayFORT then sends a confirmation to your checkout page to complete the transaction which includes Token. You use the token to complete the Authorization or Purchase operation . You should develop a form that does not send data to your website but directly submits the form to PayFORT. ### Difference Between Merchant Page 2.0 and Redirection Merchant Page 2.0 allows you to design your own checkout page where you can capture and verify the details of customer's credit card. The complete process involves displaying a checkout page to the customer where they will enter their credit card details and the details would be verified by the PayFORT servers and a token would be sent back to the merchant site which can be further used for carrying out check out process. Redirection involves authorizing a customer purchase. In this case amount for the purchase is hold for a particular period of time until it is captured or voided. If no action is taken by the merchant site then by default the amount is voided and refunded back to the card. For more details on redirection please visit the link Integration Flow Figure 2 Here is the Integration flow description The customer begins the checkout process on your website. Your website displays the custom payment form to collect the card\u2019s details. Then the Customer enters the card\u2019s details on the payment page. PayFORT checks the card details. PayFORT creates a token for the Customer transaction and sends it to the payment page. The merchant site sends a payment request along with the Token to PayFORT In case your page receives from PayFORT server a 3-D Secure URL 3ds_url , and response indicating that a 3ds check is required then: Your payment page redirects the Customer to the ACS to check his card enrollment. The Customer enters authentication data on the ACS platform. The ACS performs authentication of the Customer\u2019s data and sends the authentication results to PayFORT. PayFORT completes the operation based on the 3-D Secure response and returns the response to your payment page. PayFORT sends the payment results to your site. In case of 3ds secure check, PayFort returns status 20: On hold and message 064: 3-D Secure check requested message.For example, PayFort is waiting for your payment page to authenticate the Customer. If the Token is sent by the payment page, it will be generated with the same name sent by the website. Payment processing page, payment form and payment details form all refer to payment page on your site where customer will enter card details. How to add the Tokenization service on the Merchant Page 2.0 channel? The Tokenization service is applicable to be integrated through the Merchant Page 2.0 Channel through the below steps: 1. The Customer processes the first PURCHASE/ AUTHORIZATION payment successfully. 2. You will receive a token_name in the response. This token_name should be considered as a permanent token name, and it can be used in the future customer\u2019s payments by submitting the token_name in the next PURCHASE/ AUTHORIZATION payment with card_security_code parameter. 3. No need to open the Merchant Page to fill all the card details again in the next checkouts. If the Customer wants to update/ delete his card, you should check Update Token section. For more details on Tokens and Tokenization process visit the link Give It a Try Use one of our test cards and corresponding CVV to try out for yourself. You can use any expiry date ( mm/yy ), as long as it's in the future. Supported Credit Cards: Visa Master Card AMEX Credit Cards Not Supported: Diners Club JCB Endpoints Endpoints for Merchant Page is also applicable for Merchant 2 Integration. You can check the Endpoints by visiting this Sandbox Placeholder : Please provide correct endpoint url for sandbox Live Placeholder: Please provide correct endpoint url for live environment Before you start You need to signup for a test account or a live account with PayFORT. Once you signup you will get the access to the Backoffice. Make sure you have your access_code . Refer figure 3. You can find it in the backoffice , under Integration Settings Security Settings > Access Code . If you don't have an account with us yet, you can create a test account by visiting the link . You can also get started with an active account by visiting this link Figure 3 : Uploading custom template The Payment Page Template available in the backoffice provides you the feature to create a custom payment processing page. Refer to the figure 4. Once you upload your custom payment page our support team will validate the same. Figure 4: Generating Access Code. Sample Code The following code snippet shown here is an example of the start of the payment process. You can refer to this example, replacing the supplied acccess_code with your own. The card token will be posted via the URL specified in the form's action attribute. <FORM METHOD=\"post\" ACTION=\"https://sbcheckout.PayFort.com/FortAPI/paymentPage\" id=form1 name=form1> <input type=\"hidden\" name=\"service_command\" value=\"TOKENIZATION\"> <input type=\"hidden\" name=\"access_code\" value=\" \"> <input type=\"hidden\" name=\"language\" value=\"en\"> <input type=\"hidden\" name=\"merchant_identifier\" value=\" \"> <input type=\"hidden\" name=\"merchant_reference\" value=\" \"> <input type=\"hidden\" name=\"card_number\" value=\"4005550000000001\"> <input type=\"hidden\" name=\"expiry_date\" value=\"2105\"> <input type=\"hidden\" name=\"card_security_code\" value=\"123\"> <input type=\"hidden\" name=\"return_url\" value=\"https://www.example.com\"> <input type=\"hidden\" name=\"signature\" value=\" \"> <input type=\"submit\" value=\"Pay\" id=\"\" name=\"\"> The above code snippet is an HTML based form that will post a request to PayFORT server. The request parameters are also added in the input tag of the code. However, If you are not familiar with HTML tags and forms then you can checkout this site . The form action tag consists of the endpoints. This will come handy whenever submit action is performed on the page. Once the form is submitted the parameters provided in the form would be sent to the PayFORT server and Endpoints will serve as communication link between your page and PayFORT server. Request Parameters The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment Please refer to the section Merchant Page 2 Request Parameters for request parameters. Response Parameters The PayFORT server will return the response in JSON format. Here is the sample response along with the parameters returned by PayFORT server. [{ \"service_command\": \"TOKENIZATION\", \"access_code\": \"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\": \"CycHZxVj\", \"merchant_reference\": \"XYZ9239-yu898\", \"language\": \"en\", \"signature\": \"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"token_name\": \"Op9Vmp\", \"expiry_date\": \"2105\", \"card_number\": \"400555*****0001\", \"response_message\": \"012\", \"response_code\": \"11012\", \"status\": \"11\", \"card_bin\": \"478773\", \"card_holder_name\": \"John Smith\", \"remember_me\": \"No\", \"return_url\": \"http://www.merchant.com\" }] Please refer to the section Merchant Page 2 Response for reponse parameters. Go to Full API Check out our full API by visiting this link To learn more about Tokens and Tokenization process visit this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Merchant Page 2"},{"location":"merchantpage2/#what-is-merchant-page-2-integration","text":"You can also build your own custom payment form without using default payment template provided by PayFoRT and collect customer's payment details and send it to PayFORT server for further processing. Figure 1","title":"What is Merchant Page 2 integration?"},{"location":"merchantpage2/#how-it-works","text":"You develop your own custom payment details form that collects the card details (credit card number, expiry date, CVV). Customer fills his/her payment details in the custom payment checkout page. PayFORT server receives the payment details and validates the same. PayFORT then sends a confirmation to your checkout page to complete the transaction which includes Token. You use the token to complete the Authorization or Purchase operation . You should develop a form that does not send data to your website but directly submits the form to PayFORT. ### Difference Between Merchant Page 2.0 and Redirection Merchant Page 2.0 allows you to design your own checkout page where you can capture and verify the details of customer's credit card. The complete process involves displaying a checkout page to the customer where they will enter their credit card details and the details would be verified by the PayFORT servers and a token would be sent back to the merchant site which can be further used for carrying out check out process. Redirection involves authorizing a customer purchase. In this case amount for the purchase is hold for a particular period of time until it is captured or voided. If no action is taken by the merchant site then by default the amount is voided and refunded back to the card. For more details on redirection please visit the link","title":"How it works?"},{"location":"merchantpage2/#integration-flow","text":"Figure 2 Here is the Integration flow description The customer begins the checkout process on your website. Your website displays the custom payment form to collect the card\u2019s details. Then the Customer enters the card\u2019s details on the payment page. PayFORT checks the card details. PayFORT creates a token for the Customer transaction and sends it to the payment page. The merchant site sends a payment request along with the Token to PayFORT In case your page receives from PayFORT server a 3-D Secure URL 3ds_url , and response indicating that a 3ds check is required then: Your payment page redirects the Customer to the ACS to check his card enrollment. The Customer enters authentication data on the ACS platform. The ACS performs authentication of the Customer\u2019s data and sends the authentication results to PayFORT. PayFORT completes the operation based on the 3-D Secure response and returns the response to your payment page. PayFORT sends the payment results to your site. In case of 3ds secure check, PayFort returns status 20: On hold and message 064: 3-D Secure check requested message.For example, PayFort is waiting for your payment page to authenticate the Customer. If the Token is sent by the payment page, it will be generated with the same name sent by the website. Payment processing page, payment form and payment details form all refer to payment page on your site where customer will enter card details.","title":"Integration Flow"},{"location":"merchantpage2/#how-to-add-the-tokenization-service-on-the-merchant-page-20-channel","text":"The Tokenization service is applicable to be integrated through the Merchant Page 2.0 Channel through the below steps: 1. The Customer processes the first PURCHASE/ AUTHORIZATION payment successfully. 2. You will receive a token_name in the response. This token_name should be considered as a permanent token name, and it can be used in the future customer\u2019s payments by submitting the token_name in the next PURCHASE/ AUTHORIZATION payment with card_security_code parameter. 3. No need to open the Merchant Page to fill all the card details again in the next checkouts. If the Customer wants to update/ delete his card, you should check Update Token section. For more details on Tokens and Tokenization process visit the link","title":"How to add the Tokenization service on the Merchant Page 2.0 channel?"},{"location":"merchantpage2/#give-it-a-try","text":"Use one of our test cards and corresponding CVV to try out for yourself. You can use any expiry date ( mm/yy ), as long as it's in the future. Supported Credit Cards: Visa Master Card AMEX Credit Cards Not Supported: Diners Club JCB","title":"Give It a Try"},{"location":"merchantpage2/#endpoints","text":"Endpoints for Merchant Page is also applicable for Merchant 2 Integration. You can check the Endpoints by visiting this Sandbox Placeholder : Please provide correct endpoint url for sandbox Live Placeholder: Please provide correct endpoint url for live environment","title":"Endpoints"},{"location":"merchantpage2/#before-you-start","text":"You need to signup for a test account or a live account with PayFORT. Once you signup you will get the access to the Backoffice. Make sure you have your access_code . Refer figure 3. You can find it in the backoffice , under Integration Settings Security Settings > Access Code . If you don't have an account with us yet, you can create a test account by visiting the link . You can also get started with an active account by visiting this link Figure 3 : Uploading custom template The Payment Page Template available in the backoffice provides you the feature to create a custom payment processing page. Refer to the figure 4. Once you upload your custom payment page our support team will validate the same. Figure 4: Generating Access Code.","title":"Before you start"},{"location":"merchantpage2/#sample-code","text":"The following code snippet shown here is an example of the start of the payment process. You can refer to this example, replacing the supplied acccess_code with your own. The card token will be posted via the URL specified in the form's action attribute. <FORM METHOD=\"post\" ACTION=\"https://sbcheckout.PayFort.com/FortAPI/paymentPage\" id=form1 name=form1> <input type=\"hidden\" name=\"service_command\" value=\"TOKENIZATION\"> <input type=\"hidden\" name=\"access_code\" value=\" \"> <input type=\"hidden\" name=\"language\" value=\"en\"> <input type=\"hidden\" name=\"merchant_identifier\" value=\" \"> <input type=\"hidden\" name=\"merchant_reference\" value=\" \"> <input type=\"hidden\" name=\"card_number\" value=\"4005550000000001\"> <input type=\"hidden\" name=\"expiry_date\" value=\"2105\"> <input type=\"hidden\" name=\"card_security_code\" value=\"123\"> <input type=\"hidden\" name=\"return_url\" value=\"https://www.example.com\"> <input type=\"hidden\" name=\"signature\" value=\" \"> <input type=\"submit\" value=\"Pay\" id=\"\" name=\"\"> The above code snippet is an HTML based form that will post a request to PayFORT server. The request parameters are also added in the input tag of the code. However, If you are not familiar with HTML tags and forms then you can checkout this site . The form action tag consists of the endpoints. This will come handy whenever submit action is performed on the page. Once the form is submitted the parameters provided in the form would be sent to the PayFORT server and Endpoints will serve as communication link between your page and PayFORT server.","title":"Sample Code"},{"location":"merchantpage2/#request-parameters","text":"The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment Please refer to the section Merchant Page 2 Request Parameters for request parameters.","title":"Request Parameters"},{"location":"merchantpage2/#response-parameters","text":"The PayFORT server will return the response in JSON format. Here is the sample response along with the parameters returned by PayFORT server. [{ \"service_command\": \"TOKENIZATION\", \"access_code\": \"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\": \"CycHZxVj\", \"merchant_reference\": \"XYZ9239-yu898\", \"language\": \"en\", \"signature\": \"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"token_name\": \"Op9Vmp\", \"expiry_date\": \"2105\", \"card_number\": \"400555*****0001\", \"response_message\": \"012\", \"response_code\": \"11012\", \"status\": \"11\", \"card_bin\": \"478773\", \"card_holder_name\": \"John Smith\", \"remember_me\": \"No\", \"return_url\": \"http://www.merchant.com\" }] Please refer to the section Merchant Page 2 Response for reponse parameters.","title":"Response Parameters"},{"location":"merchantpage2/#go-to-full-api","text":"Check out our full API by visiting this link To learn more about Tokens and Tokenization process visit this link","title":"Go to Full API"},{"location":"merchantpage2/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"merchantpageintegration/","text":"Merchant Page Integration allows you to accept the Customer\u2019s payments in your website by collecting their credit card information using one of the two methods mentioned in this page. PayFort processes the transaction and returns the results back to the Merchants through invisible redirection. Endpoints An endpoint is one end of a communication channel and your merchant site will communicate with the PayFORT resources using Endpoints. For PayFORT APIs , an endpoint includes a URL of PayFORT server or service. Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage Merchant Page Integration There are two ways to integrate Merchant pages Merchant Page 1 Merchant Page 2 What is iFrame for Web? You can setup payment form and start accepting payments within few minutes with the help of iFrame. PayFORT provides easy to use iFrame which can be easily integrated with your payment form. It takes the look and feel of your merchant site and accepts payments from major credit cards including MADA, VISA, Mastercard, etc. You develop your site in any technology of your choice and integrate the iFrame in your html based checkout page. The PayFORT iframe takes the look and feel as that of your website. Figure 1 - Using PayFORT iFrame for web How it Works? Your checkout page will display an integrated PayFORT iFrame to your Customer that has the same look and feel as that of your website. Customer fills his/her payment details in the checkout page. PayFORT server receives the payment details and validates the same. PayFORT then sends a token to your checkout page to complete the transaction. You have the option to redirect the Customer directly to the checkout page. For more details on Tokens and Tokenization process visit the Link Integration Flow Figure 2 : Integration Flow using iFrame Here is the description of the PayFORT iFrame Integration workflow : The customer begins the checkout process on your website. The payment page with integrated iFrame is displayed. The Customer then enters the card\u2019s details on the payment page. PayFORT checks the card details. PayFORT creates a token for the Customer transaction and sends it to the payment page. The Payment page then sends a JSON request along with the token to PayFORT. In case your page receives from PayFORT server a 3-D Secure URL 3ds_url , and response indicating that a 3ds check is required then: Your payment page redirects the Customer to the ACS to check his card enrollment. The Customer enters authentication data on the ACS platform. The ACS performs authentication of the Customer\u2019s data and sends the authentication results to PayFORT. PayFORT completes the operation based on the 3-D Secure response and returns the response to your payment page. PayFORT sends the payment results to your site. In case of 3ds secure check, PayFort returns status 20: On hold and message 064: 3-D Secure check requested message.For example, PayFort is waiting for your payment page to authenticate the Customer. If you include the token_name parameter in the request and this Token already has a successful Authorization, then the card number (masked) and expiry date will be displayed in their allocated fields. If the Token is sent by you, it will be generated with the same name as sent by your page. Payment processing page, payment form and payment details form all refer to payment page on your site where customer will enter card details. For more details on Tokens and Tokenization process visit the Link Integrate iFrames to Payment Page If you are planning to use PayFORT iFrames then you can use the endpoints Endpoints for testing and and also for going live. You can use programming language of your choice or what your site uses and can use the iFrame in your html based check out page. Before you start Make sure you have your access_code . Refer to Figure 3 . You can find it in the backoffice , under Integration Settings > Security Settings > Access Code . If you don't have an account with us yet, you can create a test account by visiting the Link . You can also get started with an active account by visiting this link . Once you signup you will get the access to the Backoffice. You can check out more about navigating through backoffice by visiting this link Figure 3 : Access Code Generation The Payment Page Template available in the backoffice provides you the feature to create a payment processing page using PayFort iFrame. Refer to the Figure 4 Figure 4 : Use Payment Settings to create a payment form Sample iFrame code snippet The following sample code snippet is the start of the payment process and allows you to tokenize a customer's sensitive card information using iFrames. <html> </head> <body> <iframe style=\"border:5px dotted red\" name=\"myframe\" src = \"\" width=\"400\" height=\"600\"> </iframe> <form action=\"https://sbcheckout.payfort.com/FortAPI/paymentPage\" method=\"post\" id=\"\" target=\"myframe\"> <INPUT type=\"hidden\" NAME=\"service_command\" value=\"TOKENIZATION\"> <INPUT type=\"hidden\" NAME=\"language\" value=\" \"> <INPUT type=\"hidden\" NAME=\"merchant_identifier\" value=\"\"> <INPUT type=\"hidden\" NAME=\"access_code\" value=\"\"> <INPUT type=\"hidden\" NAME=\"signature\" value=\"\"> <INPUT type=\"hidden\" NAME=\"return_url\" value=\"\"> <INPUT type=\"hidden\" NAME=\"merchant_reference\" value=\"\"> <input value=\"Send\" type=\"submit\" id=\"form1\"> </form> </body> </html> The above code snippet is an HTML based form that will post a request to PayFORT server. The request parameters are also added in the input tag of the code. However, If you are not familiar with HTML tags and forms then you can checkout this site The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment The form consists of iframe tag which specifies the style, name of the style (you can give any name to your style), source code location, width and height of the iframe. All these are customizable values which you can provide. The form action tag consists of the endpoints . This will come handy whenever submit action is performed on the page. Once the form is submitted the parameters provided in the form would be sent to the PayFORT server and Endpoints will serve as communication link between your page and PayFORT server. Here is the description of the input parameters: The very first input parameter is the service command Tokenization. This service command will provide the server with a valid command that it should perform once it receives the request. The second input parameter denotes the language. There are two options which you can use. The languages supported by our platform are en/ar . You can provide either english(en) or arabic(ar) in the input parameter value. The third input parameter is merchant identifier and the value of the same can be check in the [backoffice](backoffice.md) The fourth input parameter is the access code and again its value can be found in backoffice. The fifth input parameter is the signature which is a SHA based and can be generated in the backoffice. The sixth input parameter is the return url which the url of the page where you would like to receive the response of the PayFORT server or the response to your request The seventh input parameter is the merchant reference which is nothing but unique order number You need to provide the values of all the input parameters in the value field before your payment page can send request to the PayFORT server Finally the laster input parameter would be a submit parameter which would submit the form and the request would be forwarded to the PayFORT server For more details on Tokens and Tokenization process visit the link What is Custom Payment Form? You can also build your own custom payment form without using default payment template provided by PayFoRT. Figure 1 How it works? You develop your own custom payment details form that collects the card details (credit card number, expiry date, CVV), and sends the request to PayFORT server. PayFort receives the payment details and returns the response which includes the token to your payment processing page. You use the token to complete the [Authorization or Purchase operation](https://docs.payfort.com/docs/api/build/index.html#operations-request). You should develop a form that does not send data to your website but directly submits the form to PayFORT. To learn more about Tokens and Tokenization process visit this [link](tokenization.md) Integration Flow Figure 2 Here is the Integration flow description The customer begins the checkout process on your website. Your website displays the custom payment form to collect the card\u2019s details. Then the Customer enters the card\u2019s details on the payment page. PayFORT checks the card details. PayFORT creates a token for the Customer transaction and sends it to the payment page. The Payment page then sends a JSON request along with the token to PayFORT. In case your page receives from PayFORT server a 3-D Secure URL 3ds_url , and response indicating that a 3ds check is required then: Your payment page redirects the Customer to the ACS to check his card enrollment. The Customer enters authentication data on the ACS platform. The ACS performs authentication of the Customer\u2019s data and sends the authentication results to PayFORT. PayFORT completes the operation based on the 3-D Secure response and returns the response to your payment page. PayFORT sends the payment results to your site. In case of 3ds secure check, PayFort returns status 20: On hold and message 064: 3-D Secure check requested message.For example, PayFort is waiting for your payment page to authenticate the Customer. If the Token is sent by the payment page, it will be generated with the same name sent by the website. Payment processing page, payment form and payment details form all refer to payment page on your site where customer will enter card details. For more details on Tokens and Tokenization process visit the [link](tokenization.md) Use Endpoints in your Custom Payment Page If you are planning to use your own custom payment page then you can use the endpoints for testing and and also for going live. Before you start Make sure you have your `access_code`. Refer figure 3. You can find it in the [backoffice](https://fort.payfort.com/account/MerchantManagement/EntitySecurity), under Integration Settings Security Settings > Access Code . If you don't have an account with us yet, you can create a test account by visiting the [link](\"https://www.payfort.com/test-account/\"). You can also get started with an active account by visiting this [link](https://www.payfort.com/get-started/) Figure 2 : Uploading custom template The Payment Page Template available in the backoffice provides you the feature to create a custom payment processing page. Refer to the figure 2. Once you upload your custom payment page our support team will validate the same. Figure 3: Generating Access Code. Add the code snippet to your site The following code snippet shown here is an example of the start of the payment process. You can refer to this example, replacing the supplied `acccess_code` with your own. The card token will be posted via the URL specified in the form's `action` attribute. HTML <html> <body> <form method=\"post\" action=\"https://sbcheckout.payfort.com/FortAPI/paymentPage\" id=form1 name=form1> <input type=\"hidden\" NAME=\"service_command\" value=\"TOKENIZATION\"> <input type=\"hidden\" NAME=\"language\" value=\" \"> <input type=\"hidden\" NAME=\"merchant_identifier\" value=\" \"> <input type=\"hidden\" NAME=\"access_code\" value=\" \"> <input type=\"hidden\" NAME=\"signature\" value=\"\"> <input type=\"hidden\" NAME=\"return_url\" value=\" \"> <input type=\"hidden\" NAME=\"merchant_reference\" value=\"\"> <input type=\"hidden\" NAME=\"card_number\" value=\"\"> <input type=\"hidden\" NAME=\"expiry_date\" value=\"\"> <input type=\"hidden\" NAME=\"card_security_code\" value=\"\"> <input type=\"hidden\" NAME=\"card_holder_name\" value=\" \"> <input type=\"submit\" value=\"\" id=\"submit2\" name=\"\"> </form> </body> </html> The above code snippet is an HTML based form that will post a request to PayFORT server. The request parameters are also added in the input tag of the code. However, If you are not familiar with HTML tags and forms then you can checkout this [site](https://www.w3schools.com/). The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment The form action tag consists of the endpoints [ ](#endpoints). This will come handy whenever submit action is performed on the page. Once the form is submitted the parameters provided in the form would be sent to the PayFORT server and Endpoints will serve as communication link between your page and PayFORT server. Here is the description of the input parameters: The very first input parameter is the service command Tokenization. This service command will provide the server with a valid command that it should perform once it receives the request. The second input parameter denotes the language. There are two options which you can use. The languages supported by our platform are **en/ar** . You can provide either english(en) or arabic(ar) in the input parameter value. The third input parameter is merchant identifier and the value of the same can be check in the [backoffice](backoffice.md). The fourth input parameter is the access code and again its value can be found in backoffice. The fifth input parameter is the signature which is a SHA based and can be generated in the backoffice. The sixth input parameter is the return url which the url of the page where you would like to receive the response of the PayFORT server or the response to your request. The seventh input parameter is the merchant reference which is nothing but unique order number. You need to provide the values of all the input parameters in the value field before your payment page can send request to the PayFORT server. Finally the laster input parameter would be a submit parameter which would submit the form and the request would be forwarded to the PayFORT server. For more details on Tokens and Tokenization process visit the [link ](tokenization.md) Payment Page Customization When you begin designing your own custom payment page you will also need to style your custom payment page so that it is in line with the look and feel of your website. Inorder to style your custom payment page you will require CSS files and within those files you need use the css classes. If you are new to HTML and CSS don't worry you can visit this [link](https://www.w3schools.com/css/default.asp) to learn about HTML/CSS. This is a list with all customizable CSS classes on the basic payment page: - **The `Wrapper` class** It is responsible for the total width of the form container and the background. - **The `Container` class** It is responsible for the form\u2019s shape and width. - **The `Popover` class** It is responsible for the error messages. - **The `Half-container` class** It is used to merge the date and CVV fields into one block if needed. - **The `Input` class** It is the container of each single input field. - **The `Pay` class** It is responsible for the submit button. - **The `Visa/ MasterCard` classes** It is used to change the color of the Visa/ MasterCard colors. You can always create multiple theme files that will enable you to switch freely and easily between them when necessary.Theme files offer you the flexibility to change the look and feel of your page. Theme files can be uploaded from the back-office using the Payment Page template screen. Get Started With Testing If you have developed your payment page then you can proceed with creation of a testing account by visiting [link](\"https://www.payfort.com/test-account/\") Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at [support@payfort.com](mailto:support@payfort.com).","title":"Merchantpageintegration"},{"location":"merchantpageparameters/","text":"This page describe the request parameters that you are required to send through your payment processing page and the response parameters that will be sent back by the PayFORT server. The page describes the request parameters for both Merchant Page and Merchant Page 2 integrations and response for Merchant Page and Merchant Page 2 . Merchant Page Request Parameters submission type HTTPs Form Post Request List of Request Parameters service_command (String, mandatory) Maximum Length Possible Value Description 20 TOKENIZATION Command for server to understand what type of service it requires to provide. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz The access code generated in the back office. merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj The ID of the Merchant which can be found in the back office merchant_reference (alphanumeric, mandatory) Maximum Length Example Special character Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String, mandatory) Maximum Length Possible Values Description 2 en/ar The checkout page and messages language where en stands for english and ar for arabic. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special character Description 100 Op9Vmp . @ - _ The token received from the Tokenization process. return_url (alphanumeric, optional) Length Example Special character Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Merchant Page Response List of Response Parameters that would be sent back by the PayFORT Server as a JSON format service_command (String) Maximum Length Possible/Expected Value Description 20 TOKENIZATION service command. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 access code generated. merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj The ID of the Merchant. merchant_reference (alphanumeric) Maximum Length Example Special character Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String) Maximum Length Possible/Expected Values Description 2 en/ar The checkout page and messages language where en stands for english and ar for arabic. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special character Description 100 Op9Vmp . @ - _ The token received from the Tokenization process. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 19 2105 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 response_message (alphanumeric) Maximum Length Possible/Expected Values Description 150 Please refer to section messages Message description of the response code. It returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of PayFORT system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/Expected Value Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. card_bin (numeric) Maximum Length Example Description 8 478773 The first 6 digits of the card number. *If the card number for MEEZA was of length 19 then the card bin will be the first 8 digits. return_url (alphanumeric, optional) Length Example Special character Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Merchant Page 2 Request Parameters submission type HTTPs Form Post Request List of Request Parameters service_command (String, mandatory) Maximum Length Possible Value Description 20 TOKENIZATION Command for server to understand what type of service it requires to provide. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz The access code generated in the back office. merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj The ID of the Merchant which can be found in the back office merchant_reference (alphanumeric, mandatory) Maximum Length Example Special character Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String, mandatory) Maximum Length Possible Values Description 2 en/ar The checkout page and messages language where en stands for english and ar for arabic. expiry_date (numeric, mandatory) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric, mandatory) Maximum Length Example Description 19 4005550000000001 Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. card_security_code (numeric, mandatory) Maximum Length Example Description 4 123 A security code for the card. * Only AMEX accepts card security code of 4 digits. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special character Description 100 Op9Vmp . @ - _ The token received from the Tokenization process. card_holder_name (String, optional) Maximum Length Example Special character Description 50 John Smith ' - . The card holder name. remember_me (String, optional) Maximum Length Possible/Expected values Special character Description 50 -YES -NO ' - . The card holder name. return_url (alphanumeric, optional) Length Example Special character Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Please don\u2019t include the following parameters in calculating the signature if you are using Merchant Page 2.0 tokenization request: card_security_code, card number, expiry_date, card_holder_name, remember_me. Merchant Page 2 Response List of Response Parameters that would be sent back by the PayFORT Server as a JSON format service_command (String) Maximum Length Possible/Expected Value Description 20 TOKENIZATION service command. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 access code generated. merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj The ID of the Merchant. merchant_reference (alphanumeric) Maximum Length Example Special character Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String) Maximum Length Possible/Expected Values Description 2 en/ar The checkout page and messages language where en stands for english and ar for arabic. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special character Description 100 Op9Vmp . @ - _ The token received from the Tokenization process. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 19 2105 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 response_message (alphanumeric) Maximum Length Possible/Expected Values Description 150 Please refer to section messages Message description of the response code. It returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of PayFORT system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/Expected Value Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. card_bin (numeric) Maximum Length Example Description 8 478773 The first 6 digits of the card number.*If the card number for MEEZA was of length 19 then the card bin will be the first 8 digits. card_holder_name (String) Maximum Length Example Description 50 John Smith The card holder name. remember_me (String) Maximum Length Possible/Expected values Description 3 - YES, - NO This parameter provides you with an indication to whether to save this token for the user based on the user selection. return_url (alphanumeric, optional) Length Example Special character Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-.","title":"Merchant Page Parameters"},{"location":"merchantpageparameters/#merchant-page-request-parameters","text":"submission type HTTPs Form Post Request List of Request Parameters service_command (String, mandatory) Maximum Length Possible Value Description 20 TOKENIZATION Command for server to understand what type of service it requires to provide. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz The access code generated in the back office. merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj The ID of the Merchant which can be found in the back office merchant_reference (alphanumeric, mandatory) Maximum Length Example Special character Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String, mandatory) Maximum Length Possible Values Description 2 en/ar The checkout page and messages language where en stands for english and ar for arabic. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special character Description 100 Op9Vmp . @ - _ The token received from the Tokenization process. return_url (alphanumeric, optional) Length Example Special character Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed.","title":"Merchant Page Request Parameters"},{"location":"merchantpageparameters/#merchant-page-response","text":"List of Response Parameters that would be sent back by the PayFORT Server as a JSON format service_command (String) Maximum Length Possible/Expected Value Description 20 TOKENIZATION service command. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 access code generated. merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj The ID of the Merchant. merchant_reference (alphanumeric) Maximum Length Example Special character Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String) Maximum Length Possible/Expected Values Description 2 en/ar The checkout page and messages language where en stands for english and ar for arabic. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special character Description 100 Op9Vmp . @ - _ The token received from the Tokenization process. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 19 2105 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 response_message (alphanumeric) Maximum Length Possible/Expected Values Description 150 Please refer to section messages Message description of the response code. It returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of PayFORT system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/Expected Value Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. card_bin (numeric) Maximum Length Example Description 8 478773 The first 6 digits of the card number. *If the card number for MEEZA was of length 19 then the card bin will be the first 8 digits. return_url (alphanumeric, optional) Length Example Special character Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed.","title":"Merchant Page Response"},{"location":"merchantpageparameters/#merchant-page-2-request-parameters","text":"submission type HTTPs Form Post Request List of Request Parameters service_command (String, mandatory) Maximum Length Possible Value Description 20 TOKENIZATION Command for server to understand what type of service it requires to provide. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz The access code generated in the back office. merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj The ID of the Merchant which can be found in the back office merchant_reference (alphanumeric, mandatory) Maximum Length Example Special character Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String, mandatory) Maximum Length Possible Values Description 2 en/ar The checkout page and messages language where en stands for english and ar for arabic. expiry_date (numeric, mandatory) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric, mandatory) Maximum Length Example Description 19 4005550000000001 Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. card_security_code (numeric, mandatory) Maximum Length Example Description 4 123 A security code for the card. * Only AMEX accepts card security code of 4 digits. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special character Description 100 Op9Vmp . @ - _ The token received from the Tokenization process. card_holder_name (String, optional) Maximum Length Example Special character Description 50 John Smith ' - . The card holder name. remember_me (String, optional) Maximum Length Possible/Expected values Special character Description 50 -YES -NO ' - . The card holder name. return_url (alphanumeric, optional) Length Example Special character Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Please don\u2019t include the following parameters in calculating the signature if you are using Merchant Page 2.0 tokenization request: card_security_code, card number, expiry_date, card_holder_name, remember_me.","title":"Merchant Page 2 Request Parameters"},{"location":"merchantpageparameters/#merchant-page-2-response","text":"List of Response Parameters that would be sent back by the PayFORT Server as a JSON format service_command (String) Maximum Length Possible/Expected Value Description 20 TOKENIZATION service command. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 access code generated. merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj The ID of the Merchant. merchant_reference (alphanumeric) Maximum Length Example Special character Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. language (String) Maximum Length Possible/Expected Values Description 2 en/ar The checkout page and messages language where en stands for english and ar for arabic. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special character Description 100 Op9Vmp . @ - _ The token received from the Tokenization process. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 19 2105 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 response_message (alphanumeric) Maximum Length Possible/Expected Values Description 150 Please refer to section messages Message description of the response code. It returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of PayFORT system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/Expected Value Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. card_bin (numeric) Maximum Length Example Description 8 478773 The first 6 digits of the card number.*If the card number for MEEZA was of length 19 then the card bin will be the first 8 digits. card_holder_name (String) Maximum Length Example Description 50 John Smith The card holder name. remember_me (String) Maximum Length Possible/Expected values Description 3 - YES, - NO This parameter provides you with an indication to whether to save this token for the user based on the user selection. return_url (alphanumeric, optional) Length Example Special character Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-.","title":"Merchant Page 2 Response"},{"location":"mobilesdk/","text":"Mobile SDKs The PayFORT Mobile SDK allows you to securely integrate the payment functions. It also allows you to easily accept In-App payments. Instead of the traditional, time-consuming, and complex way of being redirected to the mobile browser to complete the payment, In-App payments can be completed through our FORT Mobile SDK . In turn, this gives the your customers a smooth, pleasing user-experience by using In-App payment functions through the native applications. Features of PayFort SDKs Native in-app payment. Fully secure. Fully customized. Mobile SDK Integration Workflow When your customer initiates the payment on your merchant app, your app requests Payfort server for a new token every time, then process the customer's payment. When PayFort server sends a successful response to your site your backend is notified of successful payment and your backend server confirms the same with Payfort server. Here is the description of mobile sdk integration workflow: The Merchant\u2019s application initiates the FORT Mobile SDK and passes the parameters to the FORT Mobile SDK. The FORT Mobile SDK starts a secure connection and passes the received parameters to the FORT API to be validated. The FORT API returns the validation response. The FORT Mobile SDK submits the cardholder\u2019s data to the FORT API to process the order. The FORT API validates and processes the order with the third parties. The FORT API returns the FORT response. The FORT Mobile SDK returns the response to the corresponding callback method. For more details on PayFORT Android SDK Integration visit this link For more details on PayFORT iOS SDK Integration visit this link Mobile SDK Libraries You can download the two available FORT mobile sdk libraries from this section. iOS The FORT Mobile SDK supports all devices running iOS 8+ Get Started SDK 2.1 for iOS Android The FORT Mobile SDK supports all devices running Android 4.1.x (API level 16). Get Started SDK 1.5 for Android Mobile SDK Token A Mobile SDK Token is required to authenticate every request sent to the SDK. The Token is also important to process payment operations in the FORT through our FORT Mobile SDK. A unique Token should be created for each transaction. Each Token has a life-time of only one hour if no new request from the same device is sent. The creation and initiation of a Mobile SDK Token happens on your server side. SDK Token Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi SDK Token Request Placeholder for sample code. You can check out the full list of parameters that are required for SDK Token request by visiting this link SDK Response Placeholder for sample JSON response. Go to Full API Check out our full API by visiting this link Check out iOS integrations by visiting this link Check out Android integrations by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Mobile SDK Library"},{"location":"mobilesdk/#mobile-sdks","text":"The PayFORT Mobile SDK allows you to securely integrate the payment functions. It also allows you to easily accept In-App payments. Instead of the traditional, time-consuming, and complex way of being redirected to the mobile browser to complete the payment, In-App payments can be completed through our FORT Mobile SDK . In turn, this gives the your customers a smooth, pleasing user-experience by using In-App payment functions through the native applications.","title":"Mobile SDKs"},{"location":"mobilesdk/#features-of-payfort-sdks","text":"Native in-app payment. Fully secure. Fully customized.","title":"Features of PayFort SDKs"},{"location":"mobilesdk/#mobile-sdk-integration-workflow","text":"When your customer initiates the payment on your merchant app, your app requests Payfort server for a new token every time, then process the customer's payment. When PayFort server sends a successful response to your site your backend is notified of successful payment and your backend server confirms the same with Payfort server. Here is the description of mobile sdk integration workflow: The Merchant\u2019s application initiates the FORT Mobile SDK and passes the parameters to the FORT Mobile SDK. The FORT Mobile SDK starts a secure connection and passes the received parameters to the FORT API to be validated. The FORT API returns the validation response. The FORT Mobile SDK submits the cardholder\u2019s data to the FORT API to process the order. The FORT API validates and processes the order with the third parties. The FORT API returns the FORT response. The FORT Mobile SDK returns the response to the corresponding callback method. For more details on PayFORT Android SDK Integration visit this link For more details on PayFORT iOS SDK Integration visit this link","title":"Mobile SDK Integration Workflow"},{"location":"mobilesdk/#mobile-sdk-libraries","text":"You can download the two available FORT mobile sdk libraries from this section.","title":"Mobile SDK Libraries"},{"location":"mobilesdk/#mobile-sdk-token","text":"A Mobile SDK Token is required to authenticate every request sent to the SDK. The Token is also important to process payment operations in the FORT through our FORT Mobile SDK. A unique Token should be created for each transaction. Each Token has a life-time of only one hour if no new request from the same device is sent. The creation and initiation of a Mobile SDK Token happens on your server side.","title":"Mobile SDK Token"},{"location":"mobilesdk/#sdk-token-endpoints","text":"","title":"SDK Token Endpoints"},{"location":"mobilesdk/#sandbox","text":"POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi","title":"Sandbox"},{"location":"mobilesdk/#live","text":"POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Live"},{"location":"mobilesdk/#sdk-token-request","text":"Placeholder for sample code. You can check out the full list of parameters that are required for SDK Token request by visiting this link","title":"SDK Token Request"},{"location":"mobilesdk/#sdk-response","text":"Placeholder for sample JSON response.","title":"SDK Response"},{"location":"mobilesdk/#go-to-full-api","text":"Check out our full API by visiting this link Check out iOS integrations by visiting this link Check out Android integrations by visiting this link","title":"Go to Full API"},{"location":"mobilesdk/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"monitor/","text":"Real Time Monitoring(RTM) through PayFORT BackOffice The Monitoring Dashboard tool is a tool that allows you to track your account\u2019s performance using multiple metrics. This tool provides real-time visibility to your account\u2019s day-to-day performance. We recommend using this tool to monitor transactions for the period of one week. The profile types that can access RTM services are Super Sub Merchant , Super Main Merchant , Merchant Financial User . Steps to access RTM service Login to your PayFORT account and click on Monitoring Dashboard option on the left hand side of the screen. Once the dashboard opens you will get a screen as shown below. You have to select from date range along with the option to select Merchant account, processor, currency, Issuer, Payment Option and Bin Number. Once you provide the required input and click on search option. It will provide you with various metrics as shown below. For more details on RTM services please watch this video. The metrics are available only for the period of 30 days only. Configuring Monitoring Alerts You can also configure your own monitoring alerts through the dashboard. Follow the steps to configure the same. Steps to configure monitoring alerts Click on your profile icon at the top right corner of the dashboard screen. A menu will be displayed as shown below. Select Monitoring Alert Config option from the menu and you will be able to see the alert config dashboard as shown below Click on Add config to configure your monitoring alert. Provide which metric you want to add to alert, criteria, threshold values, duration and the merchant account you want to monitor. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Monitor"},{"location":"monitor/#real-time-monitoringrtm-through-payfort-backoffice","text":"The Monitoring Dashboard tool is a tool that allows you to track your account\u2019s performance using multiple metrics. This tool provides real-time visibility to your account\u2019s day-to-day performance. We recommend using this tool to monitor transactions for the period of one week. The profile types that can access RTM services are Super Sub Merchant , Super Main Merchant , Merchant Financial User .","title":"Real Time Monitoring(RTM) through PayFORT BackOffice"},{"location":"monitor/#steps-to-access-rtm-service","text":"Login to your PayFORT account and click on Monitoring Dashboard option on the left hand side of the screen. Once the dashboard opens you will get a screen as shown below. You have to select from date range along with the option to select Merchant account, processor, currency, Issuer, Payment Option and Bin Number. Once you provide the required input and click on search option. It will provide you with various metrics as shown below. For more details on RTM services please watch this video. The metrics are available only for the period of 30 days only.","title":"Steps to access RTM service"},{"location":"monitor/#configuring-monitoring-alerts","text":"You can also configure your own monitoring alerts through the dashboard. Follow the steps to configure the same. Steps to configure monitoring alerts Click on your profile icon at the top right corner of the dashboard screen. A menu will be displayed as shown below. Select Monitoring Alert Config option from the menu and you will be able to see the alert config dashboard as shown below Click on Add config to configure your monitoring alert. Provide which metric you want to add to alert, criteria, threshold values, duration and the merchant account you want to monitor.","title":"Configuring Monitoring Alerts"},{"location":"monitor/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"monitor/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"moto/","text":"MOTO Channel Now your customers can make transactions through mobile and Telephone orders also. MOTO (Mobile Order/ Telephone Order) channel allows the you to process MOTO transactions through the FORT API using credit card Tokens ONLY. Whenever any customer places an order in your site he/she can carry out transactions over the telephone and cellphone IVR. Endpoints Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. The Request The sample JSON Request Placeholder: Provide Sample code for MOTO request. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. For input parameters please visit the link The Response Here is the response that would be sent by PayFORT to the request sent to it for MOTO transactions. {\"command\":\"PURCHASE\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"customer_email\":\"customer@domain.com\", \"eci\":\"MOTO\", \"token_name\":\"Op9Vmp\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone6-S\", \"fort_id\":\"149295435400084008\", \"payment_option\":\"MASTERCARD\", \"customer_ip\":\"192.178.1.10\", \"customer_name\":\"John Smith\", \"authorization_code\":\"P1000000000000372136\", \"response_message\":\"Success\", \"response_code\":\"20064\", \"status\":\"04\", \"expiry_date\":\"2105\", \"card_number\":\"400555******0001\", \"phone_number\":\"00962797219966\", \"settlement_reference\":\"XYZ9239-yu898\", \"merchant_extra\":\"JohnSmith\", \"merchant_extra1\":\"JohnSmith\", \"merchant_extra2\":\"JohnSmith\", \"merchant_extra3\":\"JohnSmith\", \"merchant_extra4\":\"JohnSmith\", \"merchant_extra5\":\"JohnSmith\", \"return_url\":\"http://www.merchant.com\" } Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Moto"},{"location":"moto/#moto-channel","text":"Now your customers can make transactions through mobile and Telephone orders also. MOTO (Mobile Order/ Telephone Order) channel allows the you to process MOTO transactions through the FORT API using credit card Tokens ONLY. Whenever any customer places an order in your site he/she can carry out transactions over the telephone and cellphone IVR.","title":"MOTO Channel"},{"location":"moto/#endpoints","text":"Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"moto/#parameters-submission-type","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"moto/#the-request","text":"The sample JSON Request Placeholder: Provide Sample code for MOTO request. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. For input parameters please visit the link","title":"The Request"},{"location":"moto/#the-response","text":"Here is the response that would be sent by PayFORT to the request sent to it for MOTO transactions. {\"command\":\"PURCHASE\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"customer_email\":\"customer@domain.com\", \"eci\":\"MOTO\", \"token_name\":\"Op9Vmp\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone6-S\", \"fort_id\":\"149295435400084008\", \"payment_option\":\"MASTERCARD\", \"customer_ip\":\"192.178.1.10\", \"customer_name\":\"John Smith\", \"authorization_code\":\"P1000000000000372136\", \"response_message\":\"Success\", \"response_code\":\"20064\", \"status\":\"04\", \"expiry_date\":\"2105\", \"card_number\":\"400555******0001\", \"phone_number\":\"00962797219966\", \"settlement_reference\":\"XYZ9239-yu898\", \"merchant_extra\":\"JohnSmith\", \"merchant_extra1\":\"JohnSmith\", \"merchant_extra2\":\"JohnSmith\", \"merchant_extra3\":\"JohnSmith\", \"merchant_extra4\":\"JohnSmith\", \"merchant_extra5\":\"JohnSmith\", \"return_url\":\"http://www.merchant.com\" } Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones.","title":"The Response"},{"location":"moto/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"moto/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"motoparameters/","text":"MOTO Request Parameters ATTRIBUTES Description command Alpha Mandatory max: 20 Command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . amount Numeric Mandatory max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory max: 2 The checkout page and messages language. Possible/ expected values: en / ar customer_email Alphanumeric Mandatory max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + eci Alpha Mandatory max: 16 Ecommerce indicator. Possible/ expected values: MOTO token_name Alphanumeric Mandatory max: 100 The token received from the Tokenization process. Example: Op9Vmp Special characters: _ - . @ signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a payment_option Alpha Optional max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX order_description Alphanumeric Optional max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space customer_ip Alphanumeric Optional max: 45 It holds the customer\u2019s IP address. It\u2019s Mandatory, if the fraud service is active. We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : customer_name Alpha Optional max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space phone_number Alphanumeric Optional max: 19 The customer\u2019s phone number. Example: 00962797219966 Special characters: + - ( ) Space settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Special characters: - _ . merchant_extra Alphanumeric Optional Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra1 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra2 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra3 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra4 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra5 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ return_url Alphanumeric Optional max: 400 The URL of the Merchant\u2019s page to be redirected to when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. MOTO Response ATTRIBUTES Description command Alpha max: 20 Command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 amount Numeric max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar customer_email Alphanumeric max: 254 The customer\u2019s email. Example: customer@domain.com eci Alpha max: 16 Ecommerce indicator. Possible/ expected values: MOTO token_name Alphanumeric max: 100 The token received from the Tokenization process. Example: Op9Vmp signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a fort_id Numeric max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 payment_option Alpha max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX order_description Alphanumeric max: 150 It holds the description of the order. Example: iPhone 6-S customer_ip Alphanumeric max: 45 It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf customer_name Alpha max: 40 The customer\u2019s name. Example: John Smith authorization_code Alphanumeric max: 100 The authorization code returned from the 3rd party. Example: P1000000000000372136 response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). expiry_date Numeric max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric max: 16 The card\u2019s number masked based on a certain standard that is selected in the technical settings. Example: 400555 * *0001 phone_number Alphanumeric max: 19 The customer\u2019s phone number. Example: 00962797219966 settlement_reference Alphanumeric max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 merchant_extra Alphanumeric Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra1 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra2 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra3 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra4 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra5 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith return_url Alphanumeric max: 400 The URL of the Merchant\u2019s page to be redirected to when the order is processed. Example: http://www.merchant.com Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"MOTO Parameters"},{"location":"motoparameters/#moto-request-parameters","text":"ATTRIBUTES Description command Alpha Mandatory max: 20 Command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . amount Numeric Mandatory max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory max: 2 The checkout page and messages language. Possible/ expected values: en / ar customer_email Alphanumeric Mandatory max: 254 The customer\u2019s email. Example: customer@domain.com Special characters: _ - . @ + eci Alpha Mandatory max: 16 Ecommerce indicator. Possible/ expected values: MOTO token_name Alphanumeric Mandatory max: 100 The token received from the Tokenization process. Example: Op9Vmp Special characters: _ - . @ signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a payment_option Alpha Optional max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX order_description Alphanumeric Optional max: 150 It holds the description of the order. Example: iPhone 6-S Special characters: ' / . _ - # : $ Space customer_ip Alphanumeric Optional max: 45 It holds the customer\u2019s IP address. It\u2019s Mandatory, if the fraud service is active. We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf Special characters: . : customer_name Alpha Optional max: 40 The customer\u2019s name. Example: John Smith Special characters: _ \\ / - . ' Space phone_number Alphanumeric Optional max: 19 The customer\u2019s phone number. Example: 00962797219966 Special characters: + - ( ) Space settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 Special characters: - _ . merchant_extra Alphanumeric Optional Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra1 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra2 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra3 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra4 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ merchant_extra5 Alphanumeric Optional Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith Special characters: . ; / _ - , ' @ return_url Alphanumeric Optional max: 400 The URL of the Merchant\u2019s page to be redirected to when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"MOTO Request Parameters"},{"location":"motoparameters/#moto-response","text":"ATTRIBUTES Description command Alpha max: 20 Command. Possible/ expected values: AUTHORIZATION, PURCHASE access_code Alphanumeric max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 amount Numeric max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar customer_email Alphanumeric max: 254 The customer\u2019s email. Example: customer@domain.com eci Alpha max: 16 Ecommerce indicator. Possible/ expected values: MOTO token_name Alphanumeric max: 100 The token received from the Tokenization process. Example: Op9Vmp signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a fort_id Numeric max: 20 The order\u2019s unique reference returned by our system. Example: 149295435400084008 payment_option Alpha max: 10 Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX order_description Alphanumeric max: 150 It holds the description of the order. Example: iPhone 6-S customer_ip Alphanumeric max: 45 It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example below. Example: IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf customer_name Alpha max: 40 The customer\u2019s name. Example: John Smith authorization_code Alphanumeric max: 100 The authorization code returned from the 3rd party. Example: P1000000000000372136 response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). expiry_date Numeric max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric max: 16 The card\u2019s number masked based on a certain standard that is selected in the technical settings. Example: 400555 * *0001 phone_number Alphanumeric max: 19 The customer\u2019s phone number. Example: 00962797219966 settlement_reference Alphanumeric max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: XYZ9239-yu898 merchant_extra Alphanumeric Max: 999 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra1 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra2 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra3 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra4 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith merchant_extra5 Alphanumeric Max: 250 Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Example: JohnSmith return_url Alphanumeric max: 400 The URL of the Merchant\u2019s page to be redirected to when the order is processed. Example: http://www.merchant.com Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"MOTO Response"},{"location":"plugins/","text":"Get Started With PayFort Plugins PAYFORT offers the following free gateway plugins to help you enable \u201cPayFort Payment Gateway\u201d easily to your e-Commerce store. So your customers will be able to complete their payments through PayFort gateway, Plus you can customize these plugins to meet your needs! Prestashop Get Started Github Repo Woocommerce Get Started Github Repo Magento Get Started Github Repo Magento 2 Get Started Github Repo Cs Cart 3 Get Started Github Repo Cs Cart 4 Get Started Github Repo Open Cart Get Started Github Repo Open Cart 2 Get Started Github Repo Php Get Started Github Repo","title":"Plugins"},{"location":"plugins/#get-started-with-payfort-plugins","text":"PAYFORT offers the following free gateway plugins to help you enable \u201cPayFort Payment Gateway\u201d easily to your e-Commerce store. So your customers will be able to complete their payments through PayFort gateway, Plus you can customize these plugins to meet your needs!","title":"Get Started With PayFort Plugins"},{"location":"recurring/","text":"What is Recurring? A Recurring contract is a set of one or more recurring payment details linked to a unique shopper on your merchant account. It allows you to charge your customer on monthly, yearly, quaterly basis depending on the terms of the contract. For example monthly subscription for a movie streaming platform or postpaid calling card bill payment, etc. You are able to charge your customer using the Purchase operation configured in single message mode. How It Works - Overview Placeholder: please provide pics for every step described in this section. You have to create a Token and assign to a specific Customer account. For more details on \u201cToken\u201d please refer to the FORT Tokenization Service. Your site then sends the recurring transaction details along with the Customer\u2019s Token to PayFORT. The transaction is processed and a valid response is returned to your site indicating the status of the transaction. The Token used to process recurring transactions, should be created when processing a successful transaction using an e-commerce MID registered for the same legal entity the recurring MID is configured for. Issuers will charge the customer\u2019s card if the card was used to process a successful e-commerce transaction for that merchant prior to the recurring transaction. Integration- Workflow Placeholder: Provide a workflow visual diagram along with steps and description. Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. The Request Placeholder: Provide sample code for placing recurring transaction request. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. For details on input parameters please visit the link The Response Here is the response example {\"command\":\"PURCHASE\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"customer_email\":\"customer@domain.com\", \"eci\":\"RECURRING\", \"token_name\":\"Op9Vmp\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone6-S\", \"fort_id\":\"149295435400084008\", \"payment_option\":\"MASTERCARD\", \"customer_ip\":\"192.178.1.10\", \"customer_name\":\"John Smith\", \"authorization_code\":\"P1000000000000372136\", \"response_message\":\"Success\", \"response_code\":\"20064\", \"status\":\"04\", \"expiry_date\":\"2105\", \"card_number\":\"400555******0001\", \"phone_number\":\"00962797219966\", \"settlement_reference\":\"XYZ9239-yu898\", \"merchant_extra\":\"JohnSmith\", \"merchant_extra1\":\"JohnSmith\", \"merchant_extra2\":\"JohnSmith\", \"merchant_extra3\":\"JohnSmith\", \"merchant_extra4\":\"JohnSmith\", \"merchant_extra5\":\"JohnSmith\", \"return_url\":\"http://www.merchant.com\" } Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Recurring(API)"},{"location":"recurring/#what-is-recurring","text":"A Recurring contract is a set of one or more recurring payment details linked to a unique shopper on your merchant account. It allows you to charge your customer on monthly, yearly, quaterly basis depending on the terms of the contract. For example monthly subscription for a movie streaming platform or postpaid calling card bill payment, etc. You are able to charge your customer using the Purchase operation configured in single message mode.","title":"What is Recurring?"},{"location":"recurring/#how-it-works-overview","text":"Placeholder: please provide pics for every step described in this section. You have to create a Token and assign to a specific Customer account. For more details on \u201cToken\u201d please refer to the FORT Tokenization Service. Your site then sends the recurring transaction details along with the Customer\u2019s Token to PayFORT. The transaction is processed and a valid response is returned to your site indicating the status of the transaction. The Token used to process recurring transactions, should be created when processing a successful transaction using an e-commerce MID registered for the same legal entity the recurring MID is configured for. Issuers will charge the customer\u2019s card if the card was used to process a successful e-commerce transaction for that merchant prior to the recurring transaction.","title":"How It Works - Overview"},{"location":"recurring/#integration-workflow","text":"Placeholder: Provide a workflow visual diagram along with steps and description.","title":"Integration- Workflow"},{"location":"recurring/#endpoints","text":"Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"recurring/#parameters-submission-type","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"recurring/#the-request","text":"Placeholder: Provide sample code for placing recurring transaction request. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. For details on input parameters please visit the link","title":"The Request"},{"location":"recurring/#the-response","text":"Here is the response example {\"command\":\"PURCHASE\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"customer_email\":\"customer@domain.com\", \"eci\":\"RECURRING\", \"token_name\":\"Op9Vmp\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone6-S\", \"fort_id\":\"149295435400084008\", \"payment_option\":\"MASTERCARD\", \"customer_ip\":\"192.178.1.10\", \"customer_name\":\"John Smith\", \"authorization_code\":\"P1000000000000372136\", \"response_message\":\"Success\", \"response_code\":\"20064\", \"status\":\"04\", \"expiry_date\":\"2105\", \"card_number\":\"400555******0001\", \"phone_number\":\"00962797219966\", \"settlement_reference\":\"XYZ9239-yu898\", \"merchant_extra\":\"JohnSmith\", \"merchant_extra1\":\"JohnSmith\", \"merchant_extra2\":\"JohnSmith\", \"merchant_extra3\":\"JohnSmith\", \"merchant_extra4\":\"JohnSmith\", \"merchant_extra5\":\"JohnSmith\", \"return_url\":\"http://www.merchant.com\" } Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones.","title":"The Response"},{"location":"recurring/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"recurring/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"recurringparameters/","text":"Recurring Transactions Request Parameters ATTRIBUTES Possible/Expected Values or examples Description command ( Alpha Mandatory max: 20) PURCHASE command access_code ( Alphanumeric Mandatory max: 20) zx0IPmPy5jp1vAz Access code merchant_identifier ( Alphanumeric Mandatory max: 20) CycHZxVj The ID of the Merchant. merchant_reference ( Alphanumeric Mandatory max: 40) XYZ9239-yu898 The Merchant\u2019s unique order number. Special characters: - _ . amount ( Numeric Mandatory max: 10) 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. currency (Alpha Mandatory max: 3) AED The currency of the transaction\u2019s amount in ISO code 3. language ( Alpha Mandatory max: 2) en / ar The checkout page and messages language. customer_email (Alphanumeric Mandatory max: 254) customer@domain.com The customer\u2019s email. Special characters: _ - . @ + eci (Alpha Mandatory max: 16) RECURRING Ecommerce indicator. token_name ( Alphanumeric Mandatory max: 100) Op9Vmp The Token received from the Tokenization process. Special characters: _ - . @ signature ( Alphanumeric Mandatory max: 200) 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). payment_option ( Alpha Optional Max: 10) -MASTERCARD - VISA - AMEX Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX order_description ( Alphanumeric Optional max: 150) iPhone 6-S It holds the description of the order. Special characters: ' / . _ - # : $ Space customer_name ( Alpha Optional max: 40) John Smith The customer\u2019s name. Special characters: _ \\ / - . ' Space merchant_extra ( Alphanumeric Optional Max: 999) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra1 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra2 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra3 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra4 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra5 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ phone_number ( Alphanumeric Optional max: 19) 00962797219966 The customer\u2019s phone number. Special characters: + - ( ) Space settlement_reference ( Alphanumeric Optional max: 34) XYZ9239-yu898 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Special characters: - _ . Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Recurring Transaction Response ATTRIBUTES Possible/Expected values or Example Description command ( Alpha max: 20) PURCHASE command. access_code ( Alphanumeric max: 20) zx0IPmPy5jp1vAz Access code. merchant_identifier ( Alphanumeric max: 20) CycHZxVj The ID of the Merchant. merchant_reference ( Alphanumeric max: 40) XYZ9239-yu898 The Merchant\u2019s unique order number. amount ( Numeric max: 10) 10000 The transaction\u2019s amount. currency ( Alpha max: 3) AED The currency of the transaction\u2019s amount in ISO code 3. language ( Alpha max: 2) en / ar The checkout page and messages language. customer_email ( Alphanumeric max: 254) customer@domain.com The customer\u2019s email. eci (Alpha max: 16) RECURRING Ecommerce indicator. token_name ( Alphanumeric max: 100) Op9Vmp The Token received from the Tokenization process. signature ( Alphanumeric max: 200) 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). fort_id ( Numeric max: 20) 149295435400084008 The order\u2019s unique reference returned by our system. payment_option Alpha Max: 10 - MASTERCARD - VISA - AMEX Payment option. order_description ( Alphanumeric max: 150) iPhone 6-S It holds the description of the order. customer_name ( Alpha max: 40) John Smith The customer\u2019s name. merchant_extra ( Alphanumeric Max: 999) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. expiry_date ( Numeric Max: 4) 2015 The card\u2019s expiry date. Example: 2105 card_number ( Numeric Max: 16) 400555 * *0001 The clear credit card\u2019s number. authorization_code ( Alphanumeric max: 100) P1000000000000372136 The authorization code returned from the 3rd party. response_message ( Alphanumeric max: 150) Please refer to section messages Message description of the response code. It returns according to the request language. Possible/ expected values: response_code ( Numeric Max: 5) 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (Numeric max: 2) Please refer to section statuses A two-digit numeric value that indicates the status of the transaction phone_number ( Alphanumeric max: 19) 00962797219966 The customer\u2019s phone number. settlement_reference ( Alphanumeric max: 34) XYZ9239-yu898 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Recurring Parameters"},{"location":"recurringparameters/#recurring-transactions-request-parameters","text":"ATTRIBUTES Possible/Expected Values or examples Description command ( Alpha Mandatory max: 20) PURCHASE command access_code ( Alphanumeric Mandatory max: 20) zx0IPmPy5jp1vAz Access code merchant_identifier ( Alphanumeric Mandatory max: 20) CycHZxVj The ID of the Merchant. merchant_reference ( Alphanumeric Mandatory max: 40) XYZ9239-yu898 The Merchant\u2019s unique order number. Special characters: - _ . amount ( Numeric Mandatory max: 10) 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. currency (Alpha Mandatory max: 3) AED The currency of the transaction\u2019s amount in ISO code 3. language ( Alpha Mandatory max: 2) en / ar The checkout page and messages language. customer_email (Alphanumeric Mandatory max: 254) customer@domain.com The customer\u2019s email. Special characters: _ - . @ + eci (Alpha Mandatory max: 16) RECURRING Ecommerce indicator. token_name ( Alphanumeric Mandatory max: 100) Op9Vmp The Token received from the Tokenization process. Special characters: _ - . @ signature ( Alphanumeric Mandatory max: 200) 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). payment_option ( Alpha Optional Max: 10) -MASTERCARD - VISA - AMEX Payment option. Possible/ expected values: - MASTERCARD - VISA - AMEX order_description ( Alphanumeric Optional max: 150) iPhone 6-S It holds the description of the order. Special characters: ' / . _ - # : $ Space customer_name ( Alpha Optional max: 40) John Smith The customer\u2019s name. Special characters: _ \\ / - . ' Space merchant_extra ( Alphanumeric Optional Max: 999) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra1 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra2 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra3 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra4 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ merchant_extra5 ( Alphanumeric Optional Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. Special characters: . ; / _ - , ' @ phone_number ( Alphanumeric Optional max: 19) 00962797219966 The customer\u2019s phone number. Special characters: + - ( ) Space settlement_reference ( Alphanumeric Optional max: 34) XYZ9239-yu898 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Special characters: - _ . Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Recurring Transactions Request Parameters"},{"location":"recurringparameters/#recurring-transaction-response","text":"ATTRIBUTES Possible/Expected values or Example Description command ( Alpha max: 20) PURCHASE command. access_code ( Alphanumeric max: 20) zx0IPmPy5jp1vAz Access code. merchant_identifier ( Alphanumeric max: 20) CycHZxVj The ID of the Merchant. merchant_reference ( Alphanumeric max: 40) XYZ9239-yu898 The Merchant\u2019s unique order number. amount ( Numeric max: 10) 10000 The transaction\u2019s amount. currency ( Alpha max: 3) AED The currency of the transaction\u2019s amount in ISO code 3. language ( Alpha max: 2) en / ar The checkout page and messages language. customer_email ( Alphanumeric max: 254) customer@domain.com The customer\u2019s email. eci (Alpha max: 16) RECURRING Ecommerce indicator. token_name ( Alphanumeric max: 100) Op9Vmp The Token received from the Tokenization process. signature ( Alphanumeric max: 200) 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). fort_id ( Numeric max: 20) 149295435400084008 The order\u2019s unique reference returned by our system. payment_option Alpha Max: 10 - MASTERCARD - VISA - AMEX Payment option. order_description ( Alphanumeric max: 150) iPhone 6-S It holds the description of the order. customer_name ( Alpha max: 40) John Smith The customer\u2019s name. merchant_extra ( Alphanumeric Max: 999) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 ( Alphanumeric Max: 250) JohnSmith Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. expiry_date ( Numeric Max: 4) 2015 The card\u2019s expiry date. Example: 2105 card_number ( Numeric Max: 16) 400555 * *0001 The clear credit card\u2019s number. authorization_code ( Alphanumeric max: 100) P1000000000000372136 The authorization code returned from the 3rd party. response_message ( Alphanumeric max: 150) Please refer to section messages Message description of the response code. It returns according to the request language. Possible/ expected values: response_code ( Numeric Max: 5) 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (Numeric max: 2) Please refer to section statuses A two-digit numeric value that indicates the status of the transaction phone_number ( Alphanumeric max: 19) 00962797219966 The customer\u2019s phone number. settlement_reference ( Alphanumeric max: 34) XYZ9239-yu898 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Recurring Transaction Response"},{"location":"redirection/","text":"Redirection means Authorization and Purchase operation and helps you to complete the payment process. Redirection provides you with the benefit of redirecting the customer to payfort's gateway to fill out the credit card details and whenever he makes a purchase his payment is authorized and hold for certain period of time until you capture it or void it on your side. In case the customer cancels his purchase then any amount that has been captured can be refunded to the customer. How it works? When a customer makes a purchase on your website then his purchase needs to be authorized We offer you to Redirect your customer from your website to PayFORT\u2019s gateway page to fill out his credit card details during these operations. The Authorization operation holds the amount from the Customer\u2019s credit card for a period of time until you capture or void the transaction. If no capture or void transaction is processed during this period, the transaction will be voided automatically. In Purchase you will send one single request to the PayFORT server in order to authorize and capture the transaction amount. Looking to void a payment? You can void an authorized payment at any time. However, captured payments can only be refunded . Endpoints You can use the sandbox endpoint to test your payment processing page for redirection or you can use the production endpoint if you want to go live. SandBox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage Parameters Submission Type When you design your form(html page ) you have to provide the Endpoints in the form method. Providing these endpoints in your page will redirect your request to the PayFORT server. The page can be designed in the programming language of your choice. But you have to include the below mentioned code in your html based form. When you create an HTML based form your request will be sent through the HTML form only. Below is the sample code for the same. Form Post Request. <form method=\u201cpost\u201d action=\u201chttps://sbcheckout.payfort.com/FortAPI/paymentPage\u201d id=\u201cform1\u201d name=\u201cform1\u201d> </form> The above code snippet is an HTML based form that will post a request to PayFORT server and you are also required to submit parameters in the form so that PayFORT server can understand your request and process the same. There are various parameters that are required to be sent to the PayFORT server which are nothing but set of commands and set of requests which the PayFORT server understands. However, If you are not familiar with HTML tags and forms then you can checkout this site . The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment Visit the link to check the different parameters to be sent in a redirection request. Sample Request You can design your form in any programming language.Here is the sample request (written different languages) which is sent for authorizing a purchase. Php Python Ruby \u200b $requestParams = array( 'command' => 'AUTHORIZATION', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => 'XYZ9239-yu898', 'amount' => '10000', 'currency' => 'AED', 'language' => 'en', 'customer_email' => 'test@payfort.com', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description' => 'iPhone 6-S', ); import cgi requestParams = { 'command' => 'AUTHORIZATION', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => 'XYZ9239-yu898', 'amount' => '10000', 'currency' => 'AED', 'language' => 'en', 'customer_email' => 'test@payfort.com', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description' => 'iPhone 6-S', }; require 'cgi' requestParams = { 'command' => 'AUTHORIZATION', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => 'XYZ9239-yu898', 'amount' => '10000', 'currency' => 'AED', 'language' => 'en', 'customer_email' => 'test@payfort.com', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description' => 'iPhone 6-S', }; requestParams.each {|key, value| puts key +value ; } Sample code for redirection Here are the sample code for redirecting the request to PayFORT. Php Python Ruby \u200b $redirectUrl = 'https://sbcheckout.payfort.com/FortAPI/paymentPage'; echo \"<html xmlns='http://www.w3.org/1999/xhtml'>\\n<head></head>\\n<body>\\n\"; echo \"<form action='$redirectUrl' method='post' name='frm'>\\n\"; foreach ($requestParams as $a => $b) { echo \"\\t<input type='hidden' name='\".htmlentities($a).\"' value='\".htmlentities($b).\"'>\\n\"; } echo \"\\t<script type='text/javascript'>\\n\"; echo \"\\t\\tdocument.frm.submit();\\n\"; echo \"\\t</script>\\n\"; echo \"</form>\\n</body>\\n</html>\"; redirectUrl = 'https://sbcheckout.payfort.com/FortAPI/paymentPage'; print \"<html xmlns='http://www.w3.org/1999/xhtml'>\\n<head></head>\\n<body>\\n\"; print \"<form action='redirectUrl' method='post' name='frm'>\\n\"; for (slug, title) in requestParams.items(): print \"\\t<input type='hidden' name='\"+ cgi.escape(slug)+\"' value='\"+ cgi.escape(title)+\"'>\\n\"; print \"</form>\"; print \"\\t<script type='text/javascript'>\\n\"; print \"\\t\\tdocument.frm.submit();\\n\"; print \"\\t</script>\\n\"; print \"\\n</body>\\n</html>\"; redirectUrl = 'https://sbcheckout.payfort.com/FortAPI/paymentPage'; puts \"<html xmlns='http://www.w3.org/1999/xhtml'>\\n<head></head>\\n<body>\\n\"; puts \"<form action='redirectUrl' method='post' name='frm'>\\n\"; requestParams.each {|key, value| puts \"\\t<input type='hidden' name='\"+ CGI.escapeHTML(key)+\"' value='\"+ CGI.escapeHTML(value)+\"'>\\n\"; } puts \"</form>\\n\"; puts \"\\t<script type='text/javascript'>\\n\"; puts \"\\t\\tdocument.frm.submit();\\n\"; puts \"\\t</script>\\n\"; puts \"</body>\\n</html>\"; Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"What is redirection?"},{"location":"redirection/#how-it-works","text":"When a customer makes a purchase on your website then his purchase needs to be authorized We offer you to Redirect your customer from your website to PayFORT\u2019s gateway page to fill out his credit card details during these operations. The Authorization operation holds the amount from the Customer\u2019s credit card for a period of time until you capture or void the transaction. If no capture or void transaction is processed during this period, the transaction will be voided automatically. In Purchase you will send one single request to the PayFORT server in order to authorize and capture the transaction amount. Looking to void a payment? You can void an authorized payment at any time. However, captured payments can only be refunded .","title":"How it works?"},{"location":"redirection/#endpoints","text":"You can use the sandbox endpoint to test your payment processing page for redirection or you can use the production endpoint if you want to go live. SandBox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage","title":"Endpoints"},{"location":"redirection/#parameters-submission-type","text":"When you design your form(html page ) you have to provide the Endpoints in the form method. Providing these endpoints in your page will redirect your request to the PayFORT server. The page can be designed in the programming language of your choice. But you have to include the below mentioned code in your html based form. When you create an HTML based form your request will be sent through the HTML form only. Below is the sample code for the same. Form Post Request. <form method=\u201cpost\u201d action=\u201chttps://sbcheckout.payfort.com/FortAPI/paymentPage\u201d id=\u201cform1\u201d name=\u201cform1\u201d> </form> The above code snippet is an HTML based form that will post a request to PayFORT server and you are also required to submit parameters in the form so that PayFORT server can understand your request and process the same. There are various parameters that are required to be sent to the PayFORT server which are nothing but set of commands and set of requests which the PayFORT server understands. However, If you are not familiar with HTML tags and forms then you can checkout this site . The parameters are mandatory and are required by PayFORT server to validate, authenticate and provide the tokens for processing of payment Visit the link to check the different parameters to be sent in a redirection request.","title":"Parameters Submission Type"},{"location":"redirection/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"redirection/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"redirectionsparameters/","text":"Redirection Request and Response Parameters Authorization/Purchase Request Parameters command (String, mandatory) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric, mandatory) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String, optional) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. sadad_olp (alphanumeric, optional) Maximum Length Example Special characters Description 12 SABBP2P_UAT2 @ . _ SADAD Online Payment ID Alias. The merchant sends this value if the OLP ID is collected on the merchant checkout. eci (String, optional) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric, optional) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String, optional) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric, optional) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha, optional) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric, optional) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. return_url (alphanumeric, optional) Maximum Length Example Special Characters Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Authorization/ Purchase Response command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. sadad_olp (alphanumeric) Maximum Length Example Special characters Description 12 SABBP2P_UAT2 @ . _ SADAD Online Payment ID Alias. The merchant sends this value if the OLP ID is collected on the merchant checkout. eci (String) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. return_url (alphanumeric) Maximum Length Example Special Characters Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. fort_id (numeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. knet_ref_number (alphanumeric) Maximum Length Example Description 100 832911577112 The reference number of KNET. *In case of sending KNET payment option. third_party_transaction_number (alphanumeric) Maximum Length Example Description 50 9547069411183290 The third party transaction number. *In case of sending KNET payment option. authorization_code (alphanumeric) Maximum Length Example Description 100 P1000000000000372136 The authorization code returned from the 3rd party. response_message (alphanumeric) Maximum Length Possible/ expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/ expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. card_holder_name (String) Maximum Length Example Description 50 John Smith The card holder name expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 19 400555 * 0001 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. Otherwise, they take 16 digits card number. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Please refer to section Transactions Response Codes for more details about operation\u2019s statuses","title":"Redirections Parameters"},{"location":"redirectionsparameters/#redirection-request-and-response-parameters","text":"","title":"Redirection Request and Response Parameters"},{"location":"redirectionsparameters/#authorizationpurchase-request-parameters","text":"command (String, mandatory) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric, mandatory) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String, optional) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. sadad_olp (alphanumeric, optional) Maximum Length Example Special characters Description 12 SABBP2P_UAT2 @ . _ SADAD Online Payment ID Alias. The merchant sends this value if the OLP ID is collected on the merchant checkout. eci (String, optional) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric, optional) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String, optional) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric, optional) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha, optional) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric, optional) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. return_url (alphanumeric, optional) Maximum Length Example Special Characters Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Authorization/Purchase  Request Parameters"},{"location":"redirectionsparameters/#authorization-purchase-response","text":"command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - SADAD (for Purchase operations only) - NAPS (for Purchase operations only) - KNET(for Purchase operations only) - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. sadad_olp (alphanumeric) Maximum Length Example Special characters Description 12 SABBP2P_UAT2 @ . _ SADAD Online Payment ID Alias. The merchant sends this value if the OLP ID is collected on the merchant checkout. eci (String) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. return_url (alphanumeric) Maximum Length Example Special Characters Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. fort_id (numeric) Maximum Length Example Description 20 149295435400084008 The order\u2019s unique reference returned by our system. knet_ref_number (alphanumeric) Maximum Length Example Description 100 832911577112 The reference number of KNET. *In case of sending KNET payment option. third_party_transaction_number (alphanumeric) Maximum Length Example Description 50 9547069411183290 The third party transaction number. *In case of sending KNET payment option. authorization_code (alphanumeric) Maximum Length Example Description 100 P1000000000000372136 The authorization code returned from the 3rd party. response_message (alphanumeric) Maximum Length Possible/ expected values Description 150 Please refer to section messages The message description of the response code; it returns according to the request language. response_code (numeric) Maximum Length Example Description 5 20064 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . status (numeric) Maximum Length Possible/ expected values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. card_holder_name (String) Maximum Length Example Description 50 John Smith The card holder name expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 19 400555 * 0001 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. Otherwise, they take 16 digits card number. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Please refer to section Transactions Response Codes for more details about operation\u2019s statuses","title":"Authorization/ Purchase Response"},{"location":"refund/","text":"Refund a payment This operation helps to return the entire amount of a transaction or part of it AFTER being captured. This operation can only be performed after the purchase has been authorized and payment has been captured. The request Use the details below to set up your request. Endpoints Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Request example Check out the request parameters by visiting this link Sample Request Here are the sample request you are required to send authorizing a purchase. Php Python Ruby Java cURL \u200b error_reporting(E_ALL); ini_set('display_errors', '1'); $url = 'https://sbpaymentservices.payfort.com/FortAPI/paymentApi'; $arrData = array( 'command' => 'REFUND', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => ' XYZ9239-yu898', 'amount' => '10000', 'currency' => 'AED', 'language' => 'en', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'fort_id' => '149295435400084008', 'order_description' => 'iPhone 6-S', ); $ch = curl_init( $url ); # Setup request to send json via POST. $data = json_encode($arrData); curl_setopt( $ch, CURLOPT_POSTFIELDS, $data ); curl_setopt( $ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json')); # Return response instead of printing. curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true ); # Send request. $result = curl_exec($ch); curl_close($ch); # Print response. echo \"<pre>$result</pre>\"; import urllib import urllib2 import json url = 'https://sbpaymentservices.payfort.com/FortAPI/paymentApi'; arrData = { 'command':'REFUND', 'access_code':'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier':'CycHZxVj', 'merchant_reference':' XYZ9239-yu898', 'amount':'10000', 'currency':'AED', 'language':'en', 'signature':'7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'fort_id':'149295435400084008', 'order_description':'iPhone 6-S', }; values = json.dumps(arrData) data = urllib.urlencode(values) req = urllib2.Request(url, data) response = urllib2.urlopen(req) page = response.read() print page + '\\n\\n' require 'json' require 'net/http' require 'net/https' require 'uri' require 'openssl' arrData = { 'command' => 'REFUND', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => ' XYZ9239-yu898', 'amount' => '10000', 'currency' => 'AED', 'language' => 'en', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'fort_id' => '149295435400084008', 'order_description' => 'iPhone 6-S', }; arrData = arrData.to_json uri = URI.parse(\"https://sbpaymentservices.payfort.com/FortAPI/paymentApi\") http = Net::HTTP.new(uri.host, uri.port) http.use_ssl = true http.verify_mode = OpenSSL::SSL::VERIFY_NONE request = Net::HTTP::Post.new(\"/v1.1/auth\") request.add_field('Content-Type', 'application/json') request.body = arrData response = http.request(request) String jsonRequestString = \"{\\\"command\\\" : \\\"REFUND\\\" , \\\"access_code\\\" : \\\"zx0IPmPy5jp1vAz8Kpg7\\\", \\\"merchant_identifier\\\" : \\\"CycHZxVj\\\", \" + \"\\\"merchant_reference\\\" : \\\"XYZ9239-yu898\\\", \\\"amount\\\" : \\\"10000\\\", \\\"currency\\\" : \\\"AED\\\",\" + \"\\\"language\\\" : \\\"en\\\", \\\"signature\\\" : \\\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\\\", \" + \"\\\"fort_id\\\" : \\\"149295435400084008\\\", \\\"order_description\\\" : \\\"iPhone 6-S\\\"}\"; // Define and Initialize HttpClient HttpClient httpClient = HttpClientBuilder.create().build(); // Intialize HttpPOST with FORT Payment services URL HttpPost request = new HttpPost(\"https://sbpaymentservices.payfort.com/FortAPI/paymentApi\"); // Setup Http POST entity with JSON String StringEntity params = new StringEntity(jsonRequestString); // Setup request type as JSON request.addHeader(\"content-type\", \"application/json\"); request.setEntity(params); // Post request to FORT HttpResponse response = httpClient.execute(request); // Read response using StringBuilder StringBuilder sb = new StringBuilder(); BufferedReader reader = new BufferedReader(new InputStreamReader( response.getEntity().getContent()), 65728); String line = null; while ((line = reader.readLine()) != null) { sb.append(line); } // Print response System.out.println(sb.toString()); curl -H \"Content-Type: application/json\" -d '{\"command\":\"REFUND\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239-yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"fort_id\":\"149295435400084008\", \"order_description\":\"iPhone6-S\"}' https://sbpaymentservices.payfort.com/FortAPI/paymentApi The response If you receive status code 20064 with status code 04 it means your request for refund has been accepted by the PayFort Server. The response sent by the server will be in the format of JSON. Response examples \u200b json {\"command\":\"REFUND\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239-yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"fort_id\":\"149295435400084008\", \"order_description\":\"iPhone 6-S\", \"response_message\":\"Success\", \"response_code\":\"20064\", status\":\"04\" } You can check out various transaction codes by visiting this link Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Refund Payment"},{"location":"refund/#refund-a-payment","text":"This operation helps to return the entire amount of a transaction or part of it AFTER being captured. This operation can only be performed after the purchase has been authorized and payment has been captured.","title":"Refund a payment"},{"location":"refund/#the-request","text":"Use the details below to set up your request.","title":"The request"},{"location":"refund/#endpoints","text":"","title":"Endpoints"},{"location":"refund/#live","text":"POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Live"},{"location":"refund/#sandbox","text":"POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi","title":"Sandbox"},{"location":"refund/#request-example","text":"Check out the request parameters by visiting this link","title":"Request example"},{"location":"refund/#the-response","text":"If you receive status code 20064 with status code 04 it means your request for refund has been accepted by the PayFort Server. The response sent by the server will be in the format of JSON.","title":"The response"},{"location":"refund/#response-examples","text":"\u200b json {\"command\":\"REFUND\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239-yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"fort_id\":\"149295435400084008\", \"order_description\":\"iPhone 6-S\", \"response_message\":\"Success\", \"response_code\":\"20064\", status\":\"04\" } You can check out various transaction codes by visiting this link","title":"Response examples"},{"location":"refund/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"refund/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"reportingapi/","text":"What is Data Mine (Reporting API)? For retail merchants like you biggest dilemma they face is to download a customized reports. These customized reports includes sales reports, transaction reports, recurring payment reports, bulk sales reports etc. If you are planning to develop your own solution then you can easily use the PayFORT's easy to use reporting API to generate your own customized reports. The Reporting API provides you the feature to generate misc.. reports that can be customized as per your business requirements. You can specify the columns to be included and filters, then download the generated report. The report is limited to 200,000 transactions. PayFORT provides you with two options to generate your reports one is through APIs and another through Backoffice portal. You can develop your own report generation tool and use the PayFORT endpoints to generate and download your own customized report for the business purpose. How it Works? When you are developing the solution for report generation purpose then you need to send request to the PayFORT server using the Endpoints . There will be two requests ( Generate Report and Download Report ) that you will be sending to the PayFORT server. Following steps describes the way Reporting API works: You will submit Generate Report request for report generation. This request also allows you to specify the filters and columns to be included in the downloaded report. The PayFORT server returns the Generate Report response. You will then submit the Download Report request using the same merchant reference which was used to submit Generate Report request Endpoints You can use these PayFORT endpoints for the purpose of testing and going live. If you don't have test account then you can use this link to signup for the test account else you can directly signup for the live account by visiting this link Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/reportingApi Live POST https://paymentservices.payfort.com/FortAPI/reportingApi Parameters Submission Type While submitting your request to PayFORT server using the Endpoints you need to pass parameters in your request. The parameters that you will pass to the server in your request should be REST POST request using JSON Format . Both the requests Generate Report and Download Report will use set of parameters including the column parameters, filter parameters and the key parameters. Generate Report Request Since you will be submitting REST POST using JSON Format, you can refer to the given JSON sample for creating a Generate Report request. The JSON sample also shows the parameters that are required to be sent along the request. Sample JSON Request The above JSON sample is for information purpose and you need to check out the columns parameters, filter parameters and the key parameters (passed within the filters parameters as key value in the above JSON sample) to select the parameters you need to pass in your request. Generate Report Request Sample Below is the sample request for the generation of report in the JSON format to be sent to the PayFORT server. The command GENERATE_REPORT notifies PayFORT server to generate a customized report based on the customized parameters that are sent via request in the JSON format. You have to check the different input parameters and select the parameters based on your requirements. You can opt for receiving the response either in JSON format or the xml format depending on the merchant site's design and architecture. Placeholder: Sample code in Java/PHP/Python/Ruby for report generation request. Sample JSON request { \u201cquery_command\u201d: \u201cGENERATE_REPORT\u201d, \u201caccess_code\u201d: \u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201cfrom_date\u201d: \u201c2017-08-03T00:00:01+03:00\u201d, \u201cto_date\u201d: \u201c2017-08-03T23:59:59+03:00\u201d, \u201cresponse_format\u201d: \u201cJSON\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201ccolumns\u201d: [ \u201corder_description\u201d, \u201ccustomer_ip\u201d, \u201ceci\u201d, \u201cgeolocation_ip\u201d, \u201cmerchant_reference\u201d, \u201ccard_holder_name\u201d, \u201ccurrency\u201d, \u201camount\u201d, \u201cpayment_option\u201d, \u201cfort_id\u201d, \u201ccustomer_email\u201d, \u201ccustomer_name\u201d, \u201coperation\u201d, ], \u201cfilters\u201d: [ { \u201ckey\u201d: \u201ccurrency\u201d, \u201cvalue\u201d: \u201cUSD\u201d }, { \u201ckey\u201d: \u201cpayment_option\u201d, \u201cvalue\u201d: \u201cVISA\u201d } ], \u201csignature\u201d: \u201c03a36d58acfc611f521528f2039a2228031d7ae4248d95181f2a24cfbe9f7865\u201d } You can customize your own report by providing different input parameters. Not all parameters might be of interest to you, hence select only those parameters which you think are important for your requirement. Providing unnecessary parameters/all parameters at a time to the server can increase the time to generate the report. Submit download Report Request Once the report generation request has been submitted next request would be to submit request for the download of the generated report. Placeholder: Sample code in Java/PHP/Python/Ruby for download report request. Generate Report \u201cJSON\u201d Response Example The below is the sample response sent in JSON format by the PayFORT server to the generate report request submitted by you. { \u201cquery_command\u201d: \u201cGENERATE_REPORT\u201d, \u201caccess_code\u201d: \u201c zx0IPmPy5jp1vAz8Kpg7\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201cfrom_date\u201d: \u201c2017-08-03T00:00:01+03:00\u201d, \u201cto_date\u201d: \u201c2017-08-03T23:59:59+03:00\u201d, \u201cresponse_format\u201d: \u201cJSON\u201d, \u201csignature\u201d: \u201c521d32010a9988de86e16b49f6303985508d5f244784474da1184d457b53ded2\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201cresponse_code\u201d: \u201c56000\u201d, \u201cstatus\u201d: \u201c56\u201d } Generate Report \u201cXML\u201d Response Example The below is the sample response sent in XML format by the PayFORT server to the generate report request submitted by you. <response> <response_code>56000</response_code> <from_date>2017-08-03T00:00:01+03:00</from_date><signature>521d32010a9988de86e16b49f6303985508d5f244784474da1184d457b53ded2</signature> <merchant_identifier>CycHZxVj</merchant_identifier> <access_code>zx0IPmPy5jp1vAz8Kpg7</access_code> <language>en</language><response_format>XML</response_format> <response_message>Success</response_message> <to_date>2017-08-03T23:59:59+03:00</to_date> <merchant_reference>XYZ9239-yu898</merchant_reference> <query_command>GENERATE_REPORT</query_command> <status>56</status> </response> Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Reporting API"},{"location":"reportingapi/#what-is-data-mine-reporting-api","text":"For retail merchants like you biggest dilemma they face is to download a customized reports. These customized reports includes sales reports, transaction reports, recurring payment reports, bulk sales reports etc. If you are planning to develop your own solution then you can easily use the PayFORT's easy to use reporting API to generate your own customized reports. The Reporting API provides you the feature to generate misc.. reports that can be customized as per your business requirements. You can specify the columns to be included and filters, then download the generated report. The report is limited to 200,000 transactions. PayFORT provides you with two options to generate your reports one is through APIs and another through Backoffice portal. You can develop your own report generation tool and use the PayFORT endpoints to generate and download your own customized report for the business purpose.","title":"What is Data Mine (Reporting API)?"},{"location":"reportingapi/#how-it-works","text":"When you are developing the solution for report generation purpose then you need to send request to the PayFORT server using the Endpoints . There will be two requests ( Generate Report and Download Report ) that you will be sending to the PayFORT server. Following steps describes the way Reporting API works: You will submit Generate Report request for report generation. This request also allows you to specify the filters and columns to be included in the downloaded report. The PayFORT server returns the Generate Report response. You will then submit the Download Report request using the same merchant reference which was used to submit Generate Report request","title":"How it Works?"},{"location":"reportingapi/#endpoints","text":"You can use these PayFORT endpoints for the purpose of testing and going live. If you don't have test account then you can use this link to signup for the test account else you can directly signup for the live account by visiting this link Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/reportingApi Live POST https://paymentservices.payfort.com/FortAPI/reportingApi","title":"Endpoints"},{"location":"reportingapi/#parameters-submission-type","text":"While submitting your request to PayFORT server using the Endpoints you need to pass parameters in your request. The parameters that you will pass to the server in your request should be REST POST request using JSON Format . Both the requests Generate Report and Download Report will use set of parameters including the column parameters, filter parameters and the key parameters.","title":"Parameters Submission Type"},{"location":"reportingapi/#generate-report-request","text":"Since you will be submitting REST POST using JSON Format, you can refer to the given JSON sample for creating a Generate Report request. The JSON sample also shows the parameters that are required to be sent along the request. Sample JSON Request The above JSON sample is for information purpose and you need to check out the columns parameters, filter parameters and the key parameters (passed within the filters parameters as key value in the above JSON sample) to select the parameters you need to pass in your request. Generate Report Request Sample Below is the sample request for the generation of report in the JSON format to be sent to the PayFORT server. The command GENERATE_REPORT notifies PayFORT server to generate a customized report based on the customized parameters that are sent via request in the JSON format. You have to check the different input parameters and select the parameters based on your requirements. You can opt for receiving the response either in JSON format or the xml format depending on the merchant site's design and architecture. Placeholder: Sample code in Java/PHP/Python/Ruby for report generation request. Sample JSON request { \u201cquery_command\u201d: \u201cGENERATE_REPORT\u201d, \u201caccess_code\u201d: \u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201cfrom_date\u201d: \u201c2017-08-03T00:00:01+03:00\u201d, \u201cto_date\u201d: \u201c2017-08-03T23:59:59+03:00\u201d, \u201cresponse_format\u201d: \u201cJSON\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201ccolumns\u201d: [ \u201corder_description\u201d, \u201ccustomer_ip\u201d, \u201ceci\u201d, \u201cgeolocation_ip\u201d, \u201cmerchant_reference\u201d, \u201ccard_holder_name\u201d, \u201ccurrency\u201d, \u201camount\u201d, \u201cpayment_option\u201d, \u201cfort_id\u201d, \u201ccustomer_email\u201d, \u201ccustomer_name\u201d, \u201coperation\u201d, ], \u201cfilters\u201d: [ { \u201ckey\u201d: \u201ccurrency\u201d, \u201cvalue\u201d: \u201cUSD\u201d }, { \u201ckey\u201d: \u201cpayment_option\u201d, \u201cvalue\u201d: \u201cVISA\u201d } ], \u201csignature\u201d: \u201c03a36d58acfc611f521528f2039a2228031d7ae4248d95181f2a24cfbe9f7865\u201d } You can customize your own report by providing different input parameters. Not all parameters might be of interest to you, hence select only those parameters which you think are important for your requirement. Providing unnecessary parameters/all parameters at a time to the server can increase the time to generate the report. Submit download Report Request Once the report generation request has been submitted next request would be to submit request for the download of the generated report. Placeholder: Sample code in Java/PHP/Python/Ruby for download report request. Generate Report \u201cJSON\u201d Response Example The below is the sample response sent in JSON format by the PayFORT server to the generate report request submitted by you. { \u201cquery_command\u201d: \u201cGENERATE_REPORT\u201d, \u201caccess_code\u201d: \u201c zx0IPmPy5jp1vAz8Kpg7\u201d, \u201cmerchant_identifier\u201d: \u201cCycHZxVj\u201d, \u201cmerchant_reference\u201d: \u201cXYZ9239-yu898\u201d, \u201cfrom_date\u201d: \u201c2017-08-03T00:00:01+03:00\u201d, \u201cto_date\u201d: \u201c2017-08-03T23:59:59+03:00\u201d, \u201cresponse_format\u201d: \u201cJSON\u201d, \u201csignature\u201d: \u201c521d32010a9988de86e16b49f6303985508d5f244784474da1184d457b53ded2\u201d, \u201clanguage\u201d: \u201cen\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201cresponse_code\u201d: \u201c56000\u201d, \u201cstatus\u201d: \u201c56\u201d } Generate Report \u201cXML\u201d Response Example The below is the sample response sent in XML format by the PayFORT server to the generate report request submitted by you. <response> <response_code>56000</response_code> <from_date>2017-08-03T00:00:01+03:00</from_date><signature>521d32010a9988de86e16b49f6303985508d5f244784474da1184d457b53ded2</signature> <merchant_identifier>CycHZxVj</merchant_identifier> <access_code>zx0IPmPy5jp1vAz8Kpg7</access_code> <language>en</language><response_format>XML</response_format> <response_message>Success</response_message> <to_date>2017-08-03T23:59:59+03:00</to_date> <merchant_reference>XYZ9239-yu898</merchant_reference> <query_command>GENERATE_REPORT</query_command> <status>56</status> </response>","title":"Generate Report Request"},{"location":"reportingapi/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"reportingapi/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"reportingapiparameters/","text":"Reporting API Request and Response Generate Report - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description query_command Alpha Mandatory max: 50 Query operations command. Possible/ expected values: GENERATE_REPORT Special characters: _ access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . from_date Alphanumeric Mandatory max: 30 Query parameter to filter from a specific date. Example: 2017-01-01T14:36:55+03:00 Special characters: + - : to_date Alphanumeric Mandatory max: 30 Query parameter to filter the results till a specific date. Example: 2017-06-28T14:36:55+03:00 Special characters: + - : columns List Mandatory max: 110 The columns you want to appear in your report. Possible/ expected values: (Please refer to section column parameters ). Special characters: _ signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a language Alpha Optional max: 2 The checkout page and messages language. Possible/ expected values: en / ar response_format Alpha Optional max: 4 The FORT response format; weather its JSON or XML. *The default response format is \u201cJSON\u201d. Possible/ expected values: - JSON - XML filters List Optional max: 10 The filters the merchant wants to use to filter the generated report results. possible/ expected values: (Please refer to section filters parameters ). Columns Parameter The following table contains all the possible values you want to revert in your response, you can choose any of them: Value Description fort_id The order\u2019s unique reference returned by our system. merchant_reference The Merchant\u2019s unique order number. authorization_code The authorization code returned from the 3rd party responsible for processing the transaction. customer_name The Customer\u2019s name. customer_ip The customer\u2019s IP address; where the Merchant sends as part of the authorization/ purchase request. geolocation_ip The card for the Customer\u2019s computer. customer_email The Customer\u2019s email; where the Merchant sends with the authorization/purchase request. acquirer_name The name of the Acquirer. payment_option The payment option use to process the authorization/ purchase request. channel The FORT channel used to receive the authorization/purchase request. transaction_date The date of the transaction. card_number The card number used to process the transaction. expiry_date The card\u2019s expiry date. card_holder_name The cardholder\u2019s name. amount The transaction\u2019s amount. currency The currency of the transaction\u2019s amount in ISO code 3. card_bin The bank identification number (BIN); which is the initial four to eight numbers that appear on a credit card. eci The E-commerce indicator associated with the transactions authorization/ purchase request. operation The operation type (authorization, purchase, void authorization, capture, and refund) token_name The Token associated with the card used to process the transaction. 3ds_indicator This indicator will hold the value \u201cyes\u201d in case 3-D Secure check was performed on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. fraud_indicator This indicator will hold the value \u201cyes\u201d in case fraud check was performed on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. installments_indicator This indicator will hold the value \u201cyes\u201d in case installments service was applied on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. status A two-digit numeric value that indicates the status of the transaction. response_code Carries the value of our system\u2019s response. response_message The Message description of the response code. It returns according to the request language. third_party_message The message retrieved from the third party. third_party_code The code retrieved from the third party. order_date The creation date of the order. order_description The description of the order provided by the merchant. acquirer_mid The Acquirer Merchant identifier. acquirer_response_code The code the Acquirer returns. acquirer_response_message The code the Acquirer returns. processor_response_code The code the Acquirer returns. sadad_olp SADAD Online Payment ID Alias. The value that SADAD\u2019s Customer provides to process SADAD order. sadad_transaction_id The identifier returned by SADAD for a specific SADAD transaction. payment_link_id Payment link unique identifier. Invoice_id The identification for a specific subscription service. digital_wallet The buyer\u2019s digital wallet. Filters Parameter Include the following parameters into \u201cfilters\u201d parameter you will send to PayFort: ATTRIBUTES Description key Alphanumeric max: 110 The name of the column you want to filter. You can choose more than one. Possible/ expected values: (Please refer to section Key parameter ). Special characters: # ' \\ / . _ - @ : Space value Alphanumeric max: - The value of the key you want to revert in your response. It depends on the key you have chosen to revert. Key Parameter The following table contains all the possible values of the \u201ckey\u201d parameter, you can choose any of them: Key Description & Possible Values fort_id The order\u2019s unique reference returned by our system. merchant_reference The Merchant\u2019s unique order number. authorization_code The authorization code returned from the 3rd party responsible for processing the transaction. customer_name The Customer\u2019s name. customer_ip The customer\u2019s IP address; where the Merchant sends as part of the authorization/ purchase request. geolocation_ip The card for the Customer\u2019s computer. customer_email The Customer\u2019s email; where the Merchant sends with the authorization/purchase request. acquirer_name The name of the Acquirer. payment_option The payment option use to process the authorization/ purchase request. Possible/ Expected Values: - MASTERCARD - VISA - AMEX - SADAD - NAPS - KNET - MADA - MEEZA channel The FORT channel used to receive the authorization/purchase request. Possible/ Expected Values: - MOTO - Trusted - Merchant Page - Redirection - eTerminal - Recurring transaction_date The date of the transaction. card_number The card number used to process the transaction. expiry_date The card\u2019s expiry date. card_holder_name The cardholder\u2019s name. amount The transaction\u2019s amount. currency The currency of the transaction\u2019s amount in ISO code 3. card_bin The bank identification number (BIN); which is the initial four to eight numbers that appear on a credit card. eci The E-commerce indicator associated with the transactions authorization/ purchase request. Possible/ Expected Values: - ECOMMERCE - RECURRING - MOTO operation The operation type (authorization, purchase, void authorization, capture, and refund). token_name The Token associated with the card used to process the transaction. 3ds_indicator This indicator will hold the value \u201cyes\u201d in case 3-D Secure check was performed on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. Possible/ Expected Values: - YES - NO fraud_indicator This indicator will hold the value \u201cyes\u201d in case fraud check was performed on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. Possible/ Expected Values: - YES - NO installments_indicator This indicator will hold the value \u201cyes\u201d in case installments service was applied on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. Possible/ Expected Values: - YES - NO status A transaction status value that indicates the status of the transaction. response_code Carries the value of our system\u2019s response. response_message The Message description of the response code. It returns according to the request language. third_party_message The message retrieved from the third party. third_party_code The code retrieved from the third party. order_date The creation date of the order. order_description The description of the order provided by the merchant. acquirer_mid The Acquirer Merchant identifier. acquirer_response_code The code the Acquirer returns. acquirer_response_message The code the Acquirer returns. processor_response_code The code the Acquirer returns. sadad_olp SADAD Online Payment ID Alias. The value that SADAD\u2019s Customer provides to process SADAD order. sadad_transaction_id The identifier returned by SADAD for a specific SADAD transaction. payment_link_id Payment link unique identifier. Invoice_id The identification for a specific subscription service. digital_wallet The buyer\u2019s digital wallet. Possible/ Expected Values: - MASTERPASS - VISA_CHECKOUT - APPLE_PAY Generate Report - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 Query operations command. Possible/ expected values: GENERATE_REPORT access_code Alphanumeric max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 from_date Alphanumeric Mandatory max: 30 Query parameter to filter from a specific date. Example: 2017-01-01T14:36:55+03:00 to_date Alphanumeric Mandatory max: 30 Query parameter to filter the results till a specific date. Example: 2017-06-28T14:36:55+03:00 signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar response_format Alpha Max: 4 The FORT response format; weather its JSON or XML. *The default response format is \u201cJSON\u201d. Possible/ expected values: - JSON - XML response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 56000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuse","title":"Reporting API Parameters"},{"location":"reportingapiparameters/#reporting-api-request-and-response","text":"","title":"Reporting API Request and Response"},{"location":"reportingapiparameters/#generate-report-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description query_command Alpha Mandatory max: 50 Query operations command. Possible/ expected values: GENERATE_REPORT Special characters: _ access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . from_date Alphanumeric Mandatory max: 30 Query parameter to filter from a specific date. Example: 2017-01-01T14:36:55+03:00 Special characters: + - : to_date Alphanumeric Mandatory max: 30 Query parameter to filter the results till a specific date. Example: 2017-06-28T14:36:55+03:00 Special characters: + - : columns List Mandatory max: 110 The columns you want to appear in your report. Possible/ expected values: (Please refer to section column parameters ). Special characters: _ signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a language Alpha Optional max: 2 The checkout page and messages language. Possible/ expected values: en / ar response_format Alpha Optional max: 4 The FORT response format; weather its JSON or XML. *The default response format is \u201cJSON\u201d. Possible/ expected values: - JSON - XML filters List Optional max: 10 The filters the merchant wants to use to filter the generated report results. possible/ expected values: (Please refer to section filters parameters ).","title":"Generate Report - Request"},{"location":"reportingapiparameters/#columns-parameter","text":"The following table contains all the possible values you want to revert in your response, you can choose any of them: Value Description fort_id The order\u2019s unique reference returned by our system. merchant_reference The Merchant\u2019s unique order number. authorization_code The authorization code returned from the 3rd party responsible for processing the transaction. customer_name The Customer\u2019s name. customer_ip The customer\u2019s IP address; where the Merchant sends as part of the authorization/ purchase request. geolocation_ip The card for the Customer\u2019s computer. customer_email The Customer\u2019s email; where the Merchant sends with the authorization/purchase request. acquirer_name The name of the Acquirer. payment_option The payment option use to process the authorization/ purchase request. channel The FORT channel used to receive the authorization/purchase request. transaction_date The date of the transaction. card_number The card number used to process the transaction. expiry_date The card\u2019s expiry date. card_holder_name The cardholder\u2019s name. amount The transaction\u2019s amount. currency The currency of the transaction\u2019s amount in ISO code 3. card_bin The bank identification number (BIN); which is the initial four to eight numbers that appear on a credit card. eci The E-commerce indicator associated with the transactions authorization/ purchase request. operation The operation type (authorization, purchase, void authorization, capture, and refund) token_name The Token associated with the card used to process the transaction. 3ds_indicator This indicator will hold the value \u201cyes\u201d in case 3-D Secure check was performed on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. fraud_indicator This indicator will hold the value \u201cyes\u201d in case fraud check was performed on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. installments_indicator This indicator will hold the value \u201cyes\u201d in case installments service was applied on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. status A two-digit numeric value that indicates the status of the transaction. response_code Carries the value of our system\u2019s response. response_message The Message description of the response code. It returns according to the request language. third_party_message The message retrieved from the third party. third_party_code The code retrieved from the third party. order_date The creation date of the order. order_description The description of the order provided by the merchant. acquirer_mid The Acquirer Merchant identifier. acquirer_response_code The code the Acquirer returns. acquirer_response_message The code the Acquirer returns. processor_response_code The code the Acquirer returns. sadad_olp SADAD Online Payment ID Alias. The value that SADAD\u2019s Customer provides to process SADAD order. sadad_transaction_id The identifier returned by SADAD for a specific SADAD transaction. payment_link_id Payment link unique identifier. Invoice_id The identification for a specific subscription service. digital_wallet The buyer\u2019s digital wallet.","title":"Columns Parameter"},{"location":"reportingapiparameters/#filters-parameter","text":"Include the following parameters into \u201cfilters\u201d parameter you will send to PayFort: ATTRIBUTES Description key Alphanumeric max: 110 The name of the column you want to filter. You can choose more than one. Possible/ expected values: (Please refer to section Key parameter ). Special characters: # ' \\ / . _ - @ : Space value Alphanumeric max: - The value of the key you want to revert in your response. It depends on the key you have chosen to revert.","title":"Filters Parameter"},{"location":"reportingapiparameters/#key-parameter","text":"The following table contains all the possible values of the \u201ckey\u201d parameter, you can choose any of them: Key Description & Possible Values fort_id The order\u2019s unique reference returned by our system. merchant_reference The Merchant\u2019s unique order number. authorization_code The authorization code returned from the 3rd party responsible for processing the transaction. customer_name The Customer\u2019s name. customer_ip The customer\u2019s IP address; where the Merchant sends as part of the authorization/ purchase request. geolocation_ip The card for the Customer\u2019s computer. customer_email The Customer\u2019s email; where the Merchant sends with the authorization/purchase request. acquirer_name The name of the Acquirer. payment_option The payment option use to process the authorization/ purchase request. Possible/ Expected Values: - MASTERCARD - VISA - AMEX - SADAD - NAPS - KNET - MADA - MEEZA channel The FORT channel used to receive the authorization/purchase request. Possible/ Expected Values: - MOTO - Trusted - Merchant Page - Redirection - eTerminal - Recurring transaction_date The date of the transaction. card_number The card number used to process the transaction. expiry_date The card\u2019s expiry date. card_holder_name The cardholder\u2019s name. amount The transaction\u2019s amount. currency The currency of the transaction\u2019s amount in ISO code 3. card_bin The bank identification number (BIN); which is the initial four to eight numbers that appear on a credit card. eci The E-commerce indicator associated with the transactions authorization/ purchase request. Possible/ Expected Values: - ECOMMERCE - RECURRING - MOTO operation The operation type (authorization, purchase, void authorization, capture, and refund). token_name The Token associated with the card used to process the transaction. 3ds_indicator This indicator will hold the value \u201cyes\u201d in case 3-D Secure check was performed on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. Possible/ Expected Values: - YES - NO fraud_indicator This indicator will hold the value \u201cyes\u201d in case fraud check was performed on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. Possible/ Expected Values: - YES - NO installments_indicator This indicator will hold the value \u201cyes\u201d in case installments service was applied on a specific transaction. Otherwise, it will holds the value \u201cno\u201d. Possible/ Expected Values: - YES - NO status A transaction status value that indicates the status of the transaction. response_code Carries the value of our system\u2019s response. response_message The Message description of the response code. It returns according to the request language. third_party_message The message retrieved from the third party. third_party_code The code retrieved from the third party. order_date The creation date of the order. order_description The description of the order provided by the merchant. acquirer_mid The Acquirer Merchant identifier. acquirer_response_code The code the Acquirer returns. acquirer_response_message The code the Acquirer returns. processor_response_code The code the Acquirer returns. sadad_olp SADAD Online Payment ID Alias. The value that SADAD\u2019s Customer provides to process SADAD order. sadad_transaction_id The identifier returned by SADAD for a specific SADAD transaction. payment_link_id Payment link unique identifier. Invoice_id The identification for a specific subscription service. digital_wallet The buyer\u2019s digital wallet. Possible/ Expected Values: - MASTERPASS - VISA_CHECKOUT - APPLE_PAY","title":"Key Parameter"},{"location":"reportingapiparameters/#generate-report-response","text":"The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 Query operations command. Possible/ expected values: GENERATE_REPORT access_code Alphanumeric max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 from_date Alphanumeric Mandatory max: 30 Query parameter to filter from a specific date. Example: 2017-01-01T14:36:55+03:00 to_date Alphanumeric Mandatory max: 30 Query parameter to filter the results till a specific date. Example: 2017-06-28T14:36:55+03:00 signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar response_format Alpha Max: 4 The FORT response format; weather its JSON or XML. *The default response format is \u201cJSON\u201d. Possible/ expected values: - JSON - XML response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 56000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuse","title":"Generate Report - Response"},{"location":"reportingbackoffice/","text":"Report Generation (BackOffice) You can also generate various reports through the payFORT Backoffice. There is no limitation on the date range and you can view transactions readily for the same day, day before that and the last month by using the options from the drop down list. You can also customize your date range using the \u2018Custom Range\u2019 option. Please ensure you click on \u2018Apply\u2019 after selecting the desired range. Unfortunately at this time the view is restricted to one account only and can be changed under the \u2018Merchant account\u2019 dropdown. However we are working on releasing more features in the future which will cover this requirement. Based on your assigned User Role, some of the functionalities and system privileges would be enabled or disabled. Examples of the standard reports on your Fort account are: Installments Report: This report enables you to view all Installments service transactions within a time period. Transactions report: This report enables you to view all transactions performed on your account within a time period. Financial Report: This report enables you to view all successful transactions performed on your account within a time period. Depending on your role scope, the reports vary in terms of their coverage. For example, if you wish to view all the transactions with their different statuses that have been performed on your account within a certain time period, you need to use the Transactions Report section. If you wish to look specifically for the Installments transactions, the Installments Report section will come in handy and in case you are checking only the successful transactions to match them with your settlements for example, the Financial Report section will be the one you should use. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Report Generation (BackOffice)"},{"location":"reportingbackoffice/#report-generation-backoffice","text":"You can also generate various reports through the payFORT Backoffice. There is no limitation on the date range and you can view transactions readily for the same day, day before that and the last month by using the options from the drop down list. You can also customize your date range using the \u2018Custom Range\u2019 option. Please ensure you click on \u2018Apply\u2019 after selecting the desired range. Unfortunately at this time the view is restricted to one account only and can be changed under the \u2018Merchant account\u2019 dropdown. However we are working on releasing more features in the future which will cover this requirement. Based on your assigned User Role, some of the functionalities and system privileges would be enabled or disabled. Examples of the standard reports on your Fort account are: Installments Report: This report enables you to view all Installments service transactions within a time period. Transactions report: This report enables you to view all transactions performed on your account within a time period. Financial Report: This report enables you to view all successful transactions performed on your account within a time period. Depending on your role scope, the reports vary in terms of their coverage. For example, if you wish to view all the transactions with their different statuses that have been performed on your account within a certain time period, you need to use the Transactions Report section. If you wish to look specifically for the Installments transactions, the Installments Report section will come in handy and in case you are checking only the successful transactions to match them with your settlements for example, the Financial Report section will be the one you should use.","title":"Report Generation (BackOffice)"},{"location":"reportingbackoffice/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"reportingbackoffice/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"sdktokenparameters/","text":"SDK Token Parameters Request Parameters service_command (String, mandatory) Maximum Length Possible/ expected values Special Character Description 20 SDK_TOKEN _ Command access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic device_id (alphanumeric, mandatory) Maximum Length Example Special characters Description 100 ffffffff-a9fa-0b44-7b27-29e70033c587 _ - . @ + A unique device identifier. Response Parameters service_command (String) Maximum Length Possible/ expected values Special Character Description 20 SDK_TOKEN _ Command access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic sdk_token (alphanumeric) Maximum Length Example Description 100 dwp78q3 A unique device identifier. response_message (alphanumeric) Maximum Length Possible/Expected Values Description 100 Possible/ expected values: Please refer to section messages Message description of the response code. It returns according to the request language. response_code (numeric) Maximum Length Possible/Expected Values Description 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Message description of the response code. It returns according to the request language. status (numeric) Maximum Length Possible/Expected Values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Mobile SDK Parameters"},{"location":"sdktokenparameters/#sdk-token-parameters","text":"","title":"SDK Token Parameters"},{"location":"sdktokenparameters/#request-parameters","text":"service_command (String, mandatory) Maximum Length Possible/ expected values Special Character Description 20 SDK_TOKEN _ Command access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic device_id (alphanumeric, mandatory) Maximum Length Example Special characters Description 100 ffffffff-a9fa-0b44-7b27-29e70033c587 _ - . @ + A unique device identifier.","title":"Request Parameters"},{"location":"sdktokenparameters/#response-parameters","text":"service_command (String) Maximum Length Possible/ expected values Special Character Description 20 SDK_TOKEN _ Command access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic sdk_token (alphanumeric) Maximum Length Example Description 100 dwp78q3 A unique device identifier. response_message (alphanumeric) Maximum Length Possible/Expected Values Description 100 Possible/ expected values: Please refer to section messages Message description of the response code. It returns according to the request language. response_code (numeric) Maximum Length Possible/Expected Values Description 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Message description of the response code. It returns according to the request language. status (numeric) Maximum Length Possible/Expected Values Description 2 Please refer to section statuses A two-digit numeric value that indicates the status of the transaction. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Response Parameters"},{"location":"securitysettings/","text":"Security Settings Security Settings are configurations to your account. The Security Settings differ based on the Merchant Account. The validation takes place based on the settings pertaining to each Merchant Account. Security Settings Configuration To configure your security settings, do the following: Select \u201cSecurity Settings\u201d under the Integration Settings tab. Click \u201cGenerate\u201d to generate your Access Code. Select the SHA Type from the available drop-down list. Enter the SHA Request Phrase and the SHA Response Phrase. Enter the Origin IP or the Origin URL. Click \u201cSave Changes\u201d.","title":"Security Settings"},{"location":"securitysettings/#security-settings","text":"Security Settings are configurations to your account. The Security Settings differ based on the Merchant Account. The validation takes place based on the settings pertaining to each Merchant Account.","title":"Security Settings"},{"location":"securitysettings/#security-settings-configuration","text":"To configure your security settings, do the following: Select \u201cSecurity Settings\u201d under the Integration Settings tab. Click \u201cGenerate\u201d to generate your Access Code. Select the SHA Type from the available drop-down list. Enter the SHA Request Phrase and the SHA Response Phrase. Enter the Origin IP or the Origin URL. Click \u201cSave Changes\u201d.","title":"Security Settings Configuration"},{"location":"subscription/","text":"","title":"Subscription"},{"location":"testing/","text":"Testing Our testing environment provides you with opportunity to test your integration. You can sign up for test account and get started with testing your integrations. Test Card Details You want to test a transaction but you don\u2019t have a credit card or user credentials for our other payments options? Well we\u2019ve got your back, here you can find card numbers for any type of test you wish to do. Credit Cards Card Type Number Expiry Date CVV/CVC Visa 4005550000000001 05/21 123 MasterCard 5123456789012346 05/21 123 AMEX 345678901234564 05/21 1234 3-D Secure Credit Cards Card Type Number Expiry Date CVV/CVC Visa 4557012345678902 05/21 123 MasterCard 5313581000123430 05/21 123 AMEX 374200000000004 05/21 1234 Debit Cards Card Type Number Expiry Date CVV/CVC MADA 5297412542005689 05/21 350 MEEZA 9818950527886700002 10/23 422 MEEZA 5078036221028566 09/23 143 Local Payment Methods Payment Option Number Expiry Date CVV/CVC Knet 0000000001 09/21 1234 Payment Option Card Number Expiry Date OTP PIN Naps 4215375500883243 06/21 1234 1234 Payment Option Payment Id Password OTP Sadad sadadOlpTest 1234 112358 Payment Option Number Card Type E-dirhamm 4724439901004942 Gold Card Digital Wallets PAYMENT OPTION Number Expiry Date CVV/CVC MasterPass 4000000000000002 05/21 123 Visa Checkout 4000000000000002 05/21 123","title":"Testing"},{"location":"testing/#testing","text":"Our testing environment provides you with opportunity to test your integration. You can sign up for test account and get started with testing your integrations.","title":"Testing"},{"location":"testing/#test-card-details","text":"You want to test a transaction but you don\u2019t have a credit card or user credentials for our other payments options? Well we\u2019ve got your back, here you can find card numbers for any type of test you wish to do.","title":"Test Card Details"},{"location":"tokenization/","text":"FORT Tokenization Service For every transaction request sent to PayFORT payment system, it will send back a Token for various transactions such as authorization, purchase, installements, etc. This section provides details about PayFORT Tokenization Service. The Tokenization service allows you to store the Customer\u2019s credit card details in a safe and secure environment substituting the Customer\u2019s sensitive card details with a non-sensitive equivalent referred to as a Token. The Token can be used to process transactions without the use of the card details. This service can be used in both Authorization , Purchase operations. PayFort\u2019s Operations team must activate the Tokenization service. The Customer should agree to save his/ her card details. The Token will be stored only if the card is valid and if the transaction was processed successfully. Integration Flow Placeholder: Please provide Integration flow along with a diagram. Create Token in Transaction Flow This process will create a new Token for every new Authorization/Purchase transaction. You can use the input parameters provided in this section to create a request for new Token and the same parameter will hold the Token name in PayFort\u2019s Response: ATTRIBUTES Description token_name Alphanumeric Optional max: 100 Holds the name of the Token to update the Token or rename it. Example: OpVmp Special characters: . @ - _ Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Create New Token Service This service will help you to verify and provide token's to customer's credit cards without incurring additional charge on your customer. You can use following endpoints to create a request to PayFORT for verifying and providing tokens to your customer's credit cards. Endpoints Sandbox POST https://sbcheckout.PayFort.com/FortAPI/paymentPage Live POST https://checkout.PayFort.com/FortAPI/paymentPage Parameters Submission Type HTTPs Form Post Request. Create New Token Service - Request Placeholder: Provide sample code for new token service request. For input parameters that are required to be sent through request please visit the link Create New Token Service - Response The following parameters will be returned in PayFort\u2019s Response: Placeholder: Please provide sample JSON response sent by PayFORT system. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Update Token Service If in the future your customer updates his/her credit card then this service will update the tokens for the card. This service enables you to update your card associated with a token and the status of a token via API calls. Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Update Token Service \u2013 Request Placeholder: Provide sample code for Update Token Service - Request. To view more details on input parameters please visit the following link Update Token Service \u2013 Response The following parameters will be returned in PayFort\u2019s Response: Placeholder: Provide sample response sent by PayFORT system. To view more details on response parameters please visit the following link Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Currency Exchange Service This service allows to convert customer's transaction amount from one currency into another currency using live currency exchange rate. Before start implementing this service please make sure to contact support@payfort.com to activate it in your account Endpoints Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Currency Exchange - Request You can use the above endpoints to create and request to PayFORT system to use the currency exchange service. Before that you are required to contact support@payfort.com to activate this service. Placeholder: Please provide sample code for Currency exchange request . Please visit the link to view the details of various input parameters. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Currency Exchange - Response Placeholder: Please provide sample JSON response sent by PayFORT system. Please visit the link to view the details of various response parameters. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Installment Service tokenization This is a separate tokenization service when Installment service is activated on your merchant site. For more details on the Installment service please visit this link Merchant Page 2.0 Tokenization First, you need to send a [Get Instalments Plans API] request; to get the instalments details. Endpoints Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage Parameters Submission Type HTTPs Form Post Request Merchant Page 2.0 Tokenization - Request Placeholder: Sample code for Merchant Page 2.0 installments request. Please visit the link to view the details of various input parameters for Merchant Page 2.0 Tokenization - Request. Please don\u2019t include the following parameters in calculating the signature if you are using Merchant Page 2.0 tokenization request: card_security_code , card number , expiry_date , card_holder_name , remember_me . Merchant Page 2.0 Tokenization - Response Placeholder: Provide sample json response. Please visit the link to view the details of various response parameters for Merchant Page 2.0 Tokenization - Response. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Tokenization (Safe)"},{"location":"tokenization/#fort-tokenization-service","text":"For every transaction request sent to PayFORT payment system, it will send back a Token for various transactions such as authorization, purchase, installements, etc. This section provides details about PayFORT Tokenization Service. The Tokenization service allows you to store the Customer\u2019s credit card details in a safe and secure environment substituting the Customer\u2019s sensitive card details with a non-sensitive equivalent referred to as a Token. The Token can be used to process transactions without the use of the card details. This service can be used in both Authorization , Purchase operations. PayFort\u2019s Operations team must activate the Tokenization service. The Customer should agree to save his/ her card details. The Token will be stored only if the card is valid and if the transaction was processed successfully.","title":"FORT Tokenization Service"},{"location":"tokenization/#integration-flow","text":"Placeholder: Please provide Integration flow along with a diagram.","title":"Integration Flow"},{"location":"tokenization/#create-token-in-transaction-flow","text":"This process will create a new Token for every new Authorization/Purchase transaction. You can use the input parameters provided in this section to create a request for new Token and the same parameter will hold the Token name in PayFort\u2019s Response: ATTRIBUTES Description token_name Alphanumeric Optional max: 100 Holds the name of the Token to update the Token or rename it. Example: OpVmp Special characters: . @ - _ Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Create Token in Transaction Flow"},{"location":"tokenization/#create-new-token-service","text":"This service will help you to verify and provide token's to customer's credit cards without incurring additional charge on your customer. You can use following endpoints to create a request to PayFORT for verifying and providing tokens to your customer's credit cards.","title":"Create New Token Service"},{"location":"tokenization/#endpoints","text":"Sandbox POST https://sbcheckout.PayFort.com/FortAPI/paymentPage Live POST https://checkout.PayFort.com/FortAPI/paymentPage","title":"Endpoints"},{"location":"tokenization/#parameters-submission-type","text":"HTTPs Form Post Request.","title":"Parameters Submission Type"},{"location":"tokenization/#create-new-token-service-request","text":"Placeholder: Provide sample code for new token service request. For input parameters that are required to be sent through request please visit the link","title":"Create New Token Service - Request"},{"location":"tokenization/#create-new-token-service-response","text":"The following parameters will be returned in PayFort\u2019s Response: Placeholder: Please provide sample JSON response sent by PayFORT system. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Create New Token Service - Response"},{"location":"tokenization/#update-token-service","text":"If in the future your customer updates his/her credit card then this service will update the tokens for the card. This service enables you to update your card associated with a token and the status of a token via API calls.","title":"Update Token Service"},{"location":"tokenization/#endpoints_1","text":"Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"tokenization/#parameters-submission-type_1","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"tokenization/#update-token-service-request","text":"Placeholder: Provide sample code for Update Token Service - Request. To view more details on input parameters please visit the following link","title":"Update Token Service \u2013 Request"},{"location":"tokenization/#update-token-service-response","text":"The following parameters will be returned in PayFort\u2019s Response: Placeholder: Provide sample response sent by PayFORT system. To view more details on response parameters please visit the following link Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Update Token Service \u2013 Response"},{"location":"tokenization/#currency-exchange-service","text":"This service allows to convert customer's transaction amount from one currency into another currency using live currency exchange rate. Before start implementing this service please make sure to contact support@payfort.com to activate it in your account","title":"Currency Exchange Service"},{"location":"tokenization/#endpoints_2","text":"Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"tokenization/#parameters-submission-type_2","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"tokenization/#currency-exchange-request","text":"You can use the above endpoints to create and request to PayFORT system to use the currency exchange service. Before that you are required to contact support@payfort.com to activate this service. Placeholder: Please provide sample code for Currency exchange request . Please visit the link to view the details of various input parameters. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Currency Exchange - Request"},{"location":"tokenization/#currency-exchange-response","text":"Placeholder: Please provide sample JSON response sent by PayFORT system. Please visit the link to view the details of various response parameters. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Currency Exchange - Response"},{"location":"tokenization/#installment-service-tokenization","text":"This is a separate tokenization service when Installment service is activated on your merchant site. For more details on the Installment service please visit this link","title":"Installment Service tokenization"},{"location":"tokenization/#merchant-page-20-tokenization","text":"First, you need to send a [Get Instalments Plans API] request; to get the instalments details.","title":"Merchant Page 2.0 Tokenization"},{"location":"tokenization/#endpoints_3","text":"Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage","title":"Endpoints"},{"location":"tokenization/#parameters-submission-type_3","text":"HTTPs Form Post Request","title":"Parameters Submission Type"},{"location":"tokenization/#merchant-page-20-tokenization-request","text":"Placeholder: Sample code for Merchant Page 2.0 installments request. Please visit the link to view the details of various input parameters for Merchant Page 2.0 Tokenization - Request. Please don\u2019t include the following parameters in calculating the signature if you are using Merchant Page 2.0 tokenization request: card_security_code , card number , expiry_date , card_holder_name , remember_me .","title":"Merchant Page 2.0 Tokenization - Request"},{"location":"tokenization/#merchant-page-20-tokenization-response","text":"Placeholder: Provide sample json response. Please visit the link to view the details of various response parameters for Merchant Page 2.0 Tokenization - Response. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"Merchant Page 2.0 Tokenization - Response"},{"location":"tokenization/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"tokenization/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"tokenizationparameters/","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: CREATE_TOKEN access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar card_number Numeric Mandatory Max: 19 The clear card data collect on the Merchant page form, developed by the Merchant. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number Example: 4005550000000001 expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 return_url Alphanumeric Mandatory Max: 400 The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a currency Alpha Optional Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD token_name Alphanumeric Optional Max: 100 The Token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ card_holder_name Alpha Optional Max: 50 The card holder name. Example: John Smith Special characters: ' - . Create New Token Service - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: CREATE_TOKEN access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar card_number Numeric Max: 19 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number Example: 400555 * 0001 expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 return_url Alphanumeric Max: 400 The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. Example: http://www.merchant.com signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD token_name Alphanumeric Max: 100 The Token received from the Tokenization process. Example: Op9Vmp card_holder_name Alpha Max: 50 The card holder name. Example: John Smith response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section statuses Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones-. Update Token Service This service enables you to update your card associated with a token and the status of a token via API calls. Update Token Service URLs Test Environment URL: https://sbpaymentservices.payfort.com/FortAPI/paymentApi Production Environment URL: https://paymentservices.payfort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Update Token Service \u2013 Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: UPDATE_TOKEN Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar token_name Alphanumeric Mandatory Max: 100 The token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a expiry_date Numeric Optional Max: 4 The card\u2019s expiry date. Example: 2105 card_holder_name Alpha Optional Max: 50 The card holder name. Example: John Smith Special characters: ' - . currency Alpha Optional Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD token_status Alpha Optional Max: 8 Presents the token status. Possible/ expected values: - ACTIVE - INACTIVE new_token_name Alphanumeric Optional Max: 100 The new name used to update the existing token. Example: Test1 Special characters: _ - @ . Update Token Service \u2013 Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: UPDATE_TOKEN access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar token_name Alphanumeric Max: 100 The Token received from the Tokenization process. Example: Op9Vmp signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Max: 19 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number Example: 400555 * 0001 card_holder_name Alpha Max: 50 The card holder name. Example: John Smith currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 58000 token_status Alpha Max: 8 Presents the token status. Possible/ expected values: -ACTIVE -INACTIVE creation_date Alphanumeric Max: 30 Creation date of content in UTC format. Example: 2017-03-13T10:09:19+02:00 card_brand Alpha Max: 10 Issuer account type. Possible/ expected values: - MASTERCARD - VISA - AMEX card_bin Numeric Max: 8 The first 6 digits of the card number.*If the card number for MEEZA was of length 19 then the card bin will be the first 8 digits. Example: 478773 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section [statuses]( Currency Exchange - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: CURRENCY_CONVERSION Special characters: _ access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj amount Numeric Mandatory max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha Mandatory max: 2 The checkout page and messages language. Possible/ expected values: en / ar converted_currency Alpha Mandatory max: 3 The ISO3 currency code of the currency you are converting the amount to. Example: AED signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Currency Exchange - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: CURRENCY_CONVERSION access_code Alphanumeric max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj amount Numeric max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: (Please refer to section messages ). response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: (Please refer to section statuses ). converted_amount Alpha max: 3 The amount after converting to another currency. Example: 100 USD = 367.298 AED converted_currency Alpha max: 3 The ISO3 currency code of the currency you are converting the amount to. Example: AED conversion_number Alphanumeric max: 20 A unique number generated by PayFort for every valid currency conversion request. Example: 1443796866848 Merchant Page 2.0 Tokenization - Request Placeholder: Sample code for Merchant Page 2.0 installments request. Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: TOKENIZATION access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory Max: 16 The clear credit card\u2019s number. Example: 4005550000000001 card_security_code Numeric Mandatory Max: 4 A security code for the card. * Only AMEX accepts card security code of 4 digits. Example: 123 signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). *Please don\u2019t include the following parameters in calculating the signature of Merchant Page 2.0 tokenization request: card_security_code, card number, expiry_date, card_holder_name, remember_me. Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a token_name Alphanumeric Optional Max: 100 The token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ card_holder_name Alpha Optional Max: 50 The card holder name. Example: John Smith Special characters: . - \u2019 remember_me Alpha Optional Max: 3 This parameter provides you with an indication to whether to save this token for the user based on the user selection. Possible/ expected values: - YES - NO return_url Alphanumeric Optional Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . Please don\u2019t include the following parameters in calculating the signature if you are using Merchant Page 2.0 tokenization request: card_security_code, card number, expiry_date, card_holder_name, remember_me. Merchant Page 2.0 Tokenization - Response Placeholder: Provide sample json response. The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: TOKENIZATION access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Max: 19 The masked credit card\u2019s number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a token_name Alphanumeric max: 100 The Token received from the Tokenization process. Example: COp9Vmp response_message Alphanumeric Max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: (Please refer to section statuses ). card_bin Numeric Max: 8 The first 6 digits of the card number.*If the card number for MEEZA was of length 19 then the card bin will be the first 8 digits. Example: 478773 card_holder_name Alpha Max: 50 The card holder name. Example: John Smith remember_me Alpha Max: 3 This parameter provides you with an indication to whether to save this token for the user based on the user selection. Possible/ expected values: - YES - NO return_url Alphanumeric Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com","title":"Tokenizationparameters"},{"location":"tokenizationparameters/#update-token-service","text":"This service enables you to update your card associated with a token and the status of a token via API calls. Update Token Service URLs Test Environment URL: https://sbpaymentservices.payfort.com/FortAPI/paymentApi Production Environment URL: https://paymentservices.payfort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Update Token Service \u2013 Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory Max: 20 Command. Possible/ expected values: UPDATE_TOKEN Special characters: _ access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar token_name Alphanumeric Mandatory Max: 100 The token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a expiry_date Numeric Optional Max: 4 The card\u2019s expiry date. Example: 2105 card_holder_name Alpha Optional Max: 50 The card holder name. Example: John Smith Special characters: ' - . currency Alpha Optional Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD token_status Alpha Optional Max: 8 Presents the token status. Possible/ expected values: - ACTIVE - INACTIVE new_token_name Alphanumeric Optional Max: 100 The new name used to update the existing token. Example: Test1 Special characters: _ - @ . Update Token Service \u2013 Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: UPDATE_TOKEN access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar token_name Alphanumeric Max: 100 The Token received from the Tokenization process. Example: Op9Vmp signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Max: 19 The masked credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. *AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number Example: 400555 * 0001 card_holder_name Alpha Max: 50 The card holder name. Example: John Smith currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD response_message Alphanumeric Max: 150 The message description of the response code; it returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 58000 token_status Alpha Max: 8 Presents the token status. Possible/ expected values: -ACTIVE -INACTIVE creation_date Alphanumeric Max: 30 Creation date of content in UTC format. Example: 2017-03-13T10:09:19+02:00 card_brand Alpha Max: 10 Issuer account type. Possible/ expected values: - MASTERCARD - VISA - AMEX card_bin Numeric Max: 8 The first 6 digits of the card number.*If the card number for MEEZA was of length 19 then the card bin will be the first 8 digits. Example: 478773 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: Please refer to section [statuses](","title":"Update Token Service"},{"location":"tokenizationparameters/#currency-exchange-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: CURRENCY_CONVERSION Special characters: _ access_code Alphanumeric Mandatory max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj amount Numeric Mandatory max: 10 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount. Example: 10000 currency Alpha Mandatory max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha Mandatory max: 2 The checkout page and messages language. Possible/ expected values: en / ar converted_currency Alpha Mandatory max: 3 The ISO3 currency code of the currency you are converting the amount to. Example: AED signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Currency Exchange - Request"},{"location":"tokenizationparameters/#currency-exchange-response","text":"The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: CURRENCY_CONVERSION access_code Alphanumeric max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj amount Numeric max: 10 The transaction\u2019s amount. Example: 10000 currency Alpha max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: USD language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: (Please refer to section messages ). response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: (Please refer to section statuses ). converted_amount Alpha max: 3 The amount after converting to another currency. Example: 100 USD = 367.298 AED converted_currency Alpha max: 3 The ISO3 currency code of the currency you are converting the amount to. Example: AED conversion_number Alphanumeric max: 20 A unique number generated by PayFort for every valid currency conversion request. Example: 1443796866848","title":"Currency Exchange - Response"},{"location":"tokenizationparameters/#merchant-page-20-tokenization-request","text":"Placeholder: Sample code for Merchant Page 2.0 installments request. Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: TOKENIZATION access_code Alphanumeric Mandatory Max: 20 Access code. Example: zx0IPmPy5jp1vAz merchant_identifier Alphanumeric Mandatory Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 Special characters: - _ . language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Mandatory Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory Max: 16 The clear credit card\u2019s number. Example: 4005550000000001 card_security_code Numeric Mandatory Max: 4 A security code for the card. * Only AMEX accepts card security code of 4 digits. Example: 123 signature Alphanumeric Mandatory Max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). *Please don\u2019t include the following parameters in calculating the signature of Merchant Page 2.0 tokenization request: card_security_code, card number, expiry_date, card_holder_name, remember_me. Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a token_name Alphanumeric Optional Max: 100 The token received from the Tokenization process. Example: Op9Vmp Special characters: . @ - _ card_holder_name Alpha Optional Max: 50 The card holder name. Example: John Smith Special characters: . - \u2019 remember_me Alpha Optional Max: 3 This parameter provides you with an indication to whether to save this token for the user based on the user selection. Possible/ expected values: - YES - NO return_url Alphanumeric Optional Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com Special characters: $ ! = ? # & - _ / : . Please don\u2019t include the following parameters in calculating the signature if you are using Merchant Page 2.0 tokenization request: card_security_code, card number, expiry_date, card_holder_name, remember_me.","title":"Merchant Page 2.0 Tokenization - Request"},{"location":"tokenizationparameters/#merchant-page-20-tokenization-response","text":"Placeholder: Provide sample json response. The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha Max: 20 Command. Possible/ expected values: TOKENIZATION access_code Alphanumeric Max: 20 Access code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Max: 40 The Merchant\u2019s unique order number. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Max: 19 The masked credit card\u2019s number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. Example: 400555 * 0001 signature Alphanumeric Max: 200 A string hashed using the Secure Hash Algorithm. Please refer to section Signature Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a token_name Alphanumeric max: 100 The Token received from the Tokenization process. Example: COp9Vmp response_message Alphanumeric Max: 150 Message description of the response code. It returns according to the request language. Possible/ expected values: Please refer to section messages response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 20064 status Numeric Max: 2 A two-digit numeric value that indicates the status of the transaction. Possible/ expected values: (Please refer to section statuses ). card_bin Numeric Max: 8 The first 6 digits of the card number.*If the card number for MEEZA was of length 19 then the card bin will be the first 8 digits. Example: 478773 card_holder_name Alpha Max: 50 The card holder name. Example: John Smith remember_me Alpha Max: 3 This parameter provides you with an indication to whether to save this token for the user based on the user selection. Possible/ expected values: - YES - NO return_url Alphanumeric Max: 400 The URL of the Merchant\u2019s page to be displayed to the customer when the order is processed. Example: http://www.merchant.com","title":"Merchant Page 2.0 Tokenization - Response"},{"location":"transactioncodes/","text":"Transaction Response Codes The Response code is made up of 5 digits; a combination of a 2-digit Status (Please see section Status Codes ) and a 3-digit Message (Please see section message codes ) Status Codes Status Code Description 00 Invalid Request. 01 Order Stored. 02 Authorization Success. 03 Authorization Failed. 04 Capture Success. 05 Capture failed. 06 Refund Success. 07 Refund Failed. 08 Authorization Voided Successfully. 09 Authorization Void Failed. 10 Incomplete. 11 Check status Failed. 12 Check status success. 13 Purchase Failure. 14 Purchase Success. 15 Uncertain Transaction. 17 Tokenization failed. 18 Tokenization success. 19 Transaction pending. 20 On hold. 21 SDK Token creation failure. 22 SDK Token creation success. 23 Failed to process Digital Wallet service. 24 Digital wallet order processed successfully. 27 Check card balance failed. 28 Check card balance success. 29 Redemption failed. 30 Redemption success. 31 Reverse Redemption transaction failed. 32 Reverse Redemption transaction success. 40 Transaction In review. 42 Currency conversion success. 43 Currency conversion failed. 44 3ds success. 45 3ds failed. 46 Bill creation success. 47 Bill creation failed. 48 Generating invoice payment link success. 49 Generating invoice payment link failed. 50 Batch file upload successfully. 51 Upload batch file failed. 52 Token created successfully. 53 Token creation failed. 54 Get Tokens Success. 55 Get Tokens Failed. 56 Reporting Request Success. 57 Reporting Request Failed. 58 Token updated successfully. 59 Token updated failed. 62 Get Installment Plans Successfully. 63 Get Installment plans Failed. 66 Delete Token Success. 70 Get batch results successfully. 71 Get batch results failed. 72 Batch processing success. 73 Batch processing failed. 74 Bank transfer successfully. 75 Bank transfer failed. 76 Batch validation successfully. 77 Batch validation failed. 80 Credit card verified successfully. 81 Failed to verify credit card. 88 ValU OTP Generate Success. 89 ValU OTP Generate Failure Status 90 Customer Verify Success. 91 Customer Verify Failed. 92 Verify OTP success. 93 Failed OTP verify. Message Codes Message Code Message Value 000 Success. 001 Missing parameter. 002 Invalid parameter format. 003 Payment option is not available for this merchant\u2019s account. 004 Invalid command. 005 Invalid amount. 006 Technical problem. 007 Duplicate order number. 008 Signature mismatch. 009 Invalid merchant identifier. 010 Invalid access code. 011 Order not saved. 012 Card expired. 013 Invalid currency. 014 Inactive payment option. 015 Inactive merchant account. 016 Invalid card number. 017 Operation not allowed by the acquirer. 018 Operation not allowed by processor. 019 Inactive acquirer. 020 Processor is inactive. 021 Payment option deactivated by acquirer. 023 Currency not accepted by acquirer. 024 Currency not accepted by processor. 025 Processor integration settings are missing. 026 Acquirer integration settings are missing. 027 Invalid extra parameters. 029 Insufficient funds. 030 Authentication failed. 031 Invalid issuer. 032 Invalid parameter length. 033 Parameter value not allowed. 034 Operation not allowed. 035 Order created successfully. 036 Order not found. 037 Missing return URL. 038 Token service inactive. 039 No active payment option found. 040 Invalid transaction source. 042 Operation amount exceeds the authorized amount. 043 Inactive Operation. 044 Token name does not exist. 046 Channel is not configured for the selected payment option. 047 Order already processed. 048 Operation amount exceeds captured amount. 049 Operation not valid for this payment option. 050 Merchant per transaction limit exceeded. 051 Technical error. 052 Consumer is not in OLP database. 053 Merchant is not found in OLP Engine DB. 054 Transaction cannot be processed at this moment. 055 OLP ID Alias is not valid. Please contact your bank. 056 OLP ID Alias does not exist. Please enter a valid OLP ID Alias. 057 Transaction amount exceeds the daily transaction limit. 058 Transaction amount exceeds the per transaction limit. 059 Merchant Name and SADAD Merchant ID do not match. 060 The entered OLP password is incorrect. Please provide a valid password. 062 Token has been created. 063 Token has been updated. 064 3-D Secure check requested. 065 Transaction waiting for customer\u2019s action. 066 Merchant reference already exists. 067 Dynamic Descriptor not configured for selected payment option. 068 SDK service is inactive. 069 Mapping not found for the given error code. 070 device_id mismatch. 071 Failed to initiate connection. 072 Transaction has been cancelled by the consumer. 073 Invalid request format. 074 Transaction failed. 075 Transaction failed. 076 Transaction not found in OLP. 077 Error transaction code not found. 078 Failed to check fraud screen. 079 Transaction challenged by fraud rules. 080 Invalid payment option. 082 Inactive fraud service. 083 Unexpected user behavior. 084 Transaction amount is either bigger than maximum or less than minimum amount accepted for the selected plan. 086 Installment plan is not configured for Merchant account. 087 Card BIN does not match accepted issuer bank. 088 Token name was not created for this transaction. 089 Failed to retrieve digital wallet details. 090 Transaction in review. 092 Invalid issuer code. 093 service inactive. 094 Invalid Plan Code. 095 Inactive Issuer. 096 Inactive Plan. 097 Operation not allowed for service. 098 Invalid or expired call_id. 099 Failed to execute service. 100 Invalid expiry date. 101 Bill number not found. 102 Apple Pay order has been expired. 103 Duplicate subscription ID. 104 No plans valid for request. 105 Invalid bank code. 106 Inactive bank. 107 Invalid transfer_date. 110 Contradicting parameters, please refer to the integration guide. 111 Service not applicable for payment option. 112 Service not applicable for payment operation. 113 Service not applicable for e-commerce indicator. 114 Token already exist. 115 Expired invoice payment link. 116 Inactive notification type. 117 Invoice payment link already processed. 118 Order bounced. 119 Request dropped. 120 Payment link terms and conditions not found. 121 Card number is not verified. 122 Invalid date interval. 123 You have exceeded the maximum number of attempts. 124 Account successfully created. 125 Invoice already paid. 126 Duplicate invoice ID. 127 Merchant reference is not generated yet. 128 The generated report is still pending, you can\u2019t download it now. 129 \u201cDownloaded report\u201d queue is full. Wait till its empty again. 134 Your search results have exceeded the maximum number of records. 136 The Batch file validation is failed. 137 Invalid Batch file execution date. 138 The Batch file still under validation. 140 The Batch file still under processing. 141 The Batch reference does not exist. 142 The Batch file header is invalid. 144 Invalid Batch file. 146 The Batch reference is already exist. 147 The Batch process request has been received. 148 Batch file will be processed. 149 Payment link request id not found. 150 Payment link is already open. 151 3ds_id does not exist. 152 3Ds verification doesn\u2019t match the request details. 154 You have reached the maximum number of upload retries. 155 The upload retries is not configured. 662 Operation not allowed. The specified order is not confirmed yet. 666 Transaction declined. 773 Transaction closed. 777 The transaction has been processed, but failed to receive confirmation. 778 Session timed-out. 779 Transformation error. 780 Transaction number transformation error. 781 Message or response code transformation error. 783 Installments service inactive. 784 Transaction still processing you can\u2019t make another transaction. 785 Transaction blocked by fraud check. 787 Failed to authenticate the user. 788 Invalid bill number. 789 Expired bill number. 790 Invalid bill type code. Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Transactioncodes"},{"location":"transactioncodes/#transaction-response-codes","text":"The Response code is made up of 5 digits; a combination of a 2-digit Status (Please see section Status Codes ) and a 3-digit Message (Please see section message codes )","title":"Transaction Response Codes"},{"location":"transactioncodes/#status-codes","text":"Status Code Description 00 Invalid Request. 01 Order Stored. 02 Authorization Success. 03 Authorization Failed. 04 Capture Success. 05 Capture failed. 06 Refund Success. 07 Refund Failed. 08 Authorization Voided Successfully. 09 Authorization Void Failed. 10 Incomplete. 11 Check status Failed. 12 Check status success. 13 Purchase Failure. 14 Purchase Success. 15 Uncertain Transaction. 17 Tokenization failed. 18 Tokenization success. 19 Transaction pending. 20 On hold. 21 SDK Token creation failure. 22 SDK Token creation success. 23 Failed to process Digital Wallet service. 24 Digital wallet order processed successfully. 27 Check card balance failed. 28 Check card balance success. 29 Redemption failed. 30 Redemption success. 31 Reverse Redemption transaction failed. 32 Reverse Redemption transaction success. 40 Transaction In review. 42 Currency conversion success. 43 Currency conversion failed. 44 3ds success. 45 3ds failed. 46 Bill creation success. 47 Bill creation failed. 48 Generating invoice payment link success. 49 Generating invoice payment link failed. 50 Batch file upload successfully. 51 Upload batch file failed. 52 Token created successfully. 53 Token creation failed. 54 Get Tokens Success. 55 Get Tokens Failed. 56 Reporting Request Success. 57 Reporting Request Failed. 58 Token updated successfully. 59 Token updated failed. 62 Get Installment Plans Successfully. 63 Get Installment plans Failed. 66 Delete Token Success. 70 Get batch results successfully. 71 Get batch results failed. 72 Batch processing success. 73 Batch processing failed. 74 Bank transfer successfully. 75 Bank transfer failed. 76 Batch validation successfully. 77 Batch validation failed. 80 Credit card verified successfully. 81 Failed to verify credit card. 88 ValU OTP Generate Success. 89 ValU OTP Generate Failure Status 90 Customer Verify Success. 91 Customer Verify Failed. 92 Verify OTP success. 93 Failed OTP verify.","title":"Status Codes"},{"location":"transactioncodes/#message-codes","text":"Message Code Message Value 000 Success. 001 Missing parameter. 002 Invalid parameter format. 003 Payment option is not available for this merchant\u2019s account. 004 Invalid command. 005 Invalid amount. 006 Technical problem. 007 Duplicate order number. 008 Signature mismatch. 009 Invalid merchant identifier. 010 Invalid access code. 011 Order not saved. 012 Card expired. 013 Invalid currency. 014 Inactive payment option. 015 Inactive merchant account. 016 Invalid card number. 017 Operation not allowed by the acquirer. 018 Operation not allowed by processor. 019 Inactive acquirer. 020 Processor is inactive. 021 Payment option deactivated by acquirer. 023 Currency not accepted by acquirer. 024 Currency not accepted by processor. 025 Processor integration settings are missing. 026 Acquirer integration settings are missing. 027 Invalid extra parameters. 029 Insufficient funds. 030 Authentication failed. 031 Invalid issuer. 032 Invalid parameter length. 033 Parameter value not allowed. 034 Operation not allowed. 035 Order created successfully. 036 Order not found. 037 Missing return URL. 038 Token service inactive. 039 No active payment option found. 040 Invalid transaction source. 042 Operation amount exceeds the authorized amount. 043 Inactive Operation. 044 Token name does not exist. 046 Channel is not configured for the selected payment option. 047 Order already processed. 048 Operation amount exceeds captured amount. 049 Operation not valid for this payment option. 050 Merchant per transaction limit exceeded. 051 Technical error. 052 Consumer is not in OLP database. 053 Merchant is not found in OLP Engine DB. 054 Transaction cannot be processed at this moment. 055 OLP ID Alias is not valid. Please contact your bank. 056 OLP ID Alias does not exist. Please enter a valid OLP ID Alias. 057 Transaction amount exceeds the daily transaction limit. 058 Transaction amount exceeds the per transaction limit. 059 Merchant Name and SADAD Merchant ID do not match. 060 The entered OLP password is incorrect. Please provide a valid password. 062 Token has been created. 063 Token has been updated. 064 3-D Secure check requested. 065 Transaction waiting for customer\u2019s action. 066 Merchant reference already exists. 067 Dynamic Descriptor not configured for selected payment option. 068 SDK service is inactive. 069 Mapping not found for the given error code. 070 device_id mismatch. 071 Failed to initiate connection. 072 Transaction has been cancelled by the consumer. 073 Invalid request format. 074 Transaction failed. 075 Transaction failed. 076 Transaction not found in OLP. 077 Error transaction code not found. 078 Failed to check fraud screen. 079 Transaction challenged by fraud rules. 080 Invalid payment option. 082 Inactive fraud service. 083 Unexpected user behavior. 084 Transaction amount is either bigger than maximum or less than minimum amount accepted for the selected plan. 086 Installment plan is not configured for Merchant account. 087 Card BIN does not match accepted issuer bank. 088 Token name was not created for this transaction. 089 Failed to retrieve digital wallet details. 090 Transaction in review. 092 Invalid issuer code. 093 service inactive. 094 Invalid Plan Code. 095 Inactive Issuer. 096 Inactive Plan. 097 Operation not allowed for service. 098 Invalid or expired call_id. 099 Failed to execute service. 100 Invalid expiry date. 101 Bill number not found. 102 Apple Pay order has been expired. 103 Duplicate subscription ID. 104 No plans valid for request. 105 Invalid bank code. 106 Inactive bank. 107 Invalid transfer_date. 110 Contradicting parameters, please refer to the integration guide. 111 Service not applicable for payment option. 112 Service not applicable for payment operation. 113 Service not applicable for e-commerce indicator. 114 Token already exist. 115 Expired invoice payment link. 116 Inactive notification type. 117 Invoice payment link already processed. 118 Order bounced. 119 Request dropped. 120 Payment link terms and conditions not found. 121 Card number is not verified. 122 Invalid date interval. 123 You have exceeded the maximum number of attempts. 124 Account successfully created. 125 Invoice already paid. 126 Duplicate invoice ID. 127 Merchant reference is not generated yet. 128 The generated report is still pending, you can\u2019t download it now. 129 \u201cDownloaded report\u201d queue is full. Wait till its empty again. 134 Your search results have exceeded the maximum number of records. 136 The Batch file validation is failed. 137 Invalid Batch file execution date. 138 The Batch file still under validation. 140 The Batch file still under processing. 141 The Batch reference does not exist. 142 The Batch file header is invalid. 144 Invalid Batch file. 146 The Batch reference is already exist. 147 The Batch process request has been received. 148 Batch file will be processed. 149 Payment link request id not found. 150 Payment link is already open. 151 3ds_id does not exist. 152 3Ds verification doesn\u2019t match the request details. 154 You have reached the maximum number of upload retries. 155 The upload retries is not configured. 662 Operation not allowed. The specified order is not confirmed yet. 666 Transaction declined. 773 Transaction closed. 777 The transaction has been processed, but failed to receive confirmation. 778 Session timed-out. 779 Transformation error. 780 Transaction number transformation error. 781 Message or response code transformation error. 783 Installments service inactive. 784 Transaction still processing you can\u2019t make another transaction. 785 Transaction blocked by fraud check. 787 Failed to authenticate the user. 788 Invalid bill number. 789 Expired bill number. 790 Invalid bill type code.","title":"Message Codes"},{"location":"transactioncodes/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"transactionfeedback/","text":"PayFORT Transaction Feedback Overview Transaction feedback keeps you updated regarding a transaction. The PayFORT transaction Feedback system provides you with two types of configurable notifications: 1. Direct Transaction Feedback PayFort sends you HTTPs notifications that informs the transaction\u2019s final status whenever a transaction is processed. 2. Notification Transaction Feedback PayFort sends you HTTPs notifications that inform the transaction\u2019s final status whenever a transaction status is updated. Registering Transaction Feedback URLs 1. Log in to your back-office account. 2. Select the active channel under Integration Settings > Technical Settings. 3. Enter your Direct Transaction Feedback URL and Notification Transaction Feedback URL. 4. Click \u201cSave Changes\u201d button. Transaction Feedback implementation The Transaction Feedback URL is required to send you the response parameters after processing the transaction on the your side. For the Direct Transaction Feedback, it sends the immediate payments response in all cases , like if the user closed the browser before getting redirected to the Redirection URL due to a drop in the internet connection or he closed the browser during the Redirection , you will create an endpoint which accepts the notifications received from PayFort side as POST Method. For the Notification Transaction Feedback , it\u2019s required to provide you the transaction final status update whenever received , like if the Transaction was pending due to the unavailability for any party , the final update will be pushed to the Notification Feedback URL as POST Method. Beyond whatever your Transaction Feedback URL does with the data received, it must also return a 2xx (like 200 , 201 , etc\u2026) or 302 HTTP status code to update the PayFORT system that the notification was received. If your URL does not return 2xx or 302, the PayFORT will continue to retry the notification for 10 times with 10 seconds in between until it\u2019s properly acknowledged. You can check the Direct and Notification Feedback logs in your PayFort back-office Account to check the details related to the submission like the Transaction Feedback URL which was triggered, The response which our FORT system pushed , The response Code and Status retuned from your Transaction Feedback URL. The specifics of the data will differ based upon the financial operation that has been processed. Please refer to the FORT integration guide for more details. If you want to change the submission type to JSON or XML, you can contact us on **integration@payfort.com**. If you want to change the grace period or the time interval between the retries please contact us on **integration@payfort.com**.","title":"PayFORT Transaction Feedback"},{"location":"transactionfeedback/#payfort-transaction-feedback","text":"","title":"PayFORT Transaction Feedback"},{"location":"transactionfeedback/#overview","text":"Transaction feedback keeps you updated regarding a transaction. The PayFORT transaction Feedback system provides you with two types of configurable notifications: 1. Direct Transaction Feedback PayFort sends you HTTPs notifications that informs the transaction\u2019s final status whenever a transaction is processed. 2. Notification Transaction Feedback PayFort sends you HTTPs notifications that inform the transaction\u2019s final status whenever a transaction status is updated.","title":"Overview"},{"location":"transactionfeedback/#registering-transaction-feedback-urls","text":"1. Log in to your back-office account. 2. Select the active channel under Integration Settings > Technical Settings. 3. Enter your Direct Transaction Feedback URL and Notification Transaction Feedback URL. 4. Click \u201cSave Changes\u201d button.","title":"Registering Transaction Feedback URLs"},{"location":"transactionfeedback/#transaction-feedback-implementation","text":"The Transaction Feedback URL is required to send you the response parameters after processing the transaction on the your side. For the Direct Transaction Feedback, it sends the immediate payments response in all cases , like if the user closed the browser before getting redirected to the Redirection URL due to a drop in the internet connection or he closed the browser during the Redirection , you will create an endpoint which accepts the notifications received from PayFort side as POST Method. For the Notification Transaction Feedback , it\u2019s required to provide you the transaction final status update whenever received , like if the Transaction was pending due to the unavailability for any party , the final update will be pushed to the Notification Feedback URL as POST Method. Beyond whatever your Transaction Feedback URL does with the data received, it must also return a 2xx (like 200 , 201 , etc\u2026) or 302 HTTP status code to update the PayFORT system that the notification was received. If your URL does not return 2xx or 302, the PayFORT will continue to retry the notification for 10 times with 10 seconds in between until it\u2019s properly acknowledged. You can check the Direct and Notification Feedback logs in your PayFort back-office Account to check the details related to the submission like the Transaction Feedback URL which was triggered, The response which our FORT system pushed , The response Code and Status retuned from your Transaction Feedback URL. The specifics of the data will differ based upon the financial operation that has been processed. Please refer to the FORT integration guide for more details. If you want to change the submission type to JSON or XML, you can contact us on **integration@payfort.com**. If you want to change the grace period or the time interval between the retries please contact us on **integration@payfort.com**.","title":"Transaction Feedback implementation"},{"location":"trusted/","text":"What is Trusted? With the help of Trusted channel PCI certified Merchants are able to collect their customers' credit card details on the checkout page. The Merchants are able to process (Ecommerce, Recurring and MOTO) transactions through the FORT using clear card data and credit card tokens. Trusted Channel Endpoints Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi For more details on input parameters please visit the link Parameters Submission Type REST POST request using JSON. Request Example Placeholder for sample code. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. The Response You will receive sample response from the payfort server in JSON format as shown below: {\"command\":\"PURCHASE\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"customer_email\":\"customer@domain.com\", \"eci\":\"MOTO\", \"expiry_date\":\"2105\", \"card_number\":\"400555*****0001\", \"customer_ip\":\"192.178.1.10\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"card_holder_name\":\" John Smith\", \"token_name\":\"Op9Vmp\", \"order_description\":\"iPhone6-S\", \"fort_id\":\"149295435400084008\", \"payment_option\":\"MASTERCARD\", \"customer_name\": \"John Smith\", \"merchant_extra\":\"JohnSmith\", \"merchant_extra1\":\"JohnSmith\", \"merchant_extra2\":\"JohnSmith\", \"merchant_extra3\":\"JohnSmith\", \"merchant_extra4\":\"JohnSmith\", \"merchant_extra5\":\"JohnSmith\", \"authorization_code\":\"P1000000000000372136\", \"response_message\":\"Success\", \"response_code\":\"20064\", \"status\":\"04\", \"3ds_url\":\"http://www.3dsecure.com\", \"phone_number\": \"00962797219966\", \"settlement_reference\":\"XYZ9239-yu898\" } Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones. Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Trusted"},{"location":"trusted/#what-is-trusted","text":"With the help of Trusted channel PCI certified Merchants are able to collect their customers' credit card details on the checkout page. The Merchants are able to process (Ecommerce, Recurring and MOTO) transactions through the FORT using clear card data and credit card tokens.","title":"What is Trusted?"},{"location":"trusted/#trusted-channel-endpoints","text":"Sandbox POST https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Live POST https://paymentservices.PayFort.com/FortAPI/paymentApi For more details on input parameters please visit the link","title":"Trusted Channel Endpoints"},{"location":"trusted/#parameters-submission-type","text":"REST POST request using JSON. Request Example Placeholder for sample code. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Parameters Submission Type"},{"location":"trusted/#the-response","text":"You will receive sample response from the payfort server in JSON format as shown below: {\"command\":\"PURCHASE\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239yu898\", \"amount\":\"10000\", \"currency\":\"AED\", \"language\":\"en\", \"customer_email\":\"customer@domain.com\", \"eci\":\"MOTO\", \"expiry_date\":\"2105\", \"card_number\":\"400555*****0001\", \"customer_ip\":\"192.178.1.10\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"card_holder_name\":\" John Smith\", \"token_name\":\"Op9Vmp\", \"order_description\":\"iPhone6-S\", \"fort_id\":\"149295435400084008\", \"payment_option\":\"MASTERCARD\", \"customer_name\": \"John Smith\", \"merchant_extra\":\"JohnSmith\", \"merchant_extra1\":\"JohnSmith\", \"merchant_extra2\":\"JohnSmith\", \"merchant_extra3\":\"JohnSmith\", \"merchant_extra4\":\"JohnSmith\", \"merchant_extra5\":\"JohnSmith\", \"authorization_code\":\"P1000000000000372136\", \"response_message\":\"Success\", \"response_code\":\"20064\", \"status\":\"04\", \"3ds_url\":\"http://www.3dsecure.com\", \"phone_number\": \"00962797219966\", \"settlement_reference\":\"XYZ9239-yu898\" } Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones.","title":"The Response"},{"location":"trusted/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"trusted/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"trustedchannelparameters/","text":"Trusted Channel Request\\Response Request Parameters command (String, mandatory) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric, mandatory) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. expiry_date (numeric, mandatory) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric, mandatory) Maximum Length Example Description 19 4005550000000001 The clear credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. card_security_code (numeric, mandatory) Maximum Length Example Description 4 123 The clear card security code collect on the merchant\u2019s checkout page. It\u2019s ONLY mandatory in the ecommerce requests. Only AMEX accepts card security code of 4 digits. card_holder_name (String, mandatory) Maximum Length Example Special Characters Description 50 John Smith ' - . The card holder name. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String, optional) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String, optional) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric, optional) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String, optional) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric, optional) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha, optional) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric, optional) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. return_url (alphanumeric, optional) Maximum Length Example Special Characters Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Trusted Channel - Response command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 19 4005550000000001 The clear credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. card_security_code (numeric) Maximum Length Example Description 4 123 The clear card security code collect on the merchant\u2019s checkout page. It\u2019s ONLY mandatory in the ecommerce requests. Only AMEX accepts card security code of 4 digits. card_holder_name (String) Maximum Length Example Special Characters Description 50 John Smith ' - . The card holder name. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. return_url (alphanumeric) Maximum Length Example Special Characters Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones.","title":"Trusted Channel Request\\Response"},{"location":"trustedchannelparameters/#trusted-channel-requestresponse","text":"","title":"Trusted Channel Request\\Response"},{"location":"trustedchannelparameters/#request-parameters","text":"command (String, mandatory) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric, mandatory) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric, mandatory) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric, mandatory) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric, mandatory) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String, mandatory) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String, mandatory) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric, mandatory) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. expiry_date (numeric, mandatory) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric, mandatory) Maximum Length Example Description 19 4005550000000001 The clear credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. card_security_code (numeric, mandatory) Maximum Length Example Description 4 123 The clear card security code collect on the merchant\u2019s checkout page. It\u2019s ONLY mandatory in the ecommerce requests. Only AMEX accepts card security code of 4 digits. card_holder_name (String, mandatory) Maximum Length Example Special Characters Description 50 John Smith ' - . The card holder name. signature (alphanumeric, mandatory) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric, optional) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String, optional) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String, optional) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric, optional) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric, optional) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String, optional) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric, optional) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric, optional) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha, optional) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric, optional) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric, optional) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. return_url (alphanumeric, optional) Maximum Length Example Special Characters Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Request Parameters"},{"location":"trustedchannelparameters/#trusted-channel-response","text":"command (String) Maximum Length Possible/ expected values Description 20 AUTHORIZATION, PURCHASE A command for payFORT server to understand. access_code (alphanumeric) Maximum Length Example Description 20 zx0IPmPy5jp1vAz8Kpg7 Merchant access code that can be found in the backoffice merchant_identifier (alphanumeric) Maximum Length Example Description 20 CycHZxVj Merchant ID that can be found in the backoffice merchant_reference (alphanumeric) Maximum Length Example Special Characters Description 40 XYZ9239-yu898 - _ . The Merchant\u2019s unique order number. amount (numeric) Maximum Length Example Description 10 10000 The transaction\u2019s amount. *Each currency has predefined allowed decimal points that should be taken into consideration when sending the amount check the note after this table. currency (String) Maximum Length Example Description 3 AED The currency of the transaction\u2019s amount in ISO code 3. language (String) Maximum Length Possible/ expected values Description 2 en/ar The checkout page and messages language where en is for english and ar for Arabic customer_email (alphanumeric) Maximum Length Example Special characters Description 254 customer1@domain.com _ - . @ + The customer\u2019s email. expiry_date (numeric) Maximum Length Example Description 4 2105 The card\u2019s expiry date. card_number (numeric) Maximum Length Example Description 19 4005550000000001 The clear credit card\u2019s number. Only the MEEZA payment option takes 19 digits card number. AMEX payment option takes 15 digits card number. *Otherwise, they take 16 digits card number. card_security_code (numeric) Maximum Length Example Description 4 123 The clear card security code collect on the merchant\u2019s checkout page. It\u2019s ONLY mandatory in the ecommerce requests. Only AMEX accepts card security code of 4 digits. card_holder_name (String) Maximum Length Example Special Characters Description 50 John Smith ' - . The card holder name. signature (alphanumeric) Maximum Length Example Description 200 7cad05f0212ed933c9a5d5dffa31661acf2c827a A string hashed using the Secure Hash Algorithm. Please refer to section Signature token_name (alphanumeric) Maximum Length Example Special characters Description 100 Op9Vmp . @ - _ The Token received from the Tokenization process. payment_option (String) Maximum Length Possible/ expected values Description 10 - MASTERCARD - VISA - AMEX - MADA (for Purchase operations and eci Ecommerce only) Click here to download MADA Branding Document - MEEZA (for Purchase operations and ECOMMERCE eci only) Payment option. eci (String) Maximum Length Possible/ expected values Description 16 -ECOMMERCE - MOTO E-commerce indicator. *MOTO and E-commerce indicator clickable in VISA, MASTERCARD and AMEX. order_description (Alphanumeric) Maximum Length Example Description 150 iPhone 6-S ' / . _ - # : $ Space It holds the description of the order. customer_ip (Alphanumeric) Maximum Length Example Special Characters Description 45 IPv4 \u2192 192.178.1.10 IPv6 \u2192 2001:0db8:3042:0002:5a55:caff:fef6:bdbf . : It holds the customer\u2019s IP address. *We support IPv4 and IPv6 as shown in the example. customer_name (String) Maximum Length Example Special Characters Description 40 John Smith _ \\ / - . ' Space The customer\u2019s name. merchant_extra (alphanumeric) Maximum Length Example Special Characters Description 999 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra1 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra2 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra3 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra4 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. merchant_extra5 (alphanumeric) Maximum Length Example Special Characters Description 250 John Smith . ; / _ - , ' @ Extra data sent by merchant. Will be received and sent back as received. Will not be displayed in any report. remember_me (alpha) Maximum Length Possible/ expected values Description 2 -YES -No This parameter provides you with an indication to whether to save this token for the user based on the user selection. phone_number (numeric) Maximum Length Example Special Characters Description 19 00962797219966 + - ( ) Space The customer\u2019s phone number. settlement_reference (alphanumeric) Maximum Length Example Special Characters Description 34 00962797219966 - _ . The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. return_url (alphanumeric) Maximum Length Example Special Characters Description 400 http://www.merchant.com $ ! = ? # & - _ / : . The URL of the Merchant\u2019s page that will be displayed to the customer when the order is processed. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones.","title":"Trusted Channel - Response"},{"location":"verifyservice/","text":"Verify Service Command Verify Service Command Verify API provides PCI certified merchants several methods that you can use to determine if a particular card account is valid and in good standing. The ability to pre-validate a credit card (Visa, MasterCard and Amex) increases the probability of a successful, seamless transaction flow and more valid card registration. Before Starting Before start integrating this service you need to know the below: \u2022 This service command is applicable on two channels only; where you have to configure the channel you want to add this service to it from the FORT back-office: \\1. Merchant page. \\2. Trusted. \u2022 This service command is only applicable on \u201cMOTO\u201d E-commerce indicator. \u2022 You need to add the amount to be Authorized/ Captured from the customer for the verification. \u2022 This Authorized/ Captured amount will be Voided/ Refunded after checking the card validity. \u2022 The verification transactions will be recorded under one report \u201cCard Verification Report\u201d in the back-office. Verify Service Command on Trusted URLs Test Environment URL: https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Production Environment URL: https://paymentservices.PayFort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Verify Service Command on Trusted - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: VERIFY_CARD Special characters: _ access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Mandatory max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory max: 16 The clear credit card\u2019s number. Example: 4005550000000001 signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: example Special characters: _ - . Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Verify Service Command on Trusted Request Example { \u201ccard_number\u201d:\u201c4005550000000001\u201d, \u201cexpiry_date\u201d:\u201c2105\u201d, \u201cservice_command\u201d:\u201cVERIFY_CARD\u201d, \u201csettlement_reference\u201d:\u201cexample\u201d, \u201cmerchant_reference\u201d:\u201cXYZ9239-yu898\u201d, \u201ccurrency\u201d:\u201cAED\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201csignature\u201d:\u201ceef26521d64ffd436b056ab9da0267334aa886acfe392f803e6705d0a5b0fc7a\u201d } Verify Service Command on Trusted - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: VERIFY_CARD Special characters: _ access_code Alphanumeric max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric max: 16 The masked credit card\u2019s number. Example: 400555 * *0001 signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 80000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). settlement_reference Alphanumeric max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: example Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response - even the optional ones. Verify Service Command on Trusted Response Example { \u201cresponse_code\u201d: \u201c80000\u201d, \u201ccard_number\u201d:\u201c400555 * *0001\u201d, \u201cexpiry_date\u201d:\u201c2105\u201d, \u201cservice_command\u201d:\u201cVERIFY_CARD\u201d, \u201csettlement_reference\u201d:\u201cexample\u201d, \u201cmerchant_reference\u201d:\u201cXYZ9239-yu898\u201d, \u201ccurrency\u201d:\u201cAED\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cstatus\u201d:\u201d80\u201d, \u201csignature\u201d:\u201ceef26521d64ffd436b056ab9da0267334aa886acfe392f803e6705d0a5b0fc7a\u201d } Check Status for Verify Service Command This feature allows the Merchants to easily check the actual status of the \u201cVerify card command\u201d results through this API. Check Status for Verify Service Command URLs Test Environment URL: https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Production Environment URL: https://paymentservices.PayFort.com/FortAPI/paymentApi Parameters Submission Type REST POST request using JSON. Check Status for Verify Service - Request Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description query_command Alpha Mandatory max: 50 Query operations command. Possible/ expected values: CHECK_VERIFY_CARD_STATUS Special characters: _ access_code Alphanumeric Mandatory max: 20 Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique number. *Please, use the same merchant reference you used in the \u201cVerify Card Service Command\u201d request. Example: XYZ9239-yu898 language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a Check Status on Verify Service Command Request Example { \u201cquery_command\u201d:\u201cCHECK_VERIFY_CARD_STATUS\u201d, \u201cmerchant_reference\u201d:\u201cXYZ9239-yu898\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201csignature\u201d:\u201cf93c586997906bac21e8d046407c3fbed6b6820affcb7345353487287cc7c03a\u201d } Check Status for Verify Service Command - Response The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 Query operations command. Possible/ expected values: CHECK_VERIFY_CARD_STATUS access_code Alphanumeric max: 20 Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 56000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). transaction_status Numeric max: 2 The status of the last verify operation performed on a specific card. Possible/ expected values: (Please refer to section statuses ). transaction_message Alphanumeric Max: 150 The message returned for the last verify operation performed on a specific card. Example: success Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response - even the optional ones. Check Status on Verify Service Command Response Example { \u201ctransaction_code\u201d:\u201c80000\u201d, \u201cresponse_code\u201d:\u201c12000\u201d, \u201ctransaction_status\u201d:\u201c80\u201d, \u201csignature\u201d:\u201c00c1ea64b7de291f7d5548630bbfbf329bd3fd963bf55c35fefc84d982da193e\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201ctransaction_message\u201d:\u201cSuccess\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cresponse_message\u201d:\u201cSuccess\u201d, \u201cmerchant_reference\u201d:\u201cVerify31\u201d, \u201cquery_command\u201d:\u201cCHECK_VERIFY_CARD_STATUS\u201d, \u201cstatus\u201d:\u201c12\u201d }","title":"Verify Service"},{"location":"verifyservice/#verify-service-command","text":"","title":"Verify Service Command"},{"location":"verifyservice/#verify-service-command_1","text":"Verify API provides PCI certified merchants several methods that you can use to determine if a particular card account is valid and in good standing. The ability to pre-validate a credit card (Visa, MasterCard and Amex) increases the probability of a successful, seamless transaction flow and more valid card registration.","title":"Verify Service Command"},{"location":"verifyservice/#before-starting","text":"Before start integrating this service you need to know the below: \u2022 This service command is applicable on two channels only; where you have to configure the channel you want to add this service to it from the FORT back-office: \\1. Merchant page. \\2. Trusted. \u2022 This service command is only applicable on \u201cMOTO\u201d E-commerce indicator. \u2022 You need to add the amount to be Authorized/ Captured from the customer for the verification. \u2022 This Authorized/ Captured amount will be Voided/ Refunded after checking the card validity. \u2022 The verification transactions will be recorded under one report \u201cCard Verification Report\u201d in the back-office.","title":"Before Starting"},{"location":"verifyservice/#verify-service-command-on-trusted-urls","text":"Test Environment URL: https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Production Environment URL: https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Verify Service Command on Trusted URLs"},{"location":"verifyservice/#parameters-submission-type","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"verifyservice/#verify-service-command-on-trusted-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description service_command Alpha Mandatory max: 20 Command. Possible/ expected values: VERIFY_CARD Special characters: _ access_code Alphanumeric Mandatory max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . currency Alpha Mandatory Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric Mandatory max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric Mandatory max: 16 The clear credit card\u2019s number. Example: 4005550000000001 signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a settlement_reference Alphanumeric Optional max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: example Special characters: _ - . Remember - Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Verify Service Command on Trusted Request Example { \u201ccard_number\u201d:\u201c4005550000000001\u201d, \u201cexpiry_date\u201d:\u201c2105\u201d, \u201cservice_command\u201d:\u201cVERIFY_CARD\u201d, \u201csettlement_reference\u201d:\u201cexample\u201d, \u201cmerchant_reference\u201d:\u201cXYZ9239-yu898\u201d, \u201ccurrency\u201d:\u201cAED\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201csignature\u201d:\u201ceef26521d64ffd436b056ab9da0267334aa886acfe392f803e6705d0a5b0fc7a\u201d }","title":"Verify Service Command on Trusted - Request"},{"location":"verifyservice/#verify-service-command-on-trusted-response","text":"The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description service_command Alpha max: 20 Command. Possible/ expected values: VERIFY_CARD Special characters: _ access_code Alphanumeric max: 20 Merchant account Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 FORT Merchant Account identifier. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 Special characters: _ - . currency Alpha Max: 3 The currency of the transaction\u2019s amount in ISO code 3. Example: AED language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar expiry_date Numeric max: 4 The card\u2019s expiry date. Example: 2105 card_number Numeric max: 16 The masked credit card\u2019s number. Example: 400555 * *0001 signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a language Alpha max: 2 The checkout page and messages language. Possible/ expected values: en / ar response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 80000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). settlement_reference Alphanumeric max: 34 The Merchant submits this value to the FORT. The value is then passed to the Acquiring bank and displayed to the merchant in the Acquirer settlement file. Example: example Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response - even the optional ones. Verify Service Command on Trusted Response Example { \u201cresponse_code\u201d: \u201c80000\u201d, \u201ccard_number\u201d:\u201c400555 * *0001\u201d, \u201cexpiry_date\u201d:\u201c2105\u201d, \u201cservice_command\u201d:\u201cVERIFY_CARD\u201d, \u201csettlement_reference\u201d:\u201cexample\u201d, \u201cmerchant_reference\u201d:\u201cXYZ9239-yu898\u201d, \u201ccurrency\u201d:\u201cAED\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201cresponse_message\u201d: \u201cSuccess\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cstatus\u201d:\u201d80\u201d, \u201csignature\u201d:\u201ceef26521d64ffd436b056ab9da0267334aa886acfe392f803e6705d0a5b0fc7a\u201d }","title":"Verify Service Command on Trusted - Response"},{"location":"verifyservice/#check-status-for-verify-service-command","text":"This feature allows the Merchants to easily check the actual status of the \u201cVerify card command\u201d results through this API.","title":"Check Status for Verify Service Command"},{"location":"verifyservice/#check-status-for-verify-service-command-urls","text":"Test Environment URL: https://sbpaymentservices.PayFort.com/FortAPI/paymentApi Production Environment URL: https://paymentservices.PayFort.com/FortAPI/paymentApi","title":"Check Status for Verify Service Command URLs"},{"location":"verifyservice/#parameters-submission-type_1","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"verifyservice/#check-status-for-verify-service-request","text":"Include the following parameters in the Request you will send to PayFort: ATTRIBUTES Description query_command Alpha Mandatory max: 50 Query operations command. Possible/ expected values: CHECK_VERIFY_CARD_STATUS Special characters: _ access_code Alphanumeric Mandatory max: 20 Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric Mandatory max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric Mandatory max: 40 The Merchant\u2019s unique number. *Please, use the same merchant reference you used in the \u201cVerify Card Service Command\u201d request. Example: XYZ9239-yu898 language Alpha Mandatory Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric Mandatory max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a Check Status on Verify Service Command Request Example { \u201cquery_command\u201d:\u201cCHECK_VERIFY_CARD_STATUS\u201d, \u201cmerchant_reference\u201d:\u201cXYZ9239-yu898\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201csignature\u201d:\u201cf93c586997906bac21e8d046407c3fbed6b6820affcb7345353487287cc7c03a\u201d }","title":"Check Status for Verify Service - Request"},{"location":"verifyservice/#check-status-for-verify-service-command-response","text":"The following parameters will be returned in PayFort\u2019s Response: ATTRIBUTES Description query_command Alpha max: 50 Query operations command. Possible/ expected values: CHECK_VERIFY_CARD_STATUS access_code Alphanumeric max: 20 Access Code. Example: zx0IPmPy5jp1vAz8Kpg7 merchant_identifier Alphanumeric max: 20 The ID of the Merchant. Example: CycHZxVj merchant_reference Alphanumeric max: 40 The Merchant\u2019s unique reference for a specific request. Example: XYZ9239-yu898 language Alpha Max: 2 The checkout page and messages language. Possible/ expected values: en/ ar signature Alphanumeric max: 200 A string hashed using the Secure Hash Algorithm. (Please refer to section Signature for more details). Example: 7cad05f0212ed933c9a5d5dffa31661acf2c827a response_message Alphanumeric max: 150 Message description of the response code. It returns according to the request language. Example: Insufficient Funds response_code Numeric Max: 5 Response Code carries the value of our system\u2019s response. *The code consists of five digits, the first 2 digits represent the response status , and the last 3 digits represent the response messages . Example: 56000 status Numeric max: 2 A two-digit numeric value that indicates the status of the transaction Possible/ expected values: (Please refer to section statuses ). transaction_status Numeric max: 2 The status of the last verify operation performed on a specific card. Possible/ expected values: (Please refer to section statuses ). transaction_message Alphanumeric Max: 150 The message returned for the last verify operation performed on a specific card. Example: success Remember - Every parameter the Merchant sends in the Request should be received by the Merchant in the Response - even the optional ones. Check Status on Verify Service Command Response Example { \u201ctransaction_code\u201d:\u201c80000\u201d, \u201cresponse_code\u201d:\u201c12000\u201d, \u201ctransaction_status\u201d:\u201c80\u201d, \u201csignature\u201d:\u201c00c1ea64b7de291f7d5548630bbfbf329bd3fd963bf55c35fefc84d982da193e\u201d, \u201cmerchant_identifier\u201d:\u201cCycHZxVj\u201d, \u201caccess_code\u201d:\u201czx0IPmPy5jp1vAz8Kpg7\u201d, \u201ctransaction_message\u201d:\u201cSuccess\u201d, \u201clanguage\u201d:\u201cen\u201d, \u201cresponse_message\u201d:\u201cSuccess\u201d, \u201cmerchant_reference\u201d:\u201cVerify31\u201d, \u201cquery_command\u201d:\u201cCHECK_VERIFY_CARD_STATUS\u201d, \u201cstatus\u201d:\u201c12\u201d }","title":"Check Status for Verify Service Command - Response"},{"location":"voidauthorization/","text":"Void Authorization After a card payment has been authorized, the payment is not complete until it has been captured . If you do not wish to capture the payment, you can void it using the void API as described. The Request Use the details below to set up your request. Endpoints Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi You can send \u201cmerchant_reference\u201d and/or \u201cfort_id\u201d in the VOID_AUTHORIZATION request. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response even the optional ones. The Request Example Check out the request parameters by visiting this link Sample Request Here are the sample request you are required to send authorizing a purchase. Php Python Ruby Java cURL error_reporting(E_ALL); ini_set('display_errors', '1'); $url = 'https://sbpaymentservices.payfort.com/FortAPI/paymentApi'; $arrData = array( 'command' => 'VOID_AUTHORIZATION', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => 'XYZ9239-yu898', 'language' => 'en', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description' => 'iPhone 6-S', ); $ch = curl_init( $url ); # Setup request to send json via POST. $data = json_encode($arrData); curl_setopt( $ch, CURLOPT_POSTFIELDS, $data ); curl_setopt( $ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json')); # Return response instead of printing. curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true ); # Send request. $result = curl_exec($ch); curl_close($ch); # Print response. echo \"<pre>$result</pre>\"; import urllib import urllib2 import json url = 'https://sbpaymentservices.payfort.com/FortAPI/paymentApi'; arrData = { 'command':'VOID_AUTHORIZATION', 'access_code':'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier':'CycHZxVj', 'merchant_reference':'XYZ9239-yu898', 'language':'en', 'signature':'7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description':'iPhone 6-S', }; values = json.dumps(arrData) data = urllib.urlencode(values) req = urllib2.Request(url, data) response = urllib2.urlopen(req) page = response.read() print page + '\\n\\n' require 'json' require 'net/http' require 'net/https' require 'uri' require 'openssl' arrData = { 'command' => 'VOID_AUTHORIZATION', 'access_code' => 'zx0IPmPy5jp1vAz8Kpg7', 'merchant_identifier' => 'CycHZxVj', 'merchant_reference' => 'XYZ9239-yu898', 'language' => 'en', 'signature' => '7cad05f0212ed933c9a5d5dffa31661acf2c827a', 'order_description' => 'iPhone 6-S', }; arrData = arrData.to_json uri = URI.parse(\"https://sbpaymentservices.payfort.com/FortAPI/paymentApi\") http = Net::HTTP.new(uri.host, uri.port) http.use_ssl = true http.verify_mode = OpenSSL::SSL::VERIFY_NONE request = Net::HTTP::Post.new(\"/v1.1/auth\") request.add_field('Content-Type', 'application/json') request.body = arrData response = http.request(request) String jsonRequestString = \"{\\\"command\\\" : \\\"VOID_AUTHORIZATION\\\" , \" + \"\\\"access_code\\\" : \\\"zx0IPmPy5jp1vAz8Kpg7\\\", \\\"merchant_identifier\\\" : \\\"CycHZxVj\\\", \\\"merchant_reference\\\" : \\\"XYZ9239-yu898\\\",\" + \"\\\"language\\\" : \\\"en\\\", \\\"signature\\\" : \\\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\\\", \" + \"\\\"order_description\\\" : \\\"iPhone 6-S\\\"}\"; // Define and Initialize HttpClient HttpClient httpClient = HttpClientBuilder.create().build(); // Intialize HttpPOST with FORT Payment services URL HttpPost request = new HttpPost(\"https://sbpaymentservices.payfort.com/FortAPI/paymentApi\"); // Setup Http POST entity with JSON String StringEntity params = new StringEntity(jsonRequestString); // Setup request type as JSON request.addHeader(\"content-type\", \"application/json\"); request.setEntity(params); // Post request to FORT HttpResponse response = httpClient.execute(request); // Read response using StringBuilder StringBuilder sb = new StringBuilder(); BufferedReader reader = new BufferedReader(new InputStreamReader( response.getEntity().getContent()), 65728); String line = null; while ((line = reader.readLine()) != null) { sb.append(line); } // Print response System.out.println(sb.toString()); curl -H \"Content-Type: application/json\" -d '{\"command\":\"VOID_AUTHORIZATION\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", merchant_reference\":\"XYZ9239-yu898\", \"language\":\"en\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone6-S\"}' https://sbpaymentservices.payfort.com/FortAPI/paymentApi The Response If you receive response code 20064 with status code 04 it means that your request to void authorization has been accepted by PayFort server. Response Example \u200b json {\"command\":\"VOID_AUTHORIZATION\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239yu898\", \"language\":\"en\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone6-S\", \"fort_id\":\"149295435400084008\", \"response_message\":\"Success\", \"response_code\":\"20064\", \"status\":\"04\" } You can check out various transaction codes by visiting this link Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Void an Authorization"},{"location":"voidauthorization/#void-authorization","text":"After a card payment has been authorized, the payment is not complete until it has been captured . If you do not wish to capture the payment, you can void it using the void API as described.","title":"Void Authorization"},{"location":"voidauthorization/#the-request","text":"Use the details below to set up your request.","title":"The Request"},{"location":"voidauthorization/#endpoints","text":"","title":"Endpoints"},{"location":"voidauthorization/#live","text":"POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Live"},{"location":"voidauthorization/#sandbox","text":"POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi You can send \u201cmerchant_reference\u201d and/or \u201cfort_id\u201d in the VOID_AUTHORIZATION request. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response even the optional ones.","title":"Sandbox"},{"location":"voidauthorization/#the-request-example","text":"Check out the request parameters by visiting this link","title":"The Request Example"},{"location":"voidauthorization/#the-response","text":"If you receive response code 20064 with status code 04 it means that your request to void authorization has been accepted by PayFort server.","title":"The Response"},{"location":"voidauthorization/#response-example","text":"\u200b json {\"command\":\"VOID_AUTHORIZATION\", \"access_code\":\"zx0IPmPy5jp1vAz8Kpg7\", \"merchant_identifier\":\"CycHZxVj\", \"merchant_reference\":\"XYZ9239yu898\", \"language\":\"en\", \"signature\":\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\", \"order_description\":\"iPhone6-S\", \"fort_id\":\"149295435400084008\", \"response_message\":\"Success\", \"response_code\":\"20064\", \"status\":\"04\" } You can check out various transaction codes by visiting this link","title":"Response Example"},{"location":"voidauthorization/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"voidauthorization/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"wallets/","text":"PayFort supports MasterPass, Visacheckout and ApplePay. MasterPass As another move towards a cashless environment, PayFort provides MasterPass . It is a digital wallet that securely stores your buyer\u2019s credit card details and shipping addresses, making shopping through thousands of online Merchants simple and convenient. This is fulfilled by enhancing and simplifying the buyer\u2019s digital shopping experience. PAYFORT now supports MasterPass Redirect v7 in addition to v6. Service Endpoints Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage Redirection Integration Flow You submit a form that includes all the parameters and call the following url to be redirected to PayFort as mentioned in the service endpoints The PayFORT returns a response to the request which you sent in step 1. The payFORT inserts the response parameters into a JavaScript. A lightbox appears to the buyer where he enters his credentials, selects the card type and the shipping address, and clicks \u201cFinish Shopping\u201d. The payFORT either proceeds to Authorize or Purchase the payment based on the value of the command parameter sent in your request form. The payFORT returns a response to the request sent to it in step5.(Please refer to section MasterPass Service - Response for the Response Parameters). In the Redirection work flow, the \u201cChannel\u201d will always be considered redirection and the \u201cDefault Operation\u201d won\u2019t be considered. If you sent the \u201cpayment_option\u201d value in your request, the payFORT will use the value found in the request, no matter what other options are supported by the Merchant. However, if this value wasn\u2019t sent in the request, the payFORT will retrieve all the payment options supported by the Merchant. Parameters Submission Type HTTPs Form Post Request. Service Request Example Below is the sample html request. placeholder: add code for request The following is an example for \u201ccart_details\u201d parameter: placeholder: add code for card_details parameter Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. MasterPass Hosted Masterpass Hosted accepts digital wallet transactions without redirection to Masterpass pages, instead it will be hosted on the Merchant website. VisaCheckout Visa Checkout is a digital wallet that securely stores the customer's credit card details and shipping addresses and information, making shopping through thousands of online Merchants simple and convenient. This service enhances and simplifies the buyer\u2019s online shopping experience. Visa Checkout can be offered through two different integrations: Merchant Hosted Checkout Button. PayFort Hosted Checkout Button. Merchant Hosted Checkout Button Integration Flow This integration allows the you to host Visa Checkout button on your website giving you maximum control over the look and feel and user experience. The following steps describe how this integration works: You should include the following JavaScript in the HTML header of its checkout page. This JavaScript loads the Visa Checkout library and defines handlers to initialization and payment events. <head> <script type=\"text/javascript\"> function onVisaCheckoutReady() { V.init({ apikey : \u201c#API_KEY#\u201d, // This will be provided by PayFort externalProfileId : \u201c#PROFILE_NAME#\u201d, // This will be provided by PayFort settings : { locale : \u201cen_AE\u201d, countryCode : \u201cAE\u201d, // depends on ISO-3166-1 alpha-2 standard codes review : { message : \u201cMerchant defined message\u201d, // buttonAction : \u201cContinue\u201d // The button label }, threeDSSetup : { threeDSActive : \u201cfalse\u201d // true to enable the 3ds false to disable it } }, paymentRequest : { currencyCode : \u201cUSD\u201d, //depends on ISO 4217 standard alpha-3 code values subtotal : \u201c10.00\u201d, // Subtotal of the payment. } }); V.on(\u201cpayment.success\u201d, function(payment) { document.write(JSON.stringify(payment)); //response when received success operation }); V.on(\u201cpayment.cancel\u201d, function(payment) { document.write(JSON.stringify(payment)); //response when cancel operation }); V.on(\u201cpayment.error\u201d, function(payment, error) { document.write(JSON.stringify(payment));//response when received error operation document.write(error); }); } </script> </head> You should use the following class to render Visa Checkout button that a consumer clicks to initiate a payment. <body> <img alt=\u201cVisa Checkout\u201d class=\u201cv-button\u201d role=\u201cbutton\u201d src=\u201chttps://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?cardBrands=VISA,MASTERCARD\u201d /> </body> Endpoints Sandbox https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png Live https://secure.checkout.visa.com/wallet-services-web/xo/button.png You should use the following JavaScript to control the operation on Visa Checkout on the website. <body> <script type=\u201ctext/javascript\u201d src=\u201chttps://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js\u201d> </script> </body> After completing the previous steps, the consumer clicks on Visa Checkout button, Visa Checkout light box appears and the user complete the checkout process. You will receive a successful response. The response associated with the payment success event returns list of parameters. The Merchant has to collect the value of \u201ccall_id\u201d parameter to be used in the following step. You submit Purchase request to the FORT adding 2 extra parameters: digital-wallet, call_id. Please refer to Merchant Hosted Visa Checkout - Request for more details. Merchants Page should be activated to accept Purchase and Authorization transactions The Merchant system receives the FORT\u2019s purchase request and then uses Visa Checkout update image pixel. Below you can find an example of how to use Visa Checkout update image pixel. Please refer to \u201cVisa checkout PayFort documentation\u201d for more details. <img src=\u201chttps://sandbox.secure.checkout.visa.com/wallet-services-web/payment/updatepaymentinfo.gif?apikey=\u2026&callId=\u2026&currencyCode=USD&total=11.00&subtotal=11.00\u201d /> The following example shows an HTML web page that loads the Visa Checkout library, defines handlers for initialization and payment events, and creates a Visa Checkout button: <html> <head> <script type=\u201ctext/javascript\u201d> function onVisaCheckoutReady() { V.init({ apikey : \u201c#API_KEY#\u201d, // This will be provided by PayFort externalProfileId : \u201c#PROFILE_NAME#\u201d, // This will be provided by PayFort settings : { locale : \u201cen_AE\u201d, countryCode : \u201cAE\u201d, // depends on ISO-3166-1 alpha-2 standard codes review : { message : \u201cMerchant defined message\u201d, // buttonAction : \u201cContinue\u201d // The button label }, threeDSSetup : { threeDSActive : \u201cfalse\u201d // true to enable the 3ds false to disable it } }, paymentRequest : { currencyCode : \u201cUSD\u201d, //depends on ISO 4217 standard alpha-3 code values subtotal : \u201c10.00\u201d, // Subtotal of the payment. } }); V.on(\u201cpayment.success\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when received success operation }); V.on(\u201cpayment.cancel\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when cancel operation }); V.on(\u201cpayment.error\u201d, function(payment, error) { document.write(JSON.stringify(payment));// response when received error operation document.write(error); }); } </script> </head> <body> <img alt=\u201cVisa Checkout\u201d class=\u201cv-button\u201d role=\u201cbutton\"src=\"https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?cardBrands=VISA,MASTERCARD,DISCOVER,AMEX\u201d /> <script type=\u201ctext/javascript\u201d src=\u201chttps://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js\u201d> </script> </body> </html> Apple Pay Start seamlessly accepting credit card payments from your customers via Touch ID and Face ID, eliminating the need for them to manually type in their card and shipping details. When using a credit or debit card with Apple Pay, the actual card numbers are not stored on the device, or on Apple servers. Instead, a unique Device Account Number is assigned, encrypted and securely stored in the Secure Element on your device, where each transaction is authorized with a one-time unique dynamic security code. SUPPORTED DEVICES Refer to Apple\u2019s compatibility documentation to learn which devices support Apple Pay. PayFort users can accept Apple Pay in iOS applications in iOS 8.1 and above. There are no additional fees to process Apple Pay payments, and the pricing is the same as other card transactions. Apple Pay is compatible with most PayFort products and features, allowing you to use it in place of a traditional payment form whenever possible. Use it to accept payments for physical or digital goods, donations, subscriptions, and more. Apple Pay is available to cardholders at participating banks in supported countries. Refer to Apple\u2019s participating banks documentation to learn which banks and countries are supported. Endpoints Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi Before you start Before you get started with Apple Pay, you will need the following: An Apple Developer account. Sign up for one here and complete the Apple Pay certification (export the payment processing certificate in p12 file) A domain with a valid SSL certificate (meaning your domain should start with https ). Access to a Secure Shell (SSH) terminal. Access to your server's files, so you can upload files to your server. Integrate Apple Pay in your app/website using the Apple Pay documentation found at https://developer.apple.com/apple-pay Submit the encrypted Apple Pay payload to PayFort\u2019s API for decryption / processing. Please contact integration@payfort.com for PayFort\u2019s integration documentation Configure Apple Pay Create your merchant IDs in your Apple Pay Developer account Placeholder: Sample video showing how to create merchant Ids in Apple Pay Developer account. We recommend that you create separate merchant IDs for your test environment and for your live/production environment. Integrate Apple Pay in your app/website using the Apple Pay documentation found at https://developer.apple.com/apple-pay Submit the encrypted Apple Pay payload to PayFort\u2019s API for decryption / processing. Please contact integration@payfort.com for PayFort\u2019s integration documentation Parameters Submission Type REST POST request using JSON. The ApplePay Request Placeholder: Insert sample request code for apple pay Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. The ApplePay Response Here is the sample response Placeholder: Please insert sample response for Apple Pay Service as sent by PayFORT server. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones Apple Pay SDK Service Apple Pay is a digital wallet that allows your customers to make payments using different Apple devices via FORT iOS SDK. The Customer authenticate his identity with Touch ID fingerprint verification to complete the payment. Before You Start \u2022 You will need one of these iOS devices (iPhone 6, iPhone 6s, iPhone 6 Plus, iPhone 6s Plus, iPhone 7, iPhone 7 Plus, iPhone SE, iPad Air 2, iPad mini 3, iPad mini 4, and iPad Pro models) running iOS 8.1 or later. \u2022 You will need a Mac with Xcode 6.1 or newer installed. You can install or upgrade Xcode in the Mac App Store . \u2022 You will also need an apple developer account and a membership in the iOS Developer Program. You can create a one from here . \u2022 You will need to download the FORT iOS Mobile SDK, click here . Get Started Before you start Apple Pay integration with PayFort please refer to the following URL here to complete the following steps: Setup your Apple Pay account. Complete the integration with Apple Pay SDK. After completing the integration with Apple Pay, check that you have got the following: \u2022 Apple merchantID. \u2022 Merchant certificate. \u2022 Payment processing certificate. Then copy the following sample code to complete integration with FORT Mobile SDK: Object-C code for Integration with PayFORT iOS SDK ```objective-c #pragma mark - PKPaymentAuthorizationViewControllerDelegate (void)paymentAuthorizationViewController: (PKPaymentAuthorizationViewController )controller didAuthorizePayment:(PKPayment )payment completion:(void (^)(PKPaymentAuthorizationStatus status))completion { BOOL asyncSuccessful = payment.token.paymentData.length != 0; if(asyncSuccessful) { PayFortController *payFort = [[PayFortController alloc]initWithEnviroment:(KPayFortEnviroment)_enviromentSegment.selectedSegmentIndex]; NSMutableDictionary *request = [[NSMutableDictionary alloc]init]; [request setValue:@\u201c10000\u201d forKey:@\u201camount\u201d]; [request setValue:@\u201cAUTHORIZATION\u201d forKey:@\u201ccommand\u201d]; [request setValue:@\u201cUSD\u201d forKey:@\u201ccurrency\u201d]; [request setValue:@\u201cemail@domain.com\u201d forKey:@\u201ccustomer_email\u201d]; [request setValue:@\u201cen\u201d forKey:@\u201clanguage\u201d]; [request setValue:@\u201cmerchant\u201d forKey:@\u201cmerchant_reference\u201d]; [request setValue:@\u201c\u201d forKey:@\u201csdk_token\u201d]; [request setValue:@\u201cAPPLE_PAY\u201d forKey:@\u201cdigital_wallet\u201d]; [payFort callPayFortForApplePayWithRequest:request applePayPayment:payment currentViewController:self Success:^(NSDictionary requestDic, NSDictionary responeDic) { completion(PKPaymentAuthorizationStatusSuccess); } Faild:^(NSDictionary requestDic, NSDictionary responeDic, NSString *message) { completion(PKPaymentAuthorizationStatusFailure); }]; } else { completion(PKPaymentAuthorizationStatusFailure); } } ``` Swift Code for Integration with PayFORT iOS SDK func paymentAuthorizationController(_ controller: PKPaymentAuthorizationController, didAuthorizePayment payment: PKPayment, completion: @escaping (PKPaymentAuthorizationStatus) -> Void) { //Perform some very basic validation on the provided contact information let asyncSuccessful = payment.token.paymentData.count != 0 if asyncSuccessful { let payFort = PayFortController.init(enviroment: KPayFortEnviromentSandBox) let request = NSMutableDictionary.init() request.setValue(\u201c100100000\u201d, forKey: \u201camount\u201d) request.setValue(\u201cAUTHORIZATION\u201d, forKey: \u201ccommand\u201d) request.setValue(\u201cUSD\u201d, forKey: \u201ccurrency\u201d) request.setValue(\u201cemail@domain.com\u201d, forKey: \u201ccustomer_email\u201d) request.setValue(\u201cen\u201d, forKey: \u201clanguage\u201d) request.setValue(\u201cmerchant\u201d, forKey: \u201cmerchant_reference\u201d) request.setValue(\u201cgr66zzwW9\u201d , forKey: \u201csdk_token\u201d) request.setValue(\u201cAPPLE_PAY\u201d , forKey: \u201cdigital_wallet\u201d) payFort?.callPayFortForApplePay(withRequest: request, applePay: payment, currentViewController: self , success: { (requestDic, responeDic) in completion(.success) }, faild:{ (requestDic, responeDic, message) in completion(.failure) }) }else { completion(.failure) } } Apple Pay SDK Authorization/ Purchase - Request Placeholder: Sample code for Apple Pay SDK Authorization/Purchase - Request Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. Apple Pay SDK Authorization/ Purchase - Response Placeholder: Sample code for Apple Pay SDK authorization/Purchase Response in JSON format Every parameter the Merchant sends in the Request should be received by the Merchant in the Response - even the optional ones. Test Your Wallet Integration You can checkout this link for testing your wallet integration Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Wallets"},{"location":"wallets/#masterpass","text":"As another move towards a cashless environment, PayFort provides MasterPass . It is a digital wallet that securely stores your buyer\u2019s credit card details and shipping addresses, making shopping through thousands of online Merchants simple and convenient. This is fulfilled by enhancing and simplifying the buyer\u2019s digital shopping experience. PAYFORT now supports MasterPass Redirect v7 in addition to v6.","title":"MasterPass"},{"location":"wallets/#service-endpoints","text":"Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage","title":"Service Endpoints"},{"location":"wallets/#redirection","text":"","title":"Redirection"},{"location":"wallets/#integration-flow","text":"You submit a form that includes all the parameters and call the following url to be redirected to PayFort as mentioned in the service endpoints The PayFORT returns a response to the request which you sent in step 1. The payFORT inserts the response parameters into a JavaScript. A lightbox appears to the buyer where he enters his credentials, selects the card type and the shipping address, and clicks \u201cFinish Shopping\u201d. The payFORT either proceeds to Authorize or Purchase the payment based on the value of the command parameter sent in your request form. The payFORT returns a response to the request sent to it in step5.(Please refer to section MasterPass Service - Response for the Response Parameters). In the Redirection work flow, the \u201cChannel\u201d will always be considered redirection and the \u201cDefault Operation\u201d won\u2019t be considered. If you sent the \u201cpayment_option\u201d value in your request, the payFORT will use the value found in the request, no matter what other options are supported by the Merchant. However, if this value wasn\u2019t sent in the request, the payFORT will retrieve all the payment options supported by the Merchant.","title":"Integration Flow"},{"location":"wallets/#parameters-submission-type","text":"HTTPs Form Post Request.","title":"Parameters Submission Type"},{"location":"wallets/#service-request-example","text":"Below is the sample html request. placeholder: add code for request The following is an example for \u201ccart_details\u201d parameter: placeholder: add code for card_details parameter Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Service Request Example"},{"location":"wallets/#masterpass-hosted","text":"Masterpass Hosted accepts digital wallet transactions without redirection to Masterpass pages, instead it will be hosted on the Merchant website.","title":"MasterPass Hosted"},{"location":"wallets/#visacheckout","text":"Visa Checkout is a digital wallet that securely stores the customer's credit card details and shipping addresses and information, making shopping through thousands of online Merchants simple and convenient. This service enhances and simplifies the buyer\u2019s online shopping experience. Visa Checkout can be offered through two different integrations: Merchant Hosted Checkout Button. PayFort Hosted Checkout Button.","title":"VisaCheckout"},{"location":"wallets/#merchant-hosted-checkout-button","text":"","title":"Merchant Hosted Checkout Button"},{"location":"wallets/#integration-flow_1","text":"This integration allows the you to host Visa Checkout button on your website giving you maximum control over the look and feel and user experience. The following steps describe how this integration works: You should include the following JavaScript in the HTML header of its checkout page. This JavaScript loads the Visa Checkout library and defines handlers to initialization and payment events. <head> <script type=\"text/javascript\"> function onVisaCheckoutReady() { V.init({ apikey : \u201c#API_KEY#\u201d, // This will be provided by PayFort externalProfileId : \u201c#PROFILE_NAME#\u201d, // This will be provided by PayFort settings : { locale : \u201cen_AE\u201d, countryCode : \u201cAE\u201d, // depends on ISO-3166-1 alpha-2 standard codes review : { message : \u201cMerchant defined message\u201d, // buttonAction : \u201cContinue\u201d // The button label }, threeDSSetup : { threeDSActive : \u201cfalse\u201d // true to enable the 3ds false to disable it } }, paymentRequest : { currencyCode : \u201cUSD\u201d, //depends on ISO 4217 standard alpha-3 code values subtotal : \u201c10.00\u201d, // Subtotal of the payment. } }); V.on(\u201cpayment.success\u201d, function(payment) { document.write(JSON.stringify(payment)); //response when received success operation }); V.on(\u201cpayment.cancel\u201d, function(payment) { document.write(JSON.stringify(payment)); //response when cancel operation }); V.on(\u201cpayment.error\u201d, function(payment, error) { document.write(JSON.stringify(payment));//response when received error operation document.write(error); }); } </script> </head> You should use the following class to render Visa Checkout button that a consumer clicks to initiate a payment. <body> <img alt=\u201cVisa Checkout\u201d class=\u201cv-button\u201d role=\u201cbutton\u201d src=\u201chttps://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?cardBrands=VISA,MASTERCARD\u201d /> </body>","title":"Integration Flow"},{"location":"wallets/#endpoints","text":"Sandbox https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png Live https://secure.checkout.visa.com/wallet-services-web/xo/button.png You should use the following JavaScript to control the operation on Visa Checkout on the website. <body> <script type=\u201ctext/javascript\u201d src=\u201chttps://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js\u201d> </script> </body> After completing the previous steps, the consumer clicks on Visa Checkout button, Visa Checkout light box appears and the user complete the checkout process. You will receive a successful response. The response associated with the payment success event returns list of parameters. The Merchant has to collect the value of \u201ccall_id\u201d parameter to be used in the following step. You submit Purchase request to the FORT adding 2 extra parameters: digital-wallet, call_id. Please refer to Merchant Hosted Visa Checkout - Request for more details. Merchants Page should be activated to accept Purchase and Authorization transactions The Merchant system receives the FORT\u2019s purchase request and then uses Visa Checkout update image pixel. Below you can find an example of how to use Visa Checkout update image pixel. Please refer to \u201cVisa checkout PayFort documentation\u201d for more details. <img src=\u201chttps://sandbox.secure.checkout.visa.com/wallet-services-web/payment/updatepaymentinfo.gif?apikey=\u2026&callId=\u2026&currencyCode=USD&total=11.00&subtotal=11.00\u201d /> The following example shows an HTML web page that loads the Visa Checkout library, defines handlers for initialization and payment events, and creates a Visa Checkout button: <html> <head> <script type=\u201ctext/javascript\u201d> function onVisaCheckoutReady() { V.init({ apikey : \u201c#API_KEY#\u201d, // This will be provided by PayFort externalProfileId : \u201c#PROFILE_NAME#\u201d, // This will be provided by PayFort settings : { locale : \u201cen_AE\u201d, countryCode : \u201cAE\u201d, // depends on ISO-3166-1 alpha-2 standard codes review : { message : \u201cMerchant defined message\u201d, // buttonAction : \u201cContinue\u201d // The button label }, threeDSSetup : { threeDSActive : \u201cfalse\u201d // true to enable the 3ds false to disable it } }, paymentRequest : { currencyCode : \u201cUSD\u201d, //depends on ISO 4217 standard alpha-3 code values subtotal : \u201c10.00\u201d, // Subtotal of the payment. } }); V.on(\u201cpayment.success\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when received success operation }); V.on(\u201cpayment.cancel\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when cancel operation }); V.on(\u201cpayment.error\u201d, function(payment, error) { document.write(JSON.stringify(payment));// response when received error operation document.write(error); }); } </script> </head> <body> <img alt=\u201cVisa Checkout\u201d class=\u201cv-button\u201d role=\u201cbutton\"src=\"https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?cardBrands=VISA,MASTERCARD,DISCOVER,AMEX\u201d /> <script type=\u201ctext/javascript\u201d src=\u201chttps://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js\u201d> </script> </body> </html>","title":"Endpoints"},{"location":"wallets/#apple-pay","text":"Start seamlessly accepting credit card payments from your customers via Touch ID and Face ID, eliminating the need for them to manually type in their card and shipping details. When using a credit or debit card with Apple Pay, the actual card numbers are not stored on the device, or on Apple servers. Instead, a unique Device Account Number is assigned, encrypted and securely stored in the Secure Element on your device, where each transaction is authorized with a one-time unique dynamic security code.","title":"Apple Pay"},{"location":"wallets/#supported-devices","text":"Refer to Apple\u2019s compatibility documentation to learn which devices support Apple Pay. PayFort users can accept Apple Pay in iOS applications in iOS 8.1 and above. There are no additional fees to process Apple Pay payments, and the pricing is the same as other card transactions. Apple Pay is compatible with most PayFort products and features, allowing you to use it in place of a traditional payment form whenever possible. Use it to accept payments for physical or digital goods, donations, subscriptions, and more. Apple Pay is available to cardholders at participating banks in supported countries. Refer to Apple\u2019s participating banks documentation to learn which banks and countries are supported.","title":"SUPPORTED DEVICES"},{"location":"wallets/#endpoints_1","text":"Sandbox POST https://sbpaymentservices.payfort.com/FortAPI/paymentApi Live POST https://paymentservices.payfort.com/FortAPI/paymentApi","title":"Endpoints"},{"location":"wallets/#before-you-start","text":"Before you get started with Apple Pay, you will need the following: An Apple Developer account. Sign up for one here and complete the Apple Pay certification (export the payment processing certificate in p12 file) A domain with a valid SSL certificate (meaning your domain should start with https ). Access to a Secure Shell (SSH) terminal. Access to your server's files, so you can upload files to your server. Integrate Apple Pay in your app/website using the Apple Pay documentation found at https://developer.apple.com/apple-pay Submit the encrypted Apple Pay payload to PayFort\u2019s API for decryption / processing. Please contact integration@payfort.com for PayFort\u2019s integration documentation","title":"Before you start"},{"location":"wallets/#configure-apple-pay","text":"Create your merchant IDs in your Apple Pay Developer account Placeholder: Sample video showing how to create merchant Ids in Apple Pay Developer account. We recommend that you create separate merchant IDs for your test environment and for your live/production environment. Integrate Apple Pay in your app/website using the Apple Pay documentation found at https://developer.apple.com/apple-pay Submit the encrypted Apple Pay payload to PayFort\u2019s API for decryption / processing. Please contact integration@payfort.com for PayFort\u2019s integration documentation","title":"Configure Apple Pay"},{"location":"wallets/#parameters-submission-type_1","text":"REST POST request using JSON.","title":"Parameters Submission Type"},{"location":"wallets/#the-applepay-request","text":"Placeholder: Insert sample request code for apple pay Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"The ApplePay Request"},{"location":"wallets/#the-applepay-response","text":"Here is the sample response Placeholder: Please insert sample response for Apple Pay Service as sent by PayFORT server. Every parameter the Merchant sends in the Request should be received by the Merchant in the Response -even the optional ones","title":"The ApplePay Response"},{"location":"wallets/#apple-pay-sdk-service","text":"Apple Pay is a digital wallet that allows your customers to make payments using different Apple devices via FORT iOS SDK. The Customer authenticate his identity with Touch ID fingerprint verification to complete the payment.","title":"Apple Pay SDK Service"},{"location":"wallets/#before-you-start_1","text":"\u2022 You will need one of these iOS devices (iPhone 6, iPhone 6s, iPhone 6 Plus, iPhone 6s Plus, iPhone 7, iPhone 7 Plus, iPhone SE, iPad Air 2, iPad mini 3, iPad mini 4, and iPad Pro models) running iOS 8.1 or later. \u2022 You will need a Mac with Xcode 6.1 or newer installed. You can install or upgrade Xcode in the Mac App Store . \u2022 You will also need an apple developer account and a membership in the iOS Developer Program. You can create a one from here . \u2022 You will need to download the FORT iOS Mobile SDK, click here .","title":"Before You Start"},{"location":"wallets/#get-started","text":"Before you start Apple Pay integration with PayFort please refer to the following URL here to complete the following steps: Setup your Apple Pay account. Complete the integration with Apple Pay SDK. After completing the integration with Apple Pay, check that you have got the following: \u2022 Apple merchantID. \u2022 Merchant certificate. \u2022 Payment processing certificate. Then copy the following sample code to complete integration with FORT Mobile SDK: Object-C code for Integration with PayFORT iOS SDK ```objective-c #pragma mark - PKPaymentAuthorizationViewControllerDelegate (void)paymentAuthorizationViewController: (PKPaymentAuthorizationViewController )controller didAuthorizePayment:(PKPayment )payment completion:(void (^)(PKPaymentAuthorizationStatus status))completion { BOOL asyncSuccessful = payment.token.paymentData.length != 0; if(asyncSuccessful) { PayFortController *payFort = [[PayFortController alloc]initWithEnviroment:(KPayFortEnviroment)_enviromentSegment.selectedSegmentIndex]; NSMutableDictionary *request = [[NSMutableDictionary alloc]init]; [request setValue:@\u201c10000\u201d forKey:@\u201camount\u201d]; [request setValue:@\u201cAUTHORIZATION\u201d forKey:@\u201ccommand\u201d]; [request setValue:@\u201cUSD\u201d forKey:@\u201ccurrency\u201d]; [request setValue:@\u201cemail@domain.com\u201d forKey:@\u201ccustomer_email\u201d]; [request setValue:@\u201cen\u201d forKey:@\u201clanguage\u201d]; [request setValue:@\u201cmerchant\u201d forKey:@\u201cmerchant_reference\u201d]; [request setValue:@\u201c\u201d forKey:@\u201csdk_token\u201d]; [request setValue:@\u201cAPPLE_PAY\u201d forKey:@\u201cdigital_wallet\u201d]; [payFort callPayFortForApplePayWithRequest:request applePayPayment:payment currentViewController:self Success:^(NSDictionary requestDic, NSDictionary responeDic) { completion(PKPaymentAuthorizationStatusSuccess); } Faild:^(NSDictionary requestDic, NSDictionary responeDic, NSString *message) { completion(PKPaymentAuthorizationStatusFailure); }]; } else { completion(PKPaymentAuthorizationStatusFailure); } } ``` Swift Code for Integration with PayFORT iOS SDK func paymentAuthorizationController(_ controller: PKPaymentAuthorizationController, didAuthorizePayment payment: PKPayment, completion: @escaping (PKPaymentAuthorizationStatus) -> Void) { //Perform some very basic validation on the provided contact information let asyncSuccessful = payment.token.paymentData.count != 0 if asyncSuccessful { let payFort = PayFortController.init(enviroment: KPayFortEnviromentSandBox) let request = NSMutableDictionary.init() request.setValue(\u201c100100000\u201d, forKey: \u201camount\u201d) request.setValue(\u201cAUTHORIZATION\u201d, forKey: \u201ccommand\u201d) request.setValue(\u201cUSD\u201d, forKey: \u201ccurrency\u201d) request.setValue(\u201cemail@domain.com\u201d, forKey: \u201ccustomer_email\u201d) request.setValue(\u201cen\u201d, forKey: \u201clanguage\u201d) request.setValue(\u201cmerchant\u201d, forKey: \u201cmerchant_reference\u201d) request.setValue(\u201cgr66zzwW9\u201d , forKey: \u201csdk_token\u201d) request.setValue(\u201cAPPLE_PAY\u201d , forKey: \u201cdigital_wallet\u201d) payFort?.callPayFortForApplePay(withRequest: request, applePay: payment, currentViewController: self , success: { (requestDic, responeDic) in completion(.success) }, faild:{ (requestDic, responeDic, message) in completion(.failure) }) }else { completion(.failure) } }","title":"Get Started"},{"location":"wallets/#apple-pay-sdk-authorization-purchase-request","text":"Placeholder: Sample code for Apple Pay SDK Authorization/Purchase - Request Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Apple Pay SDK Authorization/ Purchase - Request"},{"location":"wallets/#apple-pay-sdk-authorization-purchase-response","text":"Placeholder: Sample code for Apple Pay SDK authorization/Purchase Response in JSON format Every parameter the Merchant sends in the Request should be received by the Merchant in the Response - even the optional ones.","title":"Apple Pay SDK Authorization/ Purchase - Response"},{"location":"wallets/#test-your-wallet-integration","text":"You can checkout this link for testing your wallet integration","title":"Test Your Wallet Integration"},{"location":"wallets/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"wallets/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"},{"location":"wallets1/","text":"PayFort supports MasterPass, Visacheckout and ApplePay MasterPass As another move towards a cashless environment, PayFort provides MasterPass ; a digital wallet that securely stores the buyer\u2019s credit card details and shipping addresses and information, making shopping through thousands of online Merchants simple and convenient. This is fulfilled by enhancing and simplifying the buyer\u2019s digital shopping experience. PAYFORT now supports MasterPass Redirect v7 in addition to v6. Service Endpoints Sandbox POST https://sbcheckout.payfort.com/FortAPI/paymentPage Live POST https://checkout.payfort.com/FortAPI/paymentPage Redirection Integration Flow The Merchant submits a form that includes all the parameters. The Merchant calls the following URL to be redirected to the FORT: https://checkout.payfort.com/FortAPI/paymentPage The FORT returns a response to the Merchant. The FORT inserts the response parameters into a JavaScript. A lightbox appears to the buyer where he enters his credentials, selects the card type and the shipping address, and clicks \u201cFinish Shopping\u201d. The FORT either proceeds to Authorize or Purchase the payment based on the value of the command parameter sent in the Merchant\u2019s form. If the Merchant sent the \u201cpayment_option\u201d value in his request, the FORT will use the value found in the request, no matter what other options are supported by the Merchant. However, if this value wasn\u2019t sent in the Merchant\u2019s request, the FORT will retrieve all the payment options supported by the Merchant. The FORT returns a response to the Merchant.(Please refer to section MasterPass Service - Response for the Response Parameters). In the Redirection work flow, the \u201cChannel\u201d will always be considered redirection and the \u201cDefault Operation\u201d won\u2019t be considered. Parameters Submission Type HTTPs Form Post Request. Service Request Example Below is the sample html request. <form action=\"https://sbcheckout.payfort.com/FortAPI/paymentPage\"method=\"post\"id=\"simulatorForm\"> <input type=\"hidden\" name=\"digital_wallet\" id=\"digital_wallet\" value=\"MASTERPASS\"/> <input type=\"hidden\" name=\"command\"id=\"command\" value=\"AUTHORIZATION\"/> <input type=\"hidden\" name=\"access_code\" id=\"access_code\" value=\"zx0IPmPy5jp1vAz\"/> <input type=\"hidden\" name=\"merchant_identifier\" id=\"merchant_identifier\" value=\"CycHZxVj\"/> <input type=\"hidden\" name=\"merchant_reference\" id=\"merchant_reference\" value=\"XYZ9239-yu898\"/> <input type=\"hidden\" name=\"amount\" id=\"amount\" value=\"10000\"/> <input type=\"hidden\" name=\"currency\" id=\"currency\" value=\"AED\"/> <input type=\"hidden\" name=\"language\" id=\"language\" value=\"en\"/> <input type=\"hidden\" name=\"customer_email\" id=\"customer_email\" value=\"someone@email.com\"/> <input type=\"hidden\" name=\"signature\" id=\"signature\" value=\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\"/> <input type=\"hidden\" name=\"payment_option\"id=\"payment_option\" value=\"VISA\"/> <input type=\"hidden\" name=\"order_description\" id=\"order_description\" value=\"iPhone 6-S\"/> <input type=\"hidden\" name=\"customer_ip\" id=\"customer_ip\" value=\"192.178.1.10\"/> <input type=\"hidden\" name=\"customer_name\" id=\"customer_name\" value=\"John Smith\"/> <input type=\"hidden\" name=\"cart_details\" id=\"cart_details\" value='{\"sub_total\":\"900\",\"cart_items\":[{\"item_description\":\"Xbox\",\"item_image\":\"http://image.com\",\"item_name\":\"Xbo x 360\",\"item_price\":\"300\",\"item_quantity\":\"2\"},{\"item_description\":\"Playstation 3\",\"item_image\":\"http://image.com\",\"item_name\":\"Playstation 3\",\"item_price\":\"150\",\"item_quantity\":\"2\"}]}'/> <input type=\"hidden\" name=\"return_url\" id=\"return_url\" value=\"http://backtothemerchanturl.com\"/> <input value=\"Send\" type=\"submit\"> </form> The following is an example for \u201ccart_details\u201d parameter: <input type=\u201chidden\u201d name=\u201ccart_details\u201d id=\u201ccart_details\u201d value= \u2019{ \u201csub_total\u201d:\u201c900\u201d, \u201ccart_items\u201d:[{ \u201citem_description\u201d:\u201cXbox\u201d, \u201citem_image\u201d:\u201chttp://image.com\u201d, \u201citem_name\u201d:\u201cXbox 360\u201d, \u201citem_price\u201d:\u201c300\u201d, \u201citem_quantity\u201d:\u201c2\u201d},{ \u201citem_description\u201d:\u201cPlaystation 3\u201d, \u201citem_image\u201d:\u201chttp://image.com\u201d, \u201citem_name\u201d:\u201cPlaystation 3\u201d, \u201citem_price\u201d:\u201c150\u201d, \u201citem_quantity\u201d:\u201c2\u201d}]}\u2019/> Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000. MasterPass Hosted Masterpass Hosted accepts digital wallet transactions without redirection to Masterpass pages and instead; it will be hosted on the Merchant website. VisaCheckout Visa Checkout is a digital wallet that securely stores the buyer\u2019s credit card details and shipping addresses and information, making shopping through thousands of online Merchants simple and convenient. This service enhances and simplifies the buyer\u2019s online shopping experience. Visa Checkout can be offered through two different integrations: Merchant Hosted Checkout Button. PayFort Hosted Checkout Button. Merchant Hosted Checkout Button Integration Flow This integration allows the you to host Visa Checkout button on his website giving him maximum control over the look and feel and user experience. The following steps describe how this integration works: You should include the following JavaScript in the HTML header of its checkout page. This JavaScript loads the Visa Checkout library and defines handlers to initialization and payment events. <head> <script type=\"text/javascript\"> function onVisaCheckoutReady() { V.init({ apikey : \u201c#API_KEY#\u201d, // This will be provided by PayFort externalProfileId : \u201c#PROFILE_NAME#\u201d, // This will be provided by PayFort settings : { locale : \u201cen_AE\u201d, countryCode : \u201cAE\u201d, // depends on ISO-3166-1 alpha-2 standard codes review : { message : \u201cMerchant defined message\u201d, // buttonAction : \u201cContinue\u201d // The button label }, threeDSSetup : { threeDSActive : \u201cfalse\u201d // true to enable the 3ds false to disable it } }, paymentRequest : { currencyCode : \u201cUSD\u201d, //depends on ISO 4217 standard alpha-3 code values subtotal : \u201c10.00\u201d, // Subtotal of the payment. } }); V.on(\u201cpayment.success\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when received success operation }); V.on(\u201cpayment.cancel\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when cancel operation }); V.on(\u201cpayment.error\u201d, function(payment, error) { document.write(JSON.stringify(payment));// response when received error operation document.write(error); }); } </script> </head> You should use the following class to render Visa Checkout button that a consumer clicks to initiate a payment. <body> <img alt=\u201cVisa Checkout\u201d class=\u201cv-button\u201d role=\u201cbutton\u201d src=\u201chttps://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?cardBrands=VISA,MASTERCARD\u201d /> </body> #### Endpoints Sandbox https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png Live https://secure.checkout.visa.com/wallet-services-web/xo/button.png You should use the following JavaScript to control the operation on Visa Checkout on the website. <body> <script type=\u201ctext/javascript\u201d src=\u201chttps://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js\u201d> </script> </body> #### Endpoints Sandbox https://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js Live https://assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js After completing the previous steps, the consumer clicks on Visa Checkout button, Visa Checkout light box appears and the user complete the checkout process. You will receive a successful response. The response associated with the payment success event returns list of parameters. The Merchant has to collect the value of \u201ccall_id\u201d parameter to be used in the following step. You submit Purchase request to the FORT adding 2 extra parameters: digital-wallet, call_id. Please refer to Merchant Hosted Visa Checkout - Request for more details. Merchants Page should be activated to accept Purchase and Authorization transactions The Merchant system receives the FORT\u2019s purchase request and then uses Visa Checkout update image pixel. Below you can find an example of how to use Visa Checkout update image pixel. Please refer to \u201cVisa checkout PayFort documentation\u201d for more details. <img src=\u201chttps://sandbox.secure.checkout.visa.com/wallet-services-web/payment/updatepaymentinfo.gif?apikey=\u2026&callId=\u2026&currencyCode=USD&total=11.00&subtotal=11.00\u201d /> The following example shows an HTML web page that loads the Visa Checkout library, defines handlers for initialization and payment events, and creates a Visa Checkout button: <html> <head> <script type=\u201ctext/javascript\u201d> function onVisaCheckoutReady() { V.init({ apikey : \u201c#API_KEY#\u201d, // This will be provided by PayFort externalProfileId : \u201c#PROFILE_NAME#\u201d, // This will be provided by PayFort settings : { locale : \u201cen_AE\u201d, countryCode : \u201cAE\u201d, // depends on ISO-3166-1 alpha-2 standard codes review : { message : \u201cMerchant defined message\u201d, // buttonAction : \u201cContinue\u201d // The button label }, threeDSSetup : { threeDSActive : \u201cfalse\u201d // true to enable the 3ds false to disable it } }, paymentRequest : { currencyCode : \u201cUSD\u201d, //depends on ISO 4217 standard alpha-3 code values subtotal : \u201c10.00\u201d, // Subtotal of the payment. } }); V.on(\u201cpayment.success\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when received success operation }); V.on(\u201cpayment.cancel\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when cancel operation }); V.on(\u201cpayment.error\u201d, function(payment, error) { document.write(JSON.stringify(payment));// response when received error operation document.write(error); }); } </script> </head> <body> <img alt=\u201cVisa Checkout\u201d class=\u201cv-button\u201d role=\u201cbutton\"src=\"https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?cardBrands=VISA,MASTERCARD,DISCOVER,AMEX\u201d /> <script type=\u201ctext/javascript\u201d src=\u201chttps://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js\u201d> </script> </body> </html> Apple Pay Apple Pay provides an easy way for users to buy goods and services using iPhone, iPad and Apple Watch through mobile application or website. Checking out is as easy as selecting \u201cApple Pay\u201d and placing a finger on the touch ID of an iPhone, iPad or simply double clicking the side button on the Apple Watch. It\u2019s quick, easy and secure! When using a credit or debit card with Apple Pay, the actual card numbers are not stored on the device, nor on Apple servers. Instead, a unique Device Account Number is assigned, encrypted and securely stored in the Secure Element on your device, where each transaction is authorized with a one-time unique dynamic security code. Setting Up Apple Pay Kindly visit developer.apple.com where you will Create a developer account, an Apple Pay Merchant ID and complete the Apple Pay certification (export the payment processing certificate in p12 file) Integrate Apple Pay in your app/website using the Apple Pay documentation found at https://developer.apple.com/apple-pay Submit the encrypted Apple Pay payload to PayFort\u2019s API for decryption / processing. Please contact integration@payfort.com for PayFort\u2019s integration documentation Test Your Wallet Integration You can checkout this link for testing your wallet integration Go to Full API Check out our full API by visiting this link Need further help? Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Wallets1"},{"location":"wallets1/#masterpass","text":"As another move towards a cashless environment, PayFort provides MasterPass ; a digital wallet that securely stores the buyer\u2019s credit card details and shipping addresses and information, making shopping through thousands of online Merchants simple and convenient. This is fulfilled by enhancing and simplifying the buyer\u2019s digital shopping experience. PAYFORT now supports MasterPass Redirect v7 in addition to v6.","title":"MasterPass"},{"location":"wallets1/#service-endpoints","text":"","title":"Service Endpoints"},{"location":"wallets1/#sandbox","text":"POST https://sbcheckout.payfort.com/FortAPI/paymentPage","title":"Sandbox"},{"location":"wallets1/#live","text":"POST https://checkout.payfort.com/FortAPI/paymentPage","title":"Live"},{"location":"wallets1/#redirection","text":"","title":"Redirection"},{"location":"wallets1/#integration-flow","text":"The Merchant submits a form that includes all the parameters. The Merchant calls the following URL to be redirected to the FORT: https://checkout.payfort.com/FortAPI/paymentPage The FORT returns a response to the Merchant. The FORT inserts the response parameters into a JavaScript. A lightbox appears to the buyer where he enters his credentials, selects the card type and the shipping address, and clicks \u201cFinish Shopping\u201d. The FORT either proceeds to Authorize or Purchase the payment based on the value of the command parameter sent in the Merchant\u2019s form. If the Merchant sent the \u201cpayment_option\u201d value in his request, the FORT will use the value found in the request, no matter what other options are supported by the Merchant. However, if this value wasn\u2019t sent in the Merchant\u2019s request, the FORT will retrieve all the payment options supported by the Merchant. The FORT returns a response to the Merchant.(Please refer to section MasterPass Service - Response for the Response Parameters). In the Redirection work flow, the \u201cChannel\u201d will always be considered redirection and the \u201cDefault Operation\u201d won\u2019t be considered.","title":"Integration Flow"},{"location":"wallets1/#parameters-submission-type","text":"HTTPs Form Post Request.","title":"Parameters Submission Type"},{"location":"wallets1/#service-request-example","text":"Below is the sample html request. <form action=\"https://sbcheckout.payfort.com/FortAPI/paymentPage\"method=\"post\"id=\"simulatorForm\"> <input type=\"hidden\" name=\"digital_wallet\" id=\"digital_wallet\" value=\"MASTERPASS\"/> <input type=\"hidden\" name=\"command\"id=\"command\" value=\"AUTHORIZATION\"/> <input type=\"hidden\" name=\"access_code\" id=\"access_code\" value=\"zx0IPmPy5jp1vAz\"/> <input type=\"hidden\" name=\"merchant_identifier\" id=\"merchant_identifier\" value=\"CycHZxVj\"/> <input type=\"hidden\" name=\"merchant_reference\" id=\"merchant_reference\" value=\"XYZ9239-yu898\"/> <input type=\"hidden\" name=\"amount\" id=\"amount\" value=\"10000\"/> <input type=\"hidden\" name=\"currency\" id=\"currency\" value=\"AED\"/> <input type=\"hidden\" name=\"language\" id=\"language\" value=\"en\"/> <input type=\"hidden\" name=\"customer_email\" id=\"customer_email\" value=\"someone@email.com\"/> <input type=\"hidden\" name=\"signature\" id=\"signature\" value=\"7cad05f0212ed933c9a5d5dffa31661acf2c827a\"/> <input type=\"hidden\" name=\"payment_option\"id=\"payment_option\" value=\"VISA\"/> <input type=\"hidden\" name=\"order_description\" id=\"order_description\" value=\"iPhone 6-S\"/> <input type=\"hidden\" name=\"customer_ip\" id=\"customer_ip\" value=\"192.178.1.10\"/> <input type=\"hidden\" name=\"customer_name\" id=\"customer_name\" value=\"John Smith\"/> <input type=\"hidden\" name=\"cart_details\" id=\"cart_details\" value='{\"sub_total\":\"900\",\"cart_items\":[{\"item_description\":\"Xbox\",\"item_image\":\"http://image.com\",\"item_name\":\"Xbo x 360\",\"item_price\":\"300\",\"item_quantity\":\"2\"},{\"item_description\":\"Playstation 3\",\"item_image\":\"http://image.com\",\"item_name\":\"Playstation 3\",\"item_price\":\"150\",\"item_quantity\":\"2\"}]}'/> <input type=\"hidden\" name=\"return_url\" id=\"return_url\" value=\"http://backtothemerchanturl.com\"/> <input value=\"Send\" type=\"submit\"> </form> The following is an example for \u201ccart_details\u201d parameter: <input type=\u201chidden\u201d name=\u201ccart_details\u201d id=\u201ccart_details\u201d value= \u2019{ \u201csub_total\u201d:\u201c900\u201d, \u201ccart_items\u201d:[{ \u201citem_description\u201d:\u201cXbox\u201d, \u201citem_image\u201d:\u201chttp://image.com\u201d, \u201citem_name\u201d:\u201cXbox 360\u201d, \u201citem_price\u201d:\u201c300\u201d, \u201citem_quantity\u201d:\u201c2\u201d},{ \u201citem_description\u201d:\u201cPlaystation 3\u201d, \u201citem_image\u201d:\u201chttp://image.com\u201d, \u201citem_name\u201d:\u201cPlaystation 3\u201d, \u201citem_price\u201d:\u201c150\u201d, \u201citem_quantity\u201d:\u201c2\u201d}]}\u2019/> Before sending the amount value of any transaction, you have to multiply the value with the currency decimal code according to ISO code 3. For example: If the amount value was 500 AED; according to ISO code 3, you should multiply the value with 100 (2 decimal points); so it will be sent in the request as 50000. Another example: If the amount value was 100 JOD; according to ISO code 3, you should multiply the value with 1000 (3 decimal points); so it will be sent in the request as 100000.","title":"Service Request Example"},{"location":"wallets1/#masterpass-hosted","text":"Masterpass Hosted accepts digital wallet transactions without redirection to Masterpass pages and instead; it will be hosted on the Merchant website.","title":"MasterPass Hosted"},{"location":"wallets1/#visacheckout","text":"Visa Checkout is a digital wallet that securely stores the buyer\u2019s credit card details and shipping addresses and information, making shopping through thousands of online Merchants simple and convenient. This service enhances and simplifies the buyer\u2019s online shopping experience. Visa Checkout can be offered through two different integrations: Merchant Hosted Checkout Button. PayFort Hosted Checkout Button.","title":"VisaCheckout"},{"location":"wallets1/#merchant-hosted-checkout-button","text":"","title":"Merchant Hosted Checkout Button"},{"location":"wallets1/#integration-flow_1","text":"This integration allows the you to host Visa Checkout button on his website giving him maximum control over the look and feel and user experience. The following steps describe how this integration works: You should include the following JavaScript in the HTML header of its checkout page. This JavaScript loads the Visa Checkout library and defines handlers to initialization and payment events. <head> <script type=\"text/javascript\"> function onVisaCheckoutReady() { V.init({ apikey : \u201c#API_KEY#\u201d, // This will be provided by PayFort externalProfileId : \u201c#PROFILE_NAME#\u201d, // This will be provided by PayFort settings : { locale : \u201cen_AE\u201d, countryCode : \u201cAE\u201d, // depends on ISO-3166-1 alpha-2 standard codes review : { message : \u201cMerchant defined message\u201d, // buttonAction : \u201cContinue\u201d // The button label }, threeDSSetup : { threeDSActive : \u201cfalse\u201d // true to enable the 3ds false to disable it } }, paymentRequest : { currencyCode : \u201cUSD\u201d, //depends on ISO 4217 standard alpha-3 code values subtotal : \u201c10.00\u201d, // Subtotal of the payment. } }); V.on(\u201cpayment.success\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when received success operation }); V.on(\u201cpayment.cancel\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when cancel operation }); V.on(\u201cpayment.error\u201d, function(payment, error) { document.write(JSON.stringify(payment));// response when received error operation document.write(error); }); } </script> </head> You should use the following class to render Visa Checkout button that a consumer clicks to initiate a payment. <body> <img alt=\u201cVisa Checkout\u201d class=\u201cv-button\u201d role=\u201cbutton\u201d src=\u201chttps://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?cardBrands=VISA,MASTERCARD\u201d /> </body> #### Endpoints Sandbox https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png Live https://secure.checkout.visa.com/wallet-services-web/xo/button.png You should use the following JavaScript to control the operation on Visa Checkout on the website. <body> <script type=\u201ctext/javascript\u201d src=\u201chttps://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js\u201d> </script> </body> #### Endpoints Sandbox https://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js Live https://assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js After completing the previous steps, the consumer clicks on Visa Checkout button, Visa Checkout light box appears and the user complete the checkout process. You will receive a successful response. The response associated with the payment success event returns list of parameters. The Merchant has to collect the value of \u201ccall_id\u201d parameter to be used in the following step. You submit Purchase request to the FORT adding 2 extra parameters: digital-wallet, call_id. Please refer to Merchant Hosted Visa Checkout - Request for more details. Merchants Page should be activated to accept Purchase and Authorization transactions The Merchant system receives the FORT\u2019s purchase request and then uses Visa Checkout update image pixel. Below you can find an example of how to use Visa Checkout update image pixel. Please refer to \u201cVisa checkout PayFort documentation\u201d for more details. <img src=\u201chttps://sandbox.secure.checkout.visa.com/wallet-services-web/payment/updatepaymentinfo.gif?apikey=\u2026&callId=\u2026&currencyCode=USD&total=11.00&subtotal=11.00\u201d /> The following example shows an HTML web page that loads the Visa Checkout library, defines handlers for initialization and payment events, and creates a Visa Checkout button: <html> <head> <script type=\u201ctext/javascript\u201d> function onVisaCheckoutReady() { V.init({ apikey : \u201c#API_KEY#\u201d, // This will be provided by PayFort externalProfileId : \u201c#PROFILE_NAME#\u201d, // This will be provided by PayFort settings : { locale : \u201cen_AE\u201d, countryCode : \u201cAE\u201d, // depends on ISO-3166-1 alpha-2 standard codes review : { message : \u201cMerchant defined message\u201d, // buttonAction : \u201cContinue\u201d // The button label }, threeDSSetup : { threeDSActive : \u201cfalse\u201d // true to enable the 3ds false to disable it } }, paymentRequest : { currencyCode : \u201cUSD\u201d, //depends on ISO 4217 standard alpha-3 code values subtotal : \u201c10.00\u201d, // Subtotal of the payment. } }); V.on(\u201cpayment.success\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when received success operation }); V.on(\u201cpayment.cancel\u201d, function(payment) { document.write(JSON.stringify(payment)); // response when cancel operation }); V.on(\u201cpayment.error\u201d, function(payment, error) { document.write(JSON.stringify(payment));// response when received error operation document.write(error); }); } </script> </head> <body> <img alt=\u201cVisa Checkout\u201d class=\u201cv-button\u201d role=\u201cbutton\"src=\"https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?cardBrands=VISA,MASTERCARD,DISCOVER,AMEX\u201d /> <script type=\u201ctext/javascript\u201d src=\u201chttps://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js\u201d> </script> </body> </html>","title":"Integration Flow"},{"location":"wallets1/#apple-pay","text":"Apple Pay provides an easy way for users to buy goods and services using iPhone, iPad and Apple Watch through mobile application or website. Checking out is as easy as selecting \u201cApple Pay\u201d and placing a finger on the touch ID of an iPhone, iPad or simply double clicking the side button on the Apple Watch. It\u2019s quick, easy and secure! When using a credit or debit card with Apple Pay, the actual card numbers are not stored on the device, nor on Apple servers. Instead, a unique Device Account Number is assigned, encrypted and securely stored in the Secure Element on your device, where each transaction is authorized with a one-time unique dynamic security code.","title":"Apple Pay"},{"location":"wallets1/#setting-up-apple-pay","text":"Kindly visit developer.apple.com where you will Create a developer account, an Apple Pay Merchant ID and complete the Apple Pay certification (export the payment processing certificate in p12 file) Integrate Apple Pay in your app/website using the Apple Pay documentation found at https://developer.apple.com/apple-pay Submit the encrypted Apple Pay payload to PayFort\u2019s API for decryption / processing. Please contact integration@payfort.com for PayFort\u2019s integration documentation","title":"Setting Up Apple Pay"},{"location":"wallets1/#test-your-wallet-integration","text":"You can checkout this link for testing your wallet integration","title":"Test Your Wallet Integration"},{"location":"wallets1/#go-to-full-api","text":"Check out our full API by visiting this link","title":"Go to Full API"},{"location":"wallets1/#need-further-help","text":"Thanks for using PayFort.com. If you need any help or support, then message our support team at support@payfort.com .","title":"Need further help?"}]}